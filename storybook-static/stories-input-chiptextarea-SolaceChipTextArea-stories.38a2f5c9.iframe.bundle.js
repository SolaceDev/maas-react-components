(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[9294],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{aD:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/stories/input/chiptextarea/SolaceChipTextArea.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Controlled:()=>Controlled,CustomValidation:()=>CustomValidation,CustomWidth:()=>CustomWidth,DefaultTextAreaWithChips:()=>DefaultTextAreaWithChips,WithPredefinedChips:()=>WithPredefinedChips,WithValidationErrors:()=>WithValidationErrors,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../dist/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),_storybook_test__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const DEMO_TITLE="Demo Chip Text Area",DEMO_PLACEHOLDER="Enter email addresses (Placeholder)",DEMO_HELPER_TEXT="This is helper text for the text area";_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceChipTextArea.displayName="SolaceChipTextArea";const emailValidationFunction=text=>{if(!text)return;return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(text)?void 0:"Invalid email format"},__WEBPACK_DEFAULT_EXPORT__={title:"Input/Textfield/Text Area with Chips",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceChipTextArea,parameters:{docs:{description:{component:"Chip Text Area component for entering texts separated by comma, semi colon or space- that get converted into chips. Code component name: SolaceChipTextArea"}}},argTypes:{id:{control:{type:"text"},description:"Unique identifier for the chip textarea component. If not specified, name value will be used to make label and helperText accessible for screen readers.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},name:{control:{type:"text"},description:"Name attribute to assign to the input element.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},label:{control:{type:"text"},description:"The label content to display on the screen.",table:{type:{summary:"string | JSX.Element"},defaultValue:{summary:"undefined"}}},value:{control:{type:"text"},description:"The value of the input element, required for controlled component.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},helperText:{control:{type:"text"},description:"Content to display as supportive/explanatory text.",table:{type:{summary:"string | JSX.Element"},defaultValue:{summary:"undefined"}}},maxLength:{control:{type:"number"},description:"The maximum number of characters which can be typed as the input value.",table:{type:{summary:"number"},defaultValue:{summary:"constants.maxLength"}}},title:{control:{type:"text"},description:"The text to display as the tooltip hint.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},autoFocus:{control:{type:"boolean"},description:"Boolean flag to control whether the input element is focused during first mount.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},hasErrors:{control:{type:"boolean"},description:"Boolean flag to mark the input in error state.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},hasWarnings:{control:{type:"boolean"},description:"If true, displays the chip textarea in a warning state with amber styling. Use this to indicate potential issues or cautionary information about the chip textarea content.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},required:{control:{type:"boolean"},description:"Boolean flag used to display an indicator of whether or not this input is mandatory.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},inlineLabel:{control:{type:"boolean"},description:"Boolean flag to control whether to stack the label on top of the input element (false) or place them inline to one another (true).",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},width:{control:{type:"text"},description:"Custom width of the component.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},onChange:{description:"Callback function to trigger whenever the value of the input is changed."},validateChip:{description:"Callback function to validate the text before converting to a chip. Returns undefined if valid, or an error message if invalid."},dataQa:{control:{type:"text"},description:"Data attribute for QA testing.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},dataTags:{control:{type:"text"},description:"Data attribute for additional tagging.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}}}},DefaultTextAreaWithChips={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("onChange"),title:DEMO_TITLE,id:"demoChipTextAreaId",name:"demoChipTextArea",value:"",placeholder:DEMO_PLACEHOLDER,helperText:DEMO_HELPER_TEXT,label:"Demo Label"},play:async _ref=>{let{canvasElement}=_ref;const inputElement=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_3__.uh)(canvasElement).getByRole("textbox");await _storybook_test__WEBPACK_IMPORTED_MODULE_3__.mV.click(inputElement);for(const char of"a@test.com,b@test.com")await _storybook_test__WEBPACK_IMPORTED_MODULE_3__.mV.type(inputElement,char,{delay:50});await _storybook_test__WEBPACK_IMPORTED_MODULE_3__.mV.keyboard("{Enter}"),await new Promise((resolve=>setTimeout(resolve,100)))}},WithPredefinedChips={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("onChange"),title:DEMO_TITLE,id:"demoChipTextAreaId",name:"demoChipTextArea",placeholder:DEMO_PLACEHOLDER,helperText:DEMO_HELPER_TEXT,label:"Demo Label",validateChip:emailValidationFunction,value:"demo@example.com, another@example.com"}},WithValidationErrors={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("onChange"),title:DEMO_TITLE,id:"demoChipTextAreaId",name:"demoChipTextArea",placeholder:DEMO_PLACEHOLDER,helperText:DEMO_HELPER_TEXT,label:"Demo Label",validateChip:emailValidationFunction,value:"demo@example.com, invalid-email",hasErrors:!0}},CustomWidth={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("onChange"),title:DEMO_TITLE,id:"demoChipTextAreaId",name:"demoChipTextArea",placeholder:DEMO_PLACEHOLDER,helperText:DEMO_HELPER_TEXT,label:"Demo Label",validateChip:emailValidationFunction,width:"50%"}},CustomValidation={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("onChange"),title:DEMO_TITLE,id:"demoChipTextAreaId",name:"demoChipTextArea",placeholder:DEMO_PLACEHOLDER,helperText:"Only example.com email addresses are allowed",label:"Demo Label",validateChip:text=>{if(!text.endsWith("@example.com"))return"Only example.com email addresses are allowed"}}},Controlled={render:_ref2=>{let{name,...args}=_ref2;const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(args.value||"");return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceChipTextArea,_extends({value,name,onChange:e=>{setValue(e.value),(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("onChange")(e)}},args))},args:{name:"controlledChipTextArea",label:"Controlled Chip Text Area",validateChip:emailValidationFunction,placeholder:DEMO_PLACEHOLDER,helperText:"The value of the text area is controlled by the change handler in the story.",value:"demo@example.com"}};DefaultTextAreaWithChips.parameters={...DefaultTextAreaWithChips.parameters,docs:{...DefaultTextAreaWithChips.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("onChange"),\n    title: DEMO_TITLE,\n    id: "demoChipTextAreaId",\n    name: "demoChipTextArea",\n    value: "",\n    // Start with empty value to demonstrate typing\n    placeholder: DEMO_PLACEHOLDER,\n    helperText: DEMO_HELPER_TEXT,\n    label: DEMO_LABEL\n  },\n  play: simulateTypingEmail\n}',...DefaultTextAreaWithChips.parameters?.docs?.source}}},WithPredefinedChips.parameters={...WithPredefinedChips.parameters,docs:{...WithPredefinedChips.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("onChange"),\n    title: DEMO_TITLE,\n    id: "demoChipTextAreaId",\n    name: "demoChipTextArea",\n    placeholder: DEMO_PLACEHOLDER,\n    helperText: DEMO_HELPER_TEXT,\n    label: DEMO_LABEL,\n    validateChip: emailValidationFunction,\n    value: `${DEMO_EMAIL}, another@example.com`\n  }\n}',...WithPredefinedChips.parameters?.docs?.source}}},WithValidationErrors.parameters={...WithValidationErrors.parameters,docs:{...WithValidationErrors.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("onChange"),\n    title: DEMO_TITLE,\n    id: "demoChipTextAreaId",\n    name: "demoChipTextArea",\n    placeholder: DEMO_PLACEHOLDER,\n    helperText: DEMO_HELPER_TEXT,\n    label: DEMO_LABEL,\n    validateChip: emailValidationFunction,\n    value: `${DEMO_EMAIL}, invalid-email`,\n    hasErrors: true\n  }\n}',...WithValidationErrors.parameters?.docs?.source}}},CustomWidth.parameters={...CustomWidth.parameters,docs:{...CustomWidth.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("onChange"),\n    title: DEMO_TITLE,\n    id: "demoChipTextAreaId",\n    name: "demoChipTextArea",\n    placeholder: DEMO_PLACEHOLDER,\n    helperText: DEMO_HELPER_TEXT,\n    label: DEMO_LABEL,\n    validateChip: emailValidationFunction,\n    width: "50%"\n  }\n}',...CustomWidth.parameters?.docs?.source}}},CustomValidation.parameters={...CustomValidation.parameters,docs:{...CustomValidation.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("onChange"),\n    title: DEMO_TITLE,\n    id: "demoChipTextAreaId",\n    name: "demoChipTextArea",\n    placeholder: DEMO_PLACEHOLDER,\n    helperText: "Only example.com email addresses are allowed",\n    label: DEMO_LABEL,\n    validateChip: (text: string) => {\n      if (!text.endsWith("@example.com")) {\n        return "Only example.com email addresses are allowed";\n      }\n      return undefined;\n    }\n  }\n}',...CustomValidation.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:'{\n  render: ControlledComponent,\n  args: {\n    name: "controlledChipTextArea",\n    label: "Controlled Chip Text Area",\n    validateChip: emailValidationFunction,\n    placeholder: DEMO_PLACEHOLDER,\n    helperText: "The value of the text area is controlled by the change handler in the story.",\n    value: DEMO_EMAIL\n  }\n}',...Controlled.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultTextAreaWithChips","WithPredefinedChips","WithValidationErrors","CustomWidth","CustomValidation","Controlled"]},"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext}}]);