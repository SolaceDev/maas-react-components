{
  "componentName": "SolaceTextField",
  "totalUsages": 197,
  "usagesByMfe": {
    "ep": 71,
    "intg": 35,
    "mc": 21,
    "saas": 34,
    "maas-ops-react": 36
  },
  "commonProps": [
    {
      "name": "name",
      "count": 197
    },
    {
      "name": "value",
      "count": 188
    },
    {
      "name": "onChange",
      "count": 156
    },
    {
      "name": "dataQa",
      "count": 147
    },
    {
      "name": "hasErrors",
      "count": 113
    },
    {
      "name": "helperText",
      "count": 111
    },
    {
      "name": "label",
      "count": 99
    },
    {
      "name": "readOnly",
      "count": 71
    },
    {
      "name": "required",
      "count": 64
    },
    {
      "name": "onBlur",
      "count": 52
    }
  ],
  "files": [
    "../../../maas-ui/micro-frontends/ep/src/components/topology/AddExistingMessagingServiceDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/topology/MEMDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SchemaRegistryConfigCard.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SolaceManagementTab.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SolaceMessagingTab.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SchemaRegistryAuthList.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/KafkaAuthList.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SolaceMessagingServiceDialogCard.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/topology/MessagingServiceDetail.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/topology/MessagingServiceDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/entityList/environment/AddApplicationToEnvironment.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/CustomAttributes/CustomAttributeDefinition.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/CustomAttributes/CustomAttributesEditor.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/designer/details/EntityVersionBaseForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/designer/details/DuplicateVersionDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/designer/topicAddress/ConfigVariableDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useEntityNameTextField.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useCreateApplicationDomainTextField.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useEntityVersionTextField.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useCreateApplicationTextField.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/runtimeAgents/RuntimeAgentForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/runtimeAgents/ExistingMessagingServices.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/runtime/ScanLogsDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/import/CreateNewSingleEventDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/templates/ConfigurationTemplateEdit.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/templates/ClientProfileName.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/resources/LearningCenterInviteUsersCard.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RESTDeliveryPointQueueBinding.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RequestHeaderDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RESTDeliveryPointConfiguration.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/ManageClientProfileName.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/domains/export/DomainExportPreviewDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/enumerations/EnumerationForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/sidePanel/customAttributePanel/CustomAttributeForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/sidePanel/EntityAndVersionEditor.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/SearchSharedEventsDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/NodeNameEditor.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/manageEventApisSideBar/SearchEventAPIs.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/manageEventApisSideBar/topicFilters/TopicFilterForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/EventApiForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/Policies.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/VersionPlansForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/EventApiProductForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/schemas/SchemaForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/consumers/ConsumerItemForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/DomainForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/TopicAddressResources.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/EventForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/schemaDrawer/SearchSchemas.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/schemaDrawer/SelectSchemaVersion.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/schemaDrawer/QuickCreateSchema.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/QuickCreateEvent.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/SearchEvents.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/ApplicationForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/SearchApplications.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/AddSubscriptionFromEventTab/NewConsumerForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/credentials/ManageCredentials.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/aiWizard/components/shared.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/SolaceConnectionDetails.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/EditConstantDialog.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/EditHeaderDialog.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/AddHeaderDialog.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/AddConstantDialog.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/topicHeader/EducationBlurb.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/formUtils/ConnectorFormUtils.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/ConnectorDetails.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/OAuthDetails.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/BasicAuthenticationDetails.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/ClientCertAuthenticationDetails.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/ConnectorEditDetailsTab.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/SolaceConnectionTab.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/HeaderMappingTab.tsx",
    "../../../maas-ui/micro-frontends/mc/src/components/atoms/AtomTextField.tsx",
    "../../../maas-ui/micro-frontends/mc/src/components/dialogs/CustomizeMessageSpoolDialog.tsx",
    "../../../maas-ui/micro-frontends/mc/src/components/dialogs/DeleteServiceDialog.tsx",
    "../../../maas-ui/micro-frontends/mc/src/components/dialogs/RenameServiceDialog.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/dialogs/ConnectionEndpointDialog.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/dialogs/DistributedTracingDeployDialog.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/MessageSpoolSizeCard.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/DistributedTracingCard.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/ServiceAuthenticationCard.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/panels/ServiceAuthentications.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/list/Services.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldMessageStorage.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldPort.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldMsgVpnName.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldName.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/serviceLimits/ServiceLimits.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/environments/components/GridContainer.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/environments/components/EnvironmentsDialog.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/myProfile/MyProfile.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/userGroups/components/CreateEditUserGroupsDialog.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/userGroups/UserGroups.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/accountSettings/ConfigureSettings.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/accountSettings/SetUpSso.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/GroupManagement/GroupManagement.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/GroupManagement/components/ClaimValueRowItem.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/GroupManagement/components/ClaimMapping.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/support/GetSupport.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/accountDetailsOverview/EventPortalLimitsCard.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/accountDetailsOverview/AccountExpiryBanner.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/accountDetailsOverview/AdvancedSettingsSection.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/resetPassword/ResetPassword.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/insightsSettings/components/NotificationTextField.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/privateRegions/components/AvailablePrivateRegions.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/tokenManagement/components/TokenForm.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/TracingDestinationDetails.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/formComponents.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/aggregation/Aggregation.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/organizations/organizationsList/OrganizationsFilter.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/components/ServicesMonitoringConfigurations.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/serviceOperations/ServiceOperations.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/plans/components/plansForm/QueryBuilder.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/plans/components/plansForm/PlansForm.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/runs/components/runsForm/RunsForm.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/search/SearchForm.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/serviceTypes/CreateServiceType.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/serviceTypes/DeleteServicePackage.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/serviceTypes/ManageServiceTypes.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/DrawdownSelection.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/ProductsList.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/BizOpsOrgDetailsForm.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/ProductSubscriptionDialog.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/AccountAdminsSection.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/monitoringDashboard/insightsOrganizations/InsightsOrganizations.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/monitoringDashboard/monitoringJobs/MonitoringJobs.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/privateRegions/components/CloneDialog.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/distributedTracing/CollectorModificationDialog.tsx"
  ],
  "customization": {
    "styledComponentCount": 0,
    "customStylesCount": 0,
    "overriddenPropertiesCounts": {}
  },
  "instances": [
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/AddExistingMessagingServiceDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "searchInput"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "searchInput"
        },
        {
          "name": "placeholder",
          "type": "string",
          "value": "Filter by Name"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "searchText"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSearchTextChange"
        },
        {
          "name": "width",
          "type": "string",
          "value": "50%"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\t\t\t\t\t\t\tsearchText ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<SolaceButton key={\"closeIcon\"} variant=\"icon\" onClick={handleClearSearchText}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t\t\t\t\t\t\t<SearchIcon key=\"searchIcon\" />\n\t\t\t\t\t\t\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/MEMDialog.tsx",
      "props": [
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleNameChange"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "handleNameOnBlur"
        },
        {
          "name": "id",
          "type": "string",
          "value": "eventMesh[name]"
        },
        {
          "name": "name",
          "type": "string",
          "value": "eventMesh[name]"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventMesh[name]"
        },
        {
          "name": "label",
          "type": "variable",
          "value": "LABEL_NAME"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "memContent.name"
        },
        {
          "name": "required",
          "type": "expression",
          "value": "mode === \"create\" || mode === \"edit\""
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "mode === \"view\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!getNameErrorMessage"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "getNameErrorMessage"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "isLoading"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SchemaRegistryConfigCard.tsx",
      "props": [
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventBroker[kafka][schemaRegistry][registryUrl]"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "isDisabled"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!readOnly ? error?.message ?? renderKafkaAuthHelperText(\"registryUrl\") : \"\""
        },
        {
          "name": "id",
          "type": "string",
          "value": "schemaRegistry[registryUrl]"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Registry URL"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "required",
          "type": "variable",
          "value": "required"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SolaceManagementTab.tsx",
      "props": [
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventBroker[solace][management][sempUsername]"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "loading"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error?.message ?? \"\""
        },
        {
          "name": "id",
          "type": "string",
          "value": "eventBroker[solace][management][sempUsername]"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "eventBrokerFormFieldLabels.sempUsername"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "required",
          "type": "variable",
          "value": "required"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SolaceManagementTab.tsx",
      "props": [
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventBroker[solace][management][sempUrl]"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "loading"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error?.message ?? \"\""
        },
        {
          "name": "id",
          "type": "string",
          "value": "eventBroker[solace][management][sempUrl]"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "eventBrokerFormFieldLabels.sempUrl"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "required",
          "type": "variable",
          "value": "required"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SolaceMessagingTab.tsx",
      "props": [
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventBroker[solace][messaging][host]"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "loading"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!readOnly ? error?.message ?? \"e.g. ########.messaging.solace.cloud or 123.89.40.72\" : \"\""
        },
        {
          "name": "id",
          "type": "string",
          "value": "eventBroker[solace][messaging][host]"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "eventBrokerFormFieldLabels.host"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "required",
          "type": "variable",
          "value": "required"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SchemaRegistryAuthList.tsx",
      "props": [
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`eventBroker[kafka][schemaRegistry][${selectedAuthType}][${inputField}]`"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "disabled"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!readOnly ? error?.message ?? helperText : \"\""
        },
        {
          "name": "id",
          "type": "expression",
          "value": "`eventBroker[kafka][schemaRegistry][${selectedAuthType}][${inputField}]`"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "variable",
          "value": "label"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t\t\t\tsetValue(name, value.trim());\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "required",
          "type": "expression",
          "value": "!readOnly && isRequired"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "width",
          "type": "string",
          "value": "100%"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/KafkaAuthList.tsx",
      "props": [
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`eventBroker[kafka][authentication][${authKey}][${inputField}]`"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "disabled"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!readOnly ? error?.message ?? helperText : \"\""
        },
        {
          "name": "id",
          "type": "expression",
          "value": "`eventBroker[kafka][authentication][${KafkaAuthTypes[authKey]}][${inputField}]`"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "eventBrokerFormFieldLabels[inputField]"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "required",
          "type": "variable",
          "value": "isRequired"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/KafkaAuthList.tsx",
      "props": [
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventBroker[kafka][authentication][bootstrapServers]"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!readOnly ? error?.message ?? \"Use a comma (,) to separate the messaging services in the Kafka cluster.\" : \"\""
        },
        {
          "name": "id",
          "type": "string",
          "value": "eventBroker[kafka][authentication][bootstrapServers]"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "eventBrokerFormFieldLabels.bootstrapServers"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "required",
          "type": "variable",
          "value": "required"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "loading || kafkaDelimiterIsNotSet"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SolaceMessagingServiceDialogCard.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error?.message ?? \"\""
        },
        {
          "name": "label",
          "type": "expression",
          "value": "eventBrokerFormFieldLabels.port"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "selectedMode === \"view\""
        },
        {
          "name": "type",
          "type": "string",
          "value": "number"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "width",
          "type": "string",
          "value": "250px"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`eventBroker[solace][messaging][protocol][${index}][port]`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/MessagingServiceDetail.tsx",
      "props": [
        {
          "name": "id",
          "type": "expression",
          "value": "`messagingServiceDetails[${attribute}]`"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "`messagingServiceDetails[${attribute}]`"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`messagingServiceDetails[${attribute}]`"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "attributeValue"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/MessagingServiceDialog.tsx",
      "props": [
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventBroker[name]"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "isLoading"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error?.message ?? \"\""
        },
        {
          "name": "label",
          "type": "expression",
          "value": "eventBrokerFormFieldLabels.name"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "readOnly || !!content.solaceCloudMessagingServiceId"
        },
        {
          "name": "required",
          "type": "expression",
          "value": "!readOnly"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/MessagingServiceDialog.tsx",
      "props": [
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventBroker[solace][messageVpn]"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "isLoading"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error?.message ?? \"\""
        },
        {
          "name": "id",
          "type": "string",
          "value": "eventBroker[solace][messageVpn]"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "eventBrokerFormFieldLabels.messageVPN"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "required",
          "type": "variable",
          "value": "required"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/entityList/environment/AddApplicationToEnvironment.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"authenticationB\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"authenticationB\""
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getCredentialsFieldValue(credentials, \"inputB\")"
        },
        {
          "name": "type",
          "type": "variable",
          "value": "inputBType"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/CustomAttributes/CustomAttributeDefinition.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!nameErrorMsg || !!attributeErrorMsg"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "nameErrorMsg || null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleNameUpdate(e.value);\n\t\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange(value.trim());\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleNameUpdate(value.trim());\n\t\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${caKey}-input`"
        },
        {
          "name": "dataTags",
          "type": "expression",
          "value": "`hasFocus=${customAttribute.hasFocus}`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/CustomAttributes/CustomAttributeDefinition.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!nameErrorMsg || !!attributeErrorMsg"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "nameErrorMsg || null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\t\t\thandleNameUpdate(e.value);\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(value.trim());\n\t\t\t\t\t\t\t\t\t\t\t\thandleNameUpdate(value.trim());\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${caKey}-input`"
        },
        {
          "name": "dataTags",
          "type": "expression",
          "value": "`hasFocus=${customAttribute.hasFocus}`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/CustomAttributes/CustomAttributesEditor.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!errorMsgs[index]"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "errorMsgs[index] || null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst newValue = e.value;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (value !== newValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange(newValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleValueUpdate(index, customAttributeValue, errorMsgs, newValue, valueType);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(value.trim());\n\t\t\t\t\t\t\t\t\t\t\t\thandleValueUpdate(index, customAttributeValue, errorMsgs, value.trim(), valueType);\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${caKey}-value-input`"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "251"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/designer/details/EntityVersionBaseForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? getVersionErrorMessage(value, error) : \"\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(semverValid(e.value.trim()) ?? e.value.trim())"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t\tonUpdateVersionProperty?.(VERSION_PROPERTY.semver, value);\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${versionObjectName}[version]`"
        },
        {
          "name": "autoFocus",
          "type": "expression",
          "value": "mode === \"edit\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/designer/details/EntityVersionBaseForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\tonUpdateVersionProperty?.(VERSION_PROPERTY.display, value.trim());\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${versionObjectName}[displayName]`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/designer/details/DuplicateVersionDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? getVersionErrorMessage(value, error) : \"\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\tconst newValue = e.value.trim();\n\t\t\t\t\t\t\t\t\t\tconst validVersion = semverValid(newValue) ?? newValue;\n\n\t\t\t\t\t\t\t\t\t\tonChange(validVersion);\n\t\t\t\t\t\t\t\t\t\tcheckVersionAndSetWarning(validVersion);\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"DuplicateEntityVersion[version]\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/designer/topicAddress/ConfigVariableDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "name"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Name"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "variableName"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleNameChange"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => handleNameValidate()"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!nameErrorMsg"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "nameErrorMsg"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useEntityNameTextField.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "textFieldName ?? \"entityNameTextField\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa ?? \"\""
        },
        {
          "name": "label",
          "type": "variable",
          "value": "label"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "entityName"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "maxLength",
          "type": "expression",
          "value": "maxLength + 1"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!validationErrorMsg"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "validationErrorMsg"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleEntityNameChange"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "handleOnBlur"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useCreateApplicationDomainTextField.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "createInlineApplicationDomain"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "createInlineApplicationDomain"
        },
        {
          "name": "label",
          "type": "string",
          "value": "New Application Domain Name"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!validationErrorMsg || !!backendErrorMsg"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "validationErrorMsg || backendErrorMsg || SHARE_WARNING"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleEntityNameChange"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "handleOnBlur"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useEntityVersionTextField.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "textFieldName ?? \"entityVersionTextField\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa ?? \"\""
        },
        {
          "name": "label",
          "type": "string",
          "value": "Version"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "version"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!validationErrorMsg"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "validationErrorMsg ? validationErrorMsg : versionTextFieldHelperText"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleVersionChange"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "handleOnBlur"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useCreateApplicationTextField.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "createInlineApplication"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "createInlineApplication"
        },
        {
          "name": "label",
          "type": "string",
          "value": "New Application Name"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!validationErrorMsg || !!backendErrorMsg"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "validationErrorMsg || backendErrorMsg || \"\""
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleEntityNameChange"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "handleOnBlur"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "!domainId"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/runtimeAgents/RuntimeAgentForm.tsx",
      "props": [
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleNameChange"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "handleNameOnBlur"
        },
        {
          "name": "id",
          "type": "string",
          "value": "runtimeAgent[name]"
        },
        {
          "name": "name",
          "type": "string",
          "value": "runtimeAgent[name]"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "runtimeAgent[name]"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "eventManagementAgent.name"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!getNameErrorMessage"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "getNameErrorMessage"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "loading"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/runtimeAgents/RuntimeAgentForm.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "runtimeAgent[id]"
        },
        {
          "name": "name",
          "type": "string",
          "value": "runtimeAgent[id]"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "runtimeAgent[id]"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "agentId"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/runtimeAgents/ExistingMessagingServices.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "searchInput"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "searchInput"
        },
        {
          "name": "placeholder",
          "type": "string",
          "value": "Search"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "searchText"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSearchTextChange"
        },
        {
          "name": "width",
          "type": "string",
          "value": "100%"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\tsearchText ? (\n\t\t\t\t\t\t\t<SolaceButton key={\"closeIcon\"} variant=\"icon\" onClick={handleClearSearchText}>\n\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t<SearchIcon key=\"searchIcon\" />\n\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/runtime/ScanLogsDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"Event Broker\""
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "\"Event Broker\""
        },
        {
          "name": "value",
          "type": "expression",
          "value": "scan.messagingServiceName"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/import/CreateNewSingleEventDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "topicAddress"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Topic Address"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "selectedAudits[0].identifier"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/templates/ConfigurationTemplateEdit.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`detailsName`"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "256"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/templates/ClientProfileName.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "clientProfileName"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : messages[ConfigurationTypeId.solaceClientProfileName].contentFieldHelperText"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\tsetClientProfileName(e.value);\n\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`clientProfileName`"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "33"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/resources/LearningCenterInviteUsersCard.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "email-input"
        },
        {
          "name": "name",
          "type": "string",
          "value": "email-input"
        },
        {
          "name": "type",
          "type": "string",
          "value": "email"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.eventPortalResources.labels.startJourney.inviteUsers.emailAddress"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!isValid ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\ten.eventPortalResources.labels.startJourney.inviteUsers.helperTextError\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{en.eventPortalResources.labels.startJourney.inviteUsers.helperText}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SolaceButton variant=\"link\" dense onClick={handleOpenUserManagement}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{en.eventPortalResources.labels.startJourney.inviteUsers.userManagementLink}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t\t)"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!isValid"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleEmailInput"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "email"
        },
        {
          "name": "fullWidth",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "validateEmail"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RESTDeliveryPointQueueBinding.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\tupdateConfiguration();\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t\tonChange(value?.trim());\n\t\t\t\t\t\t\t\t\t\tupdateConfiguration();\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${configurationName}-postRequestTarget`"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error?.message || \"\""
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "2001"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RequestHeaderDialog.tsx",
      "props": [
        {
          "name": "label",
          "type": "expression",
          "value": "en.application.configuration.restDeliveryPoint.requestHeaderName"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\tvalue && onChange(value.trim());\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "configurationNameRequestHeaderName"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : \"\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RESTDeliveryPointConfiguration.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : en.application.configuration.restDeliveryPoint.restDeliveryPointNameDescription"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\t\t\thandleUpdateRestDeliveryPointName(value);\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t\t\t\thandleUpdateRestDeliveryPointName(value ? value.trim() : \"\");\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`restDeliveryPointName-editor`"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "!getValues(`${formName}.configurationTypeId`)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/ManageClientProfileName.tsx",
      "props": [
        {
          "name": "key",
          "type": "variable",
          "value": "FormCustomizedClientProfileName"
        },
        {
          "name": "id",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "label",
          "type": "expression",
          "value": "messagesConfiguration.solaceClientProfileName.clientProfileName"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (e.value) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetObservedConfiguration(e.value);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(value.trim());\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "33"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domains/export/DomainExportPreviewDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!errorMsg"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "errorMsg || null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\thandleFilenameUpdate(e.value);\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\tonChange(value.trim());\n\t\t\t\t\t\t\t\thandleFilenameUpdate(value.trim());\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`filenameInput`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/enumerations/EnumerationForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onKeyDown",
          "type": "variable",
          "value": "blockEnterKey"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"enumeration[name]\""
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/sidePanel/customAttributePanel/CustomAttributeForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!errorMsgs[index]"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "errorMsgs[index] || null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst newValue = e.value;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (value !== newValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange(newValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleValueUpdate(index, customAttributeValue, errorMsgs, newValue, valueType);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetIsDirty(true);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(value.trim());\n\t\t\t\t\t\t\t\t\t\t\t\thandleValueUpdate(index, customAttributeValue, errorMsgs, value.trim(), valueType);\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${caKey}-value-input`"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "251"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/sidePanel/EntityAndVersionEditor.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? getVersionErrorMessage(value, error) : \"\""
        },
        {
          "name": "onKeyDown",
          "type": "variable",
          "value": "blockEnterKey"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetIsDirty(true);\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst newValue = e.value.trim();\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (semverValid(newValue) !== null) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tcheckIfVersionStillLatestAfterUpdate(newValue, versionId);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(semverValid(newValue) ?? newValue);\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${versionObjectName}[version]`"
        },
        {
          "name": "autoFocus",
          "type": "variable",
          "value": "isDuplicateVersion"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/sidePanel/EntityAndVersionEditor.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\tsetIsDirty(true);\n\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${versionObjectName}[displayName]`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/SearchSharedEventsDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "eventSearchInput"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventSearchInput"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "internalSearchText"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSearchTextChange"
        },
        {
          "name": "fullWidth",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\t\t\tinternalSearchText ? (\n\t\t\t\t\t\t\t\t\t<SolaceButton key={\"closeIcon\"} variant=\"icon\" onClick={() => setInternalSearchText(\"\")}>\n\t\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t\t\t<SearchIcon key=\"searchIcon\" />\n\t\t\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/NodeNameEditor.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "nodeNameTextField"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "appDomain-graph-object-name-field"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "nodeName"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleChange"
        },
        {
          "name": "onKeyDown",
          "type": "variable",
          "value": "handleKeyDown"
        },
        {
          "name": "onFocus",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\tsetTimeout(() => e.target.select(), 100); // Delay to ensure select() works\n\t\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!errorMessage"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "errorMessage"
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "width",
          "type": "expression",
          "value": "`${nameEditorWidth}px`"
        },
        {
          "name": "maxLength",
          "type": "expression",
          "value": "maxNameLength + 1"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/manageEventApisSideBar/SearchEventAPIs.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "eventApiSearchInput"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventApiSearchInput"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "internalSearchText"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSearchTextChange"
        },
        {
          "name": "fullWidth",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\t\tinternalSearchText ? (\n\t\t\t\t\t\t\t\t<SolaceButton key={\"closeIcon\"} variant=\"icon\" onClick={() => setInternalSearchText(\"\")}>\n\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t\t<SearchIcon key=\"searchIcon\" />\n\t\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/manageEventApisSideBar/topicFilters/TopicFilterForm.tsx",
      "props": [
        {
          "name": "id",
          "type": "expression",
          "value": "`${level.name}-${index}`"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error && \"Invalid Format\""
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value.trim())"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "fullWidth",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "minWidth",
          "type": "string",
          "value": "622px"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/EventApiForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"eventApi[name]\""
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "width",
          "type": "expression",
          "value": "\"526px\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/Policies.tsx",
      "props": [
        {
          "name": "id",
          "type": "expression",
          "value": "`maxTTLTextField-${index}`"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value.trim())"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "mode === \"view\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/Policies.tsx",
      "props": [
        {
          "name": "id",
          "type": "expression",
          "value": "`maxMsgSpoolUsageTextField-${index}`"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value.trim())"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "mode === \"view\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/VersionPlansForm.tsx",
      "props": [
        {
          "name": "id",
          "type": "expression",
          "value": "`planNameTextField-${index}`"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/EventApiProductForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onKeyDown",
          "type": "variable",
          "value": "blockEnterKey"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"eventApiProduct[name]\""
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/schemas/SchemaForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onKeyDown",
          "type": "variable",
          "value": "blockEnterKey"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"schema[name]\""
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "2049"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/consumers/ConsumerItemForm.tsx",
      "props": [
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "autoFocus",
          "type": "expression",
          "value": "value === \"\""
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`applicationVersion[consumers].${index}.name`"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "256"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "!isGlobal"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/DomainForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onKeyDown",
          "type": "variable",
          "value": "blockEnterKey"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"applicationDomain[name]\""
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "256"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/TopicAddressResources.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\tonChange(value.trim());\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "topicAddressResourcesDisplayName"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/TopicAddressResources.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\tonChange(value.trim());\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "topicAddressResourcesLink"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "type",
          "type": "string",
          "value": "url"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/EventForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onKeyDown",
          "type": "variable",
          "value": "blockEnterKey"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"event[name]\""
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "2049"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/schemaDrawer/SearchSchemas.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "schemaSearchInput"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "schemaSearchInput"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "internalSearchText"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSearchTextChange"
        },
        {
          "name": "fullWidth",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\t\tinternalSearchText ? (\n\t\t\t\t\t\t\t\t<SolaceButton key={\"closeIcon\"} variant=\"icon\" onClick={handleClearSearchText}>\n\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t\t<SearchIcon key=\"searchIcon\" />\n\t\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/schemaDrawer/SelectSchemaVersion.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "searchInput"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "searchInput"
        },
        {
          "name": "placeholder",
          "type": "string",
          "value": "Search"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "searchText"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSearchTextChange"
        },
        {
          "name": "width",
          "type": "string",
          "value": "100%"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\tsearchText ? (\n\t\t\t\t\t\t\t<SolaceButton key={\"closeIcon\"} variant=\"icon\" onClick={handleClearSearchText}>\n\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t<SearchIcon key=\"searchIcon\" />\n\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/schemaDrawer/QuickCreateSchema.tsx",
      "props": [
        {
          "name": "label",
          "type": "expression",
          "value": "\"Name\""
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onKeyDown",
          "type": "variable",
          "value": "blockEnterKey"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"schema[name]\""
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "2049"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/schemaDrawer/QuickCreateSchema.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "getVersionErrorMessage(value, error)"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(semverValid(e.value.trim()) ?? e.value.trim())"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"schemaVersion[version]\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/QuickCreateEvent.tsx",
      "props": [
        {
          "name": "label",
          "type": "expression",
          "value": "\"Name\""
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onKeyDown",
          "type": "variable",
          "value": "blockEnterKey"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"event[name]\""
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "2049"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/QuickCreateEvent.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "getVersionErrorMessage(value, error)"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(semverValid(e.value.trim()) ?? e.value.trim())"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"eventVersion[version]\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/SearchEvents.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "eventSearchInput"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventSearchInput"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "internalSearchText"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSearchTextChange"
        },
        {
          "name": "fullWidth",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\t\tinternalSearchText ? (\n\t\t\t\t\t\t\t\t<SolaceButton key={\"closeIcon\"} variant=\"icon\" onClick={() => setInternalSearchText(\"\")}>\n\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t\t<SearchIcon key=\"searchIcon\" />\n\t\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/ApplicationForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onKeyDown",
          "type": "variable",
          "value": "blockEnterKey"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"application[name]\""
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "256"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/SearchApplications.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "applicationSearchInput"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "applicationSearchInput"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "internalSearchText"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSearchTextChange"
        },
        {
          "name": "fullWidth",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\t\tinternalSearchText ? (\n\t\t\t\t\t\t\t\t<SolaceButton key={\"closeIcon\"} variant=\"icon\" onClick={() => setInternalSearchText(\"\")}>\n\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t\t<SearchIcon key=\"searchIcon\" />\n\t\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/AddSubscriptionFromEventTab/NewConsumerForm.tsx",
      "props": [
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.common.labels.name"
        },
        {
          "name": "autoFocus",
          "type": "expression",
          "value": "value === \"\""
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`consumerName`"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "256"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/credentials/ManageCredentials.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"configurationInputA\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"configurationInputA\""
        },
        {
          "name": "label",
          "type": "expression",
          "value": "messages.credentials[configuration.typeId].inputA"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "inputA ?? \"\""
        },
        {
          "name": "required",
          "type": "variable",
          "value": "isEditing"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "isLoading"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!inputAValidationError"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "inputAValidationError"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "onChangeInputA"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "!isEditing"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/credentials/ManageCredentials.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"configurationInputB\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"configurationInputB\""
        },
        {
          "name": "label",
          "type": "expression",
          "value": "messages.credentials[configuration.typeId].inputB"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "inputB || \"\""
        },
        {
          "name": "type",
          "type": "variable",
          "value": "inputBType"
        },
        {
          "name": "required",
          "type": "variable",
          "value": "isEditing"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "isLoading || (configuration.inputB.type === \"password\" && !isEditing)"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!inputBValidationError"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "inputBValidationError || messages.credentials[configuration.typeId].inputBSubtext"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "onChangeInputB"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "configuration.inputB.type !== \"password\" && !isEditing"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/aiWizard/components/shared.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "name ?? \"emptyName\""
        },
        {
          "name": "label",
          "type": "expression",
          "value": "label ?? \"Name\""
        },
        {
          "name": "value",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\tconst newName = e.value ?? \"\";\n\n\t\t\t\tif (!shouldValidate) {\n\t\t\t\t\tsetErrorMsg(validator(newName));\n\t\t\t\t}\n\n\t\t\t\tsetName(newName);\n\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\tconst newName = name.trim();\n\n\t\t\t\tif (!shouldValidate) {\n\t\t\t\t\tsetErrorMsg(validator(newName));\n\t\t\t\t}\n\n\t\t\t\tsetName(newName);\n\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!errorMsg"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "errorMsg"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"name\""
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "256"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "placeholder",
          "type": "variable",
          "value": "placeholder"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/aiWizard/components/shared.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "topic ?? \"emptyTopic\""
        },
        {
          "name": "label",
          "type": "variable",
          "value": "label"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "topic"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\tconst newTopic = e.value ?? \"\";\n\n\t\t\t\tif (!shouldValidate) {\n\t\t\t\t\tsetErrorMsg(validator(newTopic));\n\t\t\t\t}\n\n\t\t\t\tsetTopic(newTopic);\n\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\tconst newTopic = topic.trim();\n\n\t\t\t\tif (!shouldValidate) {\n\t\t\t\t\tsetErrorMsg(validator(newTopic));\n\t\t\t\t}\n\n\t\t\t\tsetTopic(newTopic);\n\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!errorMsg"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "errorMsg"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "label"
        },
        {
          "name": "maxLength",
          "type": "variable",
          "value": "maxLength"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/SolaceConnectionDetails.tsx",
      "props": [
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "host"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "solaceConnectionValues.authentication.host"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.host"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "connectionDetailsHostTextField"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\tif (isEmpty(solaceConnectionValues.authentication.host)) {\n\t\t\t\t\t\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\t\t\t\t\t\thost: en.connectors.labels.validationErrors.missingRequiredField(en.connectors.labels.host)\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\t\t\t\t\t\thost: \"\"\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: host }) => {\n\t\t\t\t\t\t\t\t\t\tsetSolaceConnectionValues({\n\t\t\t\t\t\t\t\t\t\t\t...solaceConnectionValues,\n\t\t\t\t\t\t\t\t\t\t\tauthentication: {\n\t\t\t\t\t\t\t\t\t\t\t\t...solaceConnectionValues.authentication,\n\t\t\t\t\t\t\t\t\t\t\t\thost: host\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "validationEnabled && !!solaceValidationErrors.host"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "validationEnabled && solaceValidationErrors.host\n\t\t\t\t\t\t\t\t\t\t\t? solaceValidationErrors.host\n\t\t\t\t\t\t\t\t\t\t\t: en.connectors.helperText.host"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/SolaceConnectionDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "msgVpn"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "solaceConnectionValues.authentication.messageVpn"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.msgVpn"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "msgVpnTextField"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: msgVpn }) => {\n\t\t\t\t\t\t\t\t\t\tsetSolaceConnectionValues({\n\t\t\t\t\t\t\t\t\t\t\t...solaceConnectionValues,\n\t\t\t\t\t\t\t\t\t\t\tauthentication: {\n\t\t\t\t\t\t\t\t\t\t\t\t...solaceConnectionValues.authentication,\n\t\t\t\t\t\t\t\t\t\t\t\tmessageVpn: msgVpn\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\tif (isEmpty(solaceConnectionValues.authentication.messageVpn)) {\n\t\t\t\t\t\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\t\t\t\t\t\tmessageVpn: en.connectors.labels.validationErrors.missingRequiredField(\n\t\t\t\t\t\t\t\t\t\t\t\t\ten.connectors.labels.msgVpn\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\t\t\t\t\t\tmessageVpn: \"\"\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "validationEnabled && !!solaceValidationErrors.messageVpn"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "validationEnabled && solaceValidationErrors.messageVpn ? solaceValidationErrors.messageVpn : \"\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/SolaceConnectionDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "solaceBindingDestination"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: destination }) => {\n\t\t\t\t\t\t\t\t\t\tsetSolaceConnectionValues({\n\t\t\t\t\t\t\t\t\t\t\t...solaceConnectionValues,\n\t\t\t\t\t\t\t\t\t\t\tbinding: {\n\t\t\t\t\t\t\t\t\t\t\t\t...solaceConnectionValues.binding,\n\t\t\t\t\t\t\t\t\t\t\t\tdestination: destination\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "solaceConnectionValues.binding.destination"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.bindingDestination"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "solaceBindingDestinationTextField"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\tvalidateDestination();\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "validationEnabled && !!solaceValidationErrors.destination"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "solaceValidationErrors.destination && validationEnabled\n\t\t\t\t\t\t\t\t\t\t\t? solaceValidationErrors.destination\n\t\t\t\t\t\t\t\t\t\t\t: // flipped because solaceDirection is the opposite of the actual connector direction\n\t\t\t\t\t\t\t\t\t\t\tisEqual(solaceDirection, ConnectorDirection.Source)\n\t\t\t\t\t\t\t\t\t\t\t? en.connectors.helperText.destinationTarget\n\t\t\t\t\t\t\t\t\t\t\t: en.connectors.helperText.destinationSource"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/EditConstantDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "constantName"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.customConstantValue"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "constant-name-textfield"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "255"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!constantNameError"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "constantNameError"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "String(constantField.constantValue)"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\tsetConstantNameError(\"\");\n\t\t\t\t\t\t\tsetConstantField({ ...constantField, constantValue: e.value });\n\t\t\t\t\t\t}"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/EditHeaderDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "headerName"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.customHeaderName"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "header-name-textfield"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "255"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!headerNameError"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "headerNameError"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "customHeaderField.headerName"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\tsetHeaderNameError(\"\");\n\t\t\t\t\t\tsetCustomHeaderField({ ...customHeaderField, headerName: e.value });\n\t\t\t\t\t}"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/AddHeaderDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "headerName"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.customHeaderName"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "header-name-textfield"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "255"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "headerName"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!headerNameError"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "headerNameError"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\tsetHeaderName(e.value);\n\t\t\t\t\t\tsetHeaderNameError(\"\");\n\t\t\t\t\t}"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/AddConstantDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "constantName"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.customConstantValue"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "constant-name-textfield"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "255"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "constantValue"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!constantNameError"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "constantNameError"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\tonConstantValueChange(e);\n\t\t\t\t\t\t}"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/topicHeader/EducationBlurb.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "targetHeaderExample"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "en.connectors.targetHeaderMapping.targetHeaderExample"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/topicHeader/EducationBlurb.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "headerExpressionExample"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "en.connectors.targetHeaderMapping.headerExpressionExample"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/formUtils/ConnectorFormUtils.tsx",
      "props": [
        {
          "name": "type",
          "type": "expression",
          "value": "sensitiveField && !showSensitiveField ? \"password\" : \"text\""
        },
        {
          "name": "label",
          "type": "expression",
          "value": "props.label"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "props.name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChangeTrigger(props, e)"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "fieldValue"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "props.readonly"
        },
        {
          "name": "required",
          "type": "expression",
          "value": "props.required && !props.readonly"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "props.disabled"
        },
        {
          "name": "endAdornment",
          "type": "variable",
          "value": "endAdornment"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${props.label}-form-textField`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/formUtils/ConnectorFormUtils.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "sslKeyStoreReadOnlyBlank"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "props.value ? \"<encrypted>\" : \"-\""
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/ConnectorDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "values.name"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "details_name_field"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: name }) => setValues({ ...values, name })"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.name"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\tif (isEmpty(values.name)) {\n\t\t\t\t\t\t\t\tsetInitialStepValidationErrors({\n\t\t\t\t\t\t\t\t\t...initialStepValidationErrors,\n\t\t\t\t\t\t\t\t\tname: en.connectors.labels.validationErrors.missingRequiredField(en.connectors.labels.name)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetInitialStepValidationErrors({ ...initialStepValidationErrors, name: \"\" });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "validationEnabled && !!initialStepValidationErrors.name"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "validationEnabled ? initialStepValidationErrors.name : \"\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/OAuthDetails.tsx",
      "props": [
        {
          "name": "required",
          "type": "expression",
          "value": "!readOnly"
        },
        {
          "name": "name",
          "type": "string",
          "value": "tokenUri"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "readOnly ? getConnectorSummaryValue(oauthValues.tokenUri) : oauthValues.tokenUri"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.tokenUri"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "tokenUriTextField"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: tokenUri }) => {\n\t\t\t\t\tsetOauthValues({\n\t\t\t\t\t\t...oauthValues,\n\t\t\t\t\t\ttokenUri: tokenUri\n\t\t\t\t\t});\n\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\tif (isEmpty(oauthValues.tokenUri)) {\n\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\ttokenUri: en.connectors.labels.validationErrors.missingRequiredField(en.connectors.labels.tokenUri)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\ttokenUri: \"\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!solaceValidationErrors.tokenUri"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!readOnly && validationEnabled && solaceValidationErrors.tokenUri ? solaceValidationErrors.tokenUri : \"\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/OAuthDetails.tsx",
      "props": [
        {
          "name": "required",
          "type": "expression",
          "value": "!readOnly"
        },
        {
          "name": "name",
          "type": "string",
          "value": "clientId"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "readOnly ? getConnectorSummaryValue(oauthValues.clientId) : oauthValues.clientId"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.clientId"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "tclientIdTextField"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: clientId }) => {\n\t\t\t\t\tsetOauthValues({\n\t\t\t\t\t\t...oauthValues,\n\t\t\t\t\t\tclientId: clientId\n\t\t\t\t\t});\n\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\tif (isEmpty(oauthValues.clientId)) {\n\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\tclientId: en.connectors.labels.validationErrors.missingRequiredField(en.connectors.labels.clientId)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\tclientId: \"\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!solaceValidationErrors.clientId"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!readOnly && validationEnabled && solaceValidationErrors.clientId ? solaceValidationErrors.clientId : \"\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/OAuthDetails.tsx",
      "props": [
        {
          "name": "required",
          "type": "expression",
          "value": "!readOnly"
        },
        {
          "name": "name",
          "type": "string",
          "value": "clientSecret"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "readOnly ? getConnectorSummaryValue(oauthValues.clientSecret) : oauthValues.clientSecret"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.clientSecret"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "clientSecretTextField"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: clientSecret }) => {\n\t\t\t\t\tsetOauthValues({\n\t\t\t\t\t\t...oauthValues,\n\t\t\t\t\t\tclientSecret: clientSecret\n\t\t\t\t\t});\n\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\tif (isEmpty(oauthValues.clientSecret)) {\n\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\tclientSecret: en.connectors.labels.validationErrors.missingRequiredField(\n\t\t\t\t\t\t\t\ten.connectors.labels.clientSecret\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\tclientSecret: \"\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!solaceValidationErrors.clientSecret"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!readOnly && validationEnabled && solaceValidationErrors.clientSecret\n\t\t\t\t\t\t? solaceValidationErrors.clientSecret\n\t\t\t\t\t\t: \"\""
        },
        {
          "name": "type",
          "type": "expression",
          "value": "showClientSecret ? \"text\" : \"password\""
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t<SolaceButton\n\t\t\t\t\t\tkey={showClientSecret ? \"eyeIcon\" : \"hideEyeIcon\"}\n\t\t\t\t\t\tdataQa={showClientSecret ? \"showClientSecretButton\" : \"hideClientSecretButton\"}\n\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\tonClick={() => setShowClientSecret(!showClientSecret)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showClientSecret ? <VisibilityShow24Icon /> : <VisibilityHide24Icon />}\n\t\t\t\t\t</SolaceButton>\n\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/OAuthDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "scopes"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "readOnly ? getConnectorSummaryValue(oauthValues.scopes) : oauthValues.scopes"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.scopes"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "scopesTextField"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: scopes }) => {\n\t\t\t\t\t\t\t\tsetOauthValues({\n\t\t\t\t\t\t\t\t\t...oauthValues,\n\t\t\t\t\t\t\t\t\tscopes: scopes\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/OAuthDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "clientName"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "readOnly ? getConnectorSummaryValue(oauthValues.clientName) : oauthValues.clientName"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.clientName"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "clientNameTextField"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: clientName }) => {\n\t\t\t\t\t\t\t\tsetOauthValues({\n\t\t\t\t\t\t\t\t\t...oauthValues,\n\t\t\t\t\t\t\t\t\tclientName: clientName\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/BasicAuthenticationDetails.tsx",
      "props": [
        {
          "name": "required",
          "type": "expression",
          "value": "!readOnly"
        },
        {
          "name": "name",
          "type": "string",
          "value": "clientUsername"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "basicAuthValues.clientUsername"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.clientUsername"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "clientUsernameBasicAuthTextField"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: clientUsername }) => {\n\t\t\t\t\tsetBasicAuthValues({\n\t\t\t\t\t\t...basicAuthValues,\n\t\t\t\t\t\tclientUsername: clientUsername\n\t\t\t\t\t});\n\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\tif (isEmpty(basicAuthValues.clientUsername)) {\n\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\tbasicAuthUsername: en.connectors.labels.validationErrors.missingRequiredField(\n\t\t\t\t\t\t\t\ten.connectors.labels.clientUsername\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\tbasicAuthUsername: \"\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "validationEnabled && !!solaceValidationErrors.basicAuthUsername"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!readOnly\n\t\t\t\t\t\t? solaceValidationErrors.basicAuthUsername && validationEnabled\n\t\t\t\t\t\t\t? solaceValidationErrors.basicAuthUsername\n\t\t\t\t\t\t\t: en.connectors.helperText.clientUsername\n\t\t\t\t\t\t: undefined"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/BasicAuthenticationDetails.tsx",
      "props": [
        {
          "name": "required",
          "type": "expression",
          "value": "!readOnly"
        },
        {
          "name": "name",
          "type": "string",
          "value": "clientPassword"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.clientPassword"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "clientPasswordTextField"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "basicAuthValues.clientPassword"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: clientPassword }) => {\n\t\t\t\t\tsetBasicAuthValues({\n\t\t\t\t\t\t...basicAuthValues,\n\t\t\t\t\t\tclientPassword: clientPassword\n\t\t\t\t\t});\n\t\t\t\t}"
        },
        {
          "name": "type",
          "type": "expression",
          "value": "showPassword ? \"text\" : \"password\""
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t<SolaceButton\n\t\t\t\t\t\tkey={showPassword ? \"eyeIcon\" : \"hideEyeIcon\"}\n\t\t\t\t\t\tdataQa={showPassword ? \"showPasswordButton\" : \"hidePasswordButton\"}\n\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\tonClick={() => setShowPassword(!showPassword)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showPassword ? <VisibilityShow24Icon /> : <VisibilityHide24Icon />}\n\t\t\t\t\t</SolaceButton>\n\t\t\t\t]"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\tif (isEmpty(basicAuthValues.clientPassword)) {\n\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\tclientPassword: en.connectors.labels.validationErrors.missingRequiredField(\n\t\t\t\t\t\t\t\ten.connectors.labels.clientPassword\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\tclientPassword: \"\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "validationEnabled && !!solaceValidationErrors.clientPassword"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!readOnly\n\t\t\t\t\t\t? solaceValidationErrors.clientPassword && validationEnabled\n\t\t\t\t\t\t\t? solaceValidationErrors.clientPassword\n\t\t\t\t\t\t\t: en.connectors.helperText.clientPassword\n\t\t\t\t\t\t: undefined"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/ClientCertAuthenticationDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "sslKeyStoreReadOnlyBlank"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "\"-\""
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/ClientCertAuthenticationDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "sslKeyStorePassword"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "readOnly\n\t\t\t\t\t\t\t\t\t? getConnectorSummaryValue(clientCertValues.sslKeyStorePassword)\n\t\t\t\t\t\t\t\t\t: clientCertValues.sslKeyStorePassword"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.sslKeyStorePassword"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "sslKeyStorePasswordTextField"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: sslKeyStorePassword }) => {\n\t\t\t\t\t\t\t\tsetClientCertValues({\n\t\t\t\t\t\t\t\t\t...clientCertValues,\n\t\t\t\t\t\t\t\t\tsslKeyStorePassword: sslKeyStorePassword\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "type",
          "type": "expression",
          "value": "showSslKeyStorePassword ? \"text\" : \"password\""
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\t\t\t<SolaceButton\n\t\t\t\t\t\t\t\t\tkey={showSslKeyStorePassword ? \"eyeIcon\" : \"hideEyeIcon\"}\n\t\t\t\t\t\t\t\t\tdataQa={showSslKeyStorePassword ? \"showPasswordButton\" : \"hidePasswordButton\"}\n\t\t\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t\t\t\tonClick={() => setShowSslKeyStorePassword(!showSslKeyStorePassword)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{showSslKeyStorePassword ? <VisibilityShow24Icon /> : <VisibilityHide24Icon />}\n\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/ClientCertAuthenticationDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "sslPrivateKeyAliasName"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "readOnly\n\t\t\t\t\t\t\t\t\t? getConnectorSummaryValue(clientCertValues.sslPrivateKeyAliasName)\n\t\t\t\t\t\t\t\t\t: clientCertValues.sslPrivateKeyAliasName"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.sslPrivateKeyAliasName"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "sslPrivateKeyAliasNameTextField"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: sslPrivateKeyAliasName }) => {\n\t\t\t\t\t\t\t\tsetClientCertValues({\n\t\t\t\t\t\t\t\t\t...clientCertValues,\n\t\t\t\t\t\t\t\t\tsslPrivateKeyAliasName: sslPrivateKeyAliasName\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/ClientCertAuthenticationDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "sslPrivateKeyPassword"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "readOnly\n\t\t\t\t\t\t\t\t\t? getConnectorSummaryValue(clientCertValues.sslPrivateKeyPassword)\n\t\t\t\t\t\t\t\t\t: clientCertValues.sslPrivateKeyPassword"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.sslPrivateKeyPassword"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "sslPrivateKeyPasswordTextField"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: sslPrivateKeyPassword }) => {\n\t\t\t\t\t\t\t\tsetClientCertValues({\n\t\t\t\t\t\t\t\t\t...clientCertValues,\n\t\t\t\t\t\t\t\t\tsslPrivateKeyPassword: sslPrivateKeyPassword\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "type",
          "type": "expression",
          "value": "showSslPrivateKeyPassword ? \"text\" : \"password\""
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\t\t\t<SolaceButton\n\t\t\t\t\t\t\t\t\tkey={showSslPrivateKeyPassword ? \"eyeIcon\" : \"hideEyeIcon\"}\n\t\t\t\t\t\t\t\t\tdataQa={showSslPrivateKeyPassword ? \"showPasswordButton\" : \"hidePasswordButton\"}\n\t\t\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t\t\t\tonClick={() => setShowSslPrivateKeyPassword(!showSslPrivateKeyPassword)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{showSslPrivateKeyPassword ? <VisibilityShow24Icon /> : <VisibilityHide24Icon />}\n\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/ClientCertAuthenticationDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "clientUsername"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "readOnly ? getConnectorSummaryValue(clientCertValues.clientUsername) : clientCertValues.clientUsername"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.clientUsername"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "clientUsernameClientCertAuthTextField"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: clientUsername }) => {\n\t\t\t\t\t\t\t\tsetClientCertValues({\n\t\t\t\t\t\t\t\t\t...clientCertValues,\n\t\t\t\t\t\t\t\t\tclientUsername: clientUsername\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\tif (isEmpty(clientCertValues.clientUsername)) {\n\t\t\t\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\t\t\t\tclientCertUsername: en.connectors.labels.validationErrors.missingRequiredField(\n\t\t\t\t\t\t\t\t\t\t\ten.connectors.labels.clientUsername\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\t\t\t\tclientCertUsername: \"\"\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!readOnly && !!solaceValidationErrors.clientCertUsername"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!readOnly\n\t\t\t\t\t\t\t\t\t? solaceValidationErrors.clientCertUsername && validationEnabled\n\t\t\t\t\t\t\t\t\t\t? solaceValidationErrors.clientCertUsername\n\t\t\t\t\t\t\t\t\t\t: en.connectors.helperText.clientUsername\n\t\t\t\t\t\t\t\t\t: undefined"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/ConnectorEditDetailsTab.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "connectorDetails.name"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "details_name_field"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value: name }) => {\n\t\t\t\t\t\tsetConnectorDetails({ ...connectorDetails, name });\n\t\t\t\t\t}"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.name"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\tif (isEmpty(connectorDetails.name)) {\n\t\t\t\t\t\t\tsetDetailsStepValidationErrors({\n\t\t\t\t\t\t\t\t...detailsStepValidationErrors,\n\t\t\t\t\t\t\t\tname: en.connectors.labels.validationErrors.missingRequiredField(en.connectors.labels.name)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetDetailsStepValidationErrors({ ...detailsStepValidationErrors, name: \"\" });\n\t\t\t\t\t\t}\n\t\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!detailsStepValidationErrors.name"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "detailsStepValidationErrors.name ? detailsStepValidationErrors.name : en.connectors.helperText.uniqueName"
        },
        {
          "name": "autoFocus",
          "type": "variable",
          "value": "clone"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/SolaceConnectionTab.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "eventBrokerService"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.eventBrokerService"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getConnectorSummaryValue(solaceConnectionStepAtom.brokerName)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/SolaceConnectionTab.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "host"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.host"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getConnectorSummaryValue(solaceConnectionStepAtom.authentication.host)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/SolaceConnectionTab.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "msgVpn"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.msgVpn"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getConnectorSummaryValue(solaceConnectionStepAtom.authentication.messageVpn)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/SolaceConnectionTab.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "authenticationTypeReadOnlyField"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.authenticationType"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getConnectorSummaryValue(solaceConnectionStepAtom.authenticationType)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/SolaceConnectionTab.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "clientUsername"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.clientUsername"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getConnectorSummaryValue(basicAuthValues.clientUsername)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/SolaceConnectionTab.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "clientPassword"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.clientPassword"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "clientPassword"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/SolaceConnectionTab.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "destinationType"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.destinationType"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getConnectorSummaryValue(solaceConnectionStepAtom.binding.destinationType)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/SolaceConnectionTab.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "bindingDestination"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.connectors.labels.bindingDestination"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getConnectorSummaryValue(solaceConnectionStepAtom.binding.destination)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/HeaderMappingTab.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "key"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getConnectorSummaryValue(key)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/summary/HeaderMappingTab.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "value"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getConnectorSummaryValue(value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/components/atoms/AtomTextField.tsx",
      "props": [
        {
          "name": "...",
          "type": "spread",
          "value": "props"
        },
        {
          "name": "id",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "(hasBlurred || isSubmitted) && hasErrors"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "(hasBlurred || isSubmitted ? errorText : \"\") || helperText"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleChange"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "handleBlur"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/components/dialogs/CustomizeMessageSpoolDialog.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "new_msg_spool_size"
        },
        {
          "name": "name",
          "type": "string",
          "value": "new_msg_spool_size"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "newMessageSpoolSize"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_new_msg_spool_size_label\", message: \"New Message Spool Size (GB)\" })"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "progress"
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "size",
          "type": "number",
          "value": "4"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "messageStorage.value"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleMessageStorageChange"
        },
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "hasMessageStorageErrors"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "hasMessageStorageErrors ? messageStorageErrorText : t({ id: \"id_default_size_gb\", message: \"Default: {0} GB\", values: { 0: formatter.format(defaultMessageSpoolSize) } })"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/components/dialogs/DeleteServiceDialog.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "service_name"
        },
        {
          "name": "name",
          "type": "string",
          "value": "service_name"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "delete-service-confirm-name"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<Trans id=\"id_delete_label\">\n\t\t\t\t\t\t\t\tPlease type <b>{matchText}</b> to confirm.\n\t\t\t\t\t\t\t</Trans>"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "matchName"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => setMatchName(e.value)"
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/components/dialogs/RenameServiceDialog.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "service_name"
        },
        {
          "name": "name",
          "type": "string",
          "value": "service_name"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "rename-service-name"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_new_service_name_label\", message: \"Service Name\" })"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "newName"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => setNewName(e.value)"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "hasErrors"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "isEmpty\n\t\t\t\t\t\t\t? t({ id: \"id_rule_enter_value\", message: \"Required. Enter a value.\" })\n\t\t\t\t\t\t\t: hasErrors\n\t\t\t\t\t\t\t? t({ id: \"id_rule_less_n_chars\", message: \"Exceeds limit. Enter a value under {0} characters.\", values: { 0: 50 } })\n\t\t\t\t\t\t\t: \"\\xa0\""
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/dialogs/ConnectionEndpointDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "accessType"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_access_type\", message: \"Access Type\" })"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "i18n._(accessTypes[endpoint.accessType])"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/dialogs/DistributedTracingDeployDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "telemetryProfileName"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_telemetry_profile\", message: \"Telemetry Profile\" })"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "telemetryProfileName"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/dialogs/DistributedTracingDeployDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "selectedTracingProfileId"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "selectedTracingProfileId"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_tracing_destination\", message: \"Tracing Destination\" })"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "tracingProfiles?.[0]?.displayName ? tracingProfiles[0].displayName : \"-\""
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/MessageSpoolSizeCard.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "msg_spool_size"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_cur_msg_spool_size\", message: \"Current Message Spool Size (GB)\" })"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "messageSpoolSize"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/DistributedTracingCard.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "tracingProfileName"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_tracing_destination\", message: \"Tracing Destination\" })"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "tracingProfileName"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/DistributedTracingCard.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "tracingClientUsername"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_tracing_client_username\", message: \"Tracing Client Username\" })"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "\"sc-dt-trace-collector\""
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/DistributedTracingCard.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "telemetryProfileName"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_telemetry_profile\", message: \"Telemetry Profile\" })"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "telemetryProfileName"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/ServiceAuthenticationCard.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "authenticationBasicEnabled"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_basic_auth\", message: \"Basic Authentication\" })"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getEnablingText(msgVpn?.authenticationBasicEnabled)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/panels/ServiceAuthentications.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "authenticationBasicEnabled"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_basic_auth\", message: \"Basic Authentication\" })"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getEnablingText(msgVpn?.authenticationBasicEnabled)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/panels/ServiceAuthentications.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "authenticationClientCertEnabled"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_client_cert_auth\", message: \"Client Certificate Authentication\" })"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getEnablingText(msgVpn?.authenticationClientCertEnabled)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/panels/ServiceAuthentications.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "authenticationOauthEnabled"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_oauth_provider_auth\", message: \"OAuth Provider Authentication\" })"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "getEnablingText(msgVpn?.authenticationOauthEnabled)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/list/Services.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "filterName"
        },
        {
          "name": "name",
          "type": "string",
          "value": "filterName"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "services-filter-name"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "filter"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSetFilter"
        },
        {
          "name": "placeholder",
          "type": "expression",
          "value": "t({ id: \"id_filter_services\", message: \"Filter by service name\" })"
        },
        {
          "name": "customIcon",
          "type": "object",
          "value": "{\n\t\t\t\t\t\t\t\ticon: filter ? <CloseIcon /> : <SearchIcon />,\n\t\t\t\t\t\t\t\tposition: \"end\",\n\t\t\t\t\t\t\t\thandleClick: filter ? handleClearFilter : undefined\n\t\t\t\t\t\t\t}"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldMessageStorage.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "messageStorage"
        },
        {
          "name": "name",
          "type": "string",
          "value": "messageStorage"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "messageStorage"
        },
        {
          "name": "type",
          "type": "string",
          "value": "number"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_message_storage_gb\", message: \"Message Spool Size (GB)\" })"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "activeServiceClasses.length === 0 ? \"\" : formatter.format(parseInt(messageStorage.value))"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleMessageStorageChange"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldMessageStorage.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "messageStorage"
        },
        {
          "name": "name",
          "type": "string",
          "value": "messageStorage"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "messageStorage"
        },
        {
          "name": "type",
          "type": "string",
          "value": "number"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_message_storage_gb\", message: \"Message Spool Size (GB)\" })"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "activeServiceClasses.length === 0"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "activeServiceClasses.length === 0 ? \"\" : messageStorage.value"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleMessageStorageChange"
        },
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "hasMessageStorageErrors"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "messageStorageErrorText"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "activeServiceClasses.length > 0 && (!(!isSolaceDC || organization?.spoolConfigEnabled) || readOnly)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldPort.tsx",
      "props": [
        {
          "name": "id",
          "type": "variable",
          "value": "namePort"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "namePort"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "namePort"
        },
        {
          "name": "type",
          "type": "string",
          "value": "number"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "\"\""
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "size",
          "type": "number",
          "value": "5"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "disabled"
        },
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "hasErrors"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "errorText"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "port"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleChange"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldMsgVpnName.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "msgVpnName"
        },
        {
          "name": "name",
          "type": "string",
          "value": "msgVpnName"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "msgVpnName"
        },
        {
          "name": "type",
          "type": "string",
          "value": "text"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "isCloning"
        },
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "hasErrors"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "errorText ? errorText : t({ id: \"id_message_vpn_name_help\", message: \"The message VPN name cannot be changed once the service is created.\" })"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleChange"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldName.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "name"
        },
        {
          "name": "name",
          "type": "string",
          "value": "name"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "name"
        },
        {
          "name": "type",
          "type": "string",
          "value": "text"
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "hasAnyErrors"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "anyErrorText"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleChange"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "handleBlur"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/serviceLimits/ServiceLimits.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "serviceLimitValue"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.serviceLimits.labels.newServiceLimit"
        },
        {
          "name": "type",
          "type": "string",
          "value": "number"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "onServiceLimitChange"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "newServiceLimit"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"serviceLimitValue\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/environments/components/GridContainer.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "environmentFilter"
        },
        {
          "name": "placeholder",
          "type": "expression",
          "value": "environmentsStr.environmentList.filterPlaceholder"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[<Search key=\"search\" />]"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSearch"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "environmentFilterInput"
        },
        {
          "name": "width",
          "type": "expression",
          "value": "\"313px\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/environments/components/EnvironmentsDialog.tsx",
      "props": [
        {
          "name": "label",
          "type": "expression",
          "value": "en.environments.labels.environmentName"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "dialogState.name"
        },
        {
          "name": "name",
          "type": "string",
          "value": "environmentName"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "100"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleEnvNameChange"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "isDuplicate || hasError || hasNameRequiredError"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "handleErrorText()"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "isLoading"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "envNameTestId"
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/myProfile/MyProfile.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "firstNameError"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "firstNameError ? myProfile.firstNameError : \"\""
        },
        {
          "name": "name",
          "type": "string",
          "value": "userFirstName"
        },
        {
          "name": "id",
          "type": "string",
          "value": "userFirstName"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "userFirstName"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "firstNameValue"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "150"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleFirstName"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/myProfile/MyProfile.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "lastNameError"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "lastNameError ? myProfile.lastNameError : \"\""
        },
        {
          "name": "name",
          "type": "string",
          "value": "userLastName"
        },
        {
          "name": "id",
          "type": "string",
          "value": "userLastName"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "userLastName"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "lastNameValue"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "150"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleLastName"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/myProfile/MyProfile.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "oldPasswordReq"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "oldPasswordReq ? myProfile.oldPasswordReq : \"\""
        },
        {
          "name": "name",
          "type": "string",
          "value": "userOldPassword"
        },
        {
          "name": "type",
          "type": "string",
          "value": "password"
        },
        {
          "name": "id",
          "type": "string",
          "value": "userOldPassword"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "userOldPassword"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "oldPasswordValue"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "50"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleOldPasswordChange"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/myProfile/MyProfile.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "newPasswordError.length > 0"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "newPasswordError"
        },
        {
          "name": "name",
          "type": "string",
          "value": "userNewPassword"
        },
        {
          "name": "id",
          "type": "string",
          "value": "userNewPassword"
        },
        {
          "name": "type",
          "type": "string",
          "value": "password"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "userNewPassword"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "newPasswordValue"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "50"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleNewPasswordChange"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/myProfile/MyProfile.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "confirmPasswordError"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "confirmPasswordError ? newPasswordConfirmError : myProfile.changeWarning"
        },
        {
          "name": "name",
          "type": "string",
          "value": "userNewConfirmation"
        },
        {
          "name": "id",
          "type": "string",
          "value": "userNewConfirmation"
        },
        {
          "name": "type",
          "type": "string",
          "value": "password"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "userNewConfirmation"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "newPasswordValueConfirm"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "50"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleNewPasswordConfirmChange"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/userGroups/components/CreateEditUserGroupsDialog.tsx",
      "props": [
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "userGroups.ugDialog.ugName"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "dialogState.name"
        },
        {
          "name": "name",
          "type": "string",
          "value": "userGroupName"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "100"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleUGNameChange"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "isLoading"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "hasNameError || isDuplicate || hasNoNameError || isDefaultError"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "handleErrorText()"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "userGroupNameQa"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/userGroups/UserGroups.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "userGroupSearch"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "userGroupSearchQa"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "userGroupSearchValue"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleUserGroupSearchValue"
        },
        {
          "name": "placeholder",
          "type": "expression",
          "value": "userGroups.userGroupsHome.search"
        },
        {
          "name": "size",
          "type": "number",
          "value": "155"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\t\tuserGroupSearchValue ? (\n\t\t\t\t\t\t\t\t<SolaceButton key={\"closeIcon\"} variant=\"icon\" onClick={handleClearInput}>\n\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t\t<SolaceButton key={\"searchIcon\"} variant=\"icon\" onClick={handleClearInput}>\n\t\t\t\t\t\t\t\t<Search key=\"search\" />\n\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t]"
        },
        {
          "name": "width",
          "type": "string",
          "value": "20rem"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/accountSettings/ConfigureSettings.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "configSettings.clientId?.errors?.length > 0"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "configSettings.clientId.errors?.length > 0 ? configSettings.clientId.errors[0] : \"\""
        },
        {
          "name": "width",
          "type": "string",
          "value": "100%"
        },
        {
          "name": "name",
          "type": "string",
          "value": "clientId"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ name, value }) => {\n\t\t\t\t\t\t\t\tconst errors: string[] = [];\n\n\t\t\t\t\t\t\t\tif (value.length < 1) {\n\t\t\t\t\t\t\t\t\terrors.push(en.accountSettings.clientIdErrorMsg);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\thandleConfigureSettingsChange();\n\n\t\t\t\t\t\t\t\tsetConfigSettings((config) => {\n\t\t\t\t\t\t\t\t\treturn { ...config, [name]: { ...config.clientId, value, errors } };\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "en.accountSettings.clientId"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "configSettings.clientId.value"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/accountSettings/ConfigureSettings.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "configSettings.clientSecretKey.errors?.length > 0"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "configSettings.clientSecretKey.errors?.length > 0 ? configSettings.clientSecretKey.errors[0] : \"\""
        },
        {
          "name": "type",
          "type": "expression",
          "value": "hideSecretKey ? \"password\" : \"text\""
        },
        {
          "name": "width",
          "type": "string",
          "value": "100%"
        },
        {
          "name": "name",
          "type": "string",
          "value": "clientSecretKey"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ name, value }) => {\n\t\t\t\t\t\t\t\t\tconst errors: string[] = [];\n\n\t\t\t\t\t\t\t\t\tif (value.length < 1) {\n\t\t\t\t\t\t\t\t\t\terrors.push(en.accountSettings.clientSecretKeyErrorMsg);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\thandleConfigureSettingsChange();\n\n\t\t\t\t\t\t\t\t\tsetConfigSettings((config) => {\n\t\t\t\t\t\t\t\t\t\treturn { ...config, [name]: { ...config.clientSecretKey, value, errors } };\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "en.accountSettings.clientSecretKey"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "configSettings.clientSecretKey.value"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/accountSettings/ConfigureSettings.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "configSettings.oidcDiscoveryUrl.errors?.length > 0"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "configSettings.oidcDiscoveryUrl.errors?.length > 0\n\t\t\t\t\t\t\t\t\t? configSettings.oidcDiscoveryUrl.errors[0]\n\t\t\t\t\t\t\t\t\t: en.accountSettings.discoveryUrlExpectedFormat"
        },
        {
          "name": "width",
          "type": "string",
          "value": "100%"
        },
        {
          "name": "name",
          "type": "string",
          "value": "oidcDiscoveryUrl"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ name, value }) => {\n\t\t\t\t\t\t\t\tconst errors: string[] = [];\n\n\t\t\t\t\t\t\t\tif (value.length < 1) {\n\t\t\t\t\t\t\t\t\terrors.push(en.accountSettings.oidcDiscoveryUrlErrorMsg);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\thandleConfigureSettingsChange();\n\n\t\t\t\t\t\t\t\tsetConfigSettings((config) => {\n\t\t\t\t\t\t\t\t\treturn { ...config, [name]: { ...config.oidcDiscoveryUrl, value, errors } };\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "en.accountSettings.discoveryUrl"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "configSettings.oidcDiscoveryUrl.value"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/accountSettings/ConfigureSettings.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "configSettings.additionalScopes.errors?.length > 0"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "configSettings.additionalScopes.errors?.length > 0\n\t\t\t\t\t\t\t\t\t? configSettings.additionalScopes.errors[0]\n\t\t\t\t\t\t\t\t\t: en.accountSettings.additionalScopesExpectedFormat"
        },
        {
          "name": "width",
          "type": "string",
          "value": "100%"
        },
        {
          "name": "name",
          "type": "string",
          "value": "additionalScopes"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ name, value }) => {\n\t\t\t\t\t\t\t\tconst errors: string[] = [];\n\n\t\t\t\t\t\t\t\tif (value.indexOf(\" \") >= 0) {\n\t\t\t\t\t\t\t\t\terrors.push(en.accountSettings.noWhiteSpaceAllowed);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\thandleConfigureSettingsChange();\n\n\t\t\t\t\t\t\t\tsetConfigSettings((config) => {\n\t\t\t\t\t\t\t\t\treturn { ...config, [name]: { ...config.additionalScopes, value, errors } };\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "en.accountSettings.additionalScopes"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "configSettings.additionalScopes.value as string"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/accountSettings/SetUpSso.tsx",
      "props": [
        {
          "name": "label",
          "type": "expression",
          "value": "en.accountSettings.preferredSubdomain"
        },
        {
          "name": "name",
          "type": "string",
          "value": "preferredSubdomain"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => setPreferredSubdomainText({ edited: true, text: e.value })"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "en.accountSettings.preferredSubdomain"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "preferredSubdomain.text"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "preferredSubdomain.edited && !canSendRequest"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "preferredSubdomain.edited && !canSendRequest ? en.accountSettings.validSubdomain : \"\""
        },
        {
          "name": "width",
          "type": "string",
          "value": "100%"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "preferredSubdomainTextField"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/GroupManagement/GroupManagement.tsx",
      "props": [
        {
          "name": "helperText",
          "type": "expression",
          "value": "userGroupManagement[\n\t\t\t\t\t\t\t\t\tclaimIdChanged && claimId.trim().length < 1 ? \"claimIdError\" : \"identityProviderHelperText\"\n\t\t\t\t\t\t\t\t]"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "claimIdChanged && claimId.trim().length < 1"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "userGroupManagement.identityProviderLabel"
        },
        {
          "name": "name",
          "type": "string",
          "value": "claimId"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value }) => claimIdChangeHandler(value)"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "claimId"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "roleId"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/GroupManagement/components/ClaimValueRowItem.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "editClaimValuesFieldId"
        },
        {
          "name": "name",
          "type": "string",
          "value": "editClaimValuesField"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "claimValuesMapping"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value }) => setClaimValuesMapping(value)"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "claimValueError ? userGroupManagement.claimValueErrorMessage : <span>&#160;</span>"
        },
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "claimValueError"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/GroupManagement/components/ClaimMapping.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "addClaimValuesField"
        },
        {
          "name": "name",
          "type": "string",
          "value": "addClaimValuesField"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "claimValuesMapping"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value }) => setClaimValuesMapping(value)"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "claimValueError ? userGroupManagement.claimValueErrorMessage : undefined"
        },
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "claimValueError"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/support/GetSupport.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "summaryError"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "handleSummaryError()"
        },
        {
          "name": "name",
          "type": "string",
          "value": "summaryfield"
        },
        {
          "name": "id",
          "type": "string",
          "value": "supportPageSummary"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "supportPageSummary"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "summaryValue"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSummaryFieldValue"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "150"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/support/GetSupport.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "errorIdError"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "handleErrorIdError()"
        },
        {
          "name": "name",
          "type": "string",
          "value": "errorField"
        },
        {
          "name": "id",
          "type": "string",
          "value": "supportPageErrorId"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "supportPageErrorId"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "errorIdValue"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleErrorIdFieldValue"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "350"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/accountDetailsOverview/EventPortalLimitsCard.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "limitRequestNumber"
        },
        {
          "name": "name",
          "type": "string",
          "value": "limitRequestNumber"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value }) => setLimitRequestNumber(+value)"
        },
        {
          "name": "type",
          "type": "string",
          "value": "number"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "limitRequestNumber"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.overview.eventPortalSection.totalObjects"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "width",
          "type": "string",
          "value": "15rem"
        },
        {
          "name": "data-qa",
          "type": "string",
          "value": "limitRequestNumberInput"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/accountDetailsOverview/AccountExpiryBanner.tsx",
      "props": [
        {
          "name": "label",
          "type": "expression",
          "value": "en.overview.banner.contactEmail"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "en.overview.banner.contactEmail"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => setContactEmail(e.value)"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "en.overview.banner.contactEmail"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "contactEmail"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!contactEmail && !isValidEmail(contactEmail)"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "!!contactEmail && !isValidEmail(contactEmail) ? (\n\t\t\t\t\t\t\t\t<span data-qa=\"contactEmailError\" id=\"contactEmailError\" style={{ color: \"inherit\" }}>\n\t\t\t\t\t\t\t\t\t{en.overview.banner.errorHelperText}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : undefined"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/accountDetailsOverview/AdvancedSettingsSection.tsx",
      "props": [
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.overview.advancedSettingsSection.password"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "en.overview.advancedSettingsSection.password"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value }) => setPassword(value)"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "en.overview.advancedSettingsSection.password"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "password"
        },
        {
          "name": "type",
          "type": "string",
          "value": "password"
        },
        {
          "name": "width",
          "type": "string",
          "value": "45rem"
        },
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "inCorrectPassword"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "password"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "inCorrectPassword ? en.overview.advancedSettingsSection.incorrectPasswordError : \"\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/resetPassword/ResetPassword.tsx",
      "props": [
        {
          "name": "fullWidth",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "id",
          "type": "string",
          "value": "resetPasswordEmail"
        },
        {
          "name": "name",
          "type": "string",
          "value": "resetPasswordEmail"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleChange"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "en.forgotPassword.resetPasswordFieldTitle"
        },
        {
          "name": "placeholder",
          "type": "expression",
          "value": "en.forgotPassword.email"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "resetPasswordEmailInput"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/insightsSettings/components/NotificationTextField.tsx",
      "props": [
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "label",
          "type": "string",
          "value": "List of Emails"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "handle"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value }) => setHandle(value)"
        },
        {
          "name": "onFocus",
          "type": "function",
          "value": "() =>\n\t\t\t\t\t!helper.hasErrors &&\n\t\t\t\t\tsetHelper((previous: any) => ({ ...previous, [name]: { hasErrors: false, helperText: helperText.info } }))"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() =>\n\t\t\t\t\t!helper.hasErrors &&\n\t\t\t\t\tsetHelper((previous: any) => ({\n\t\t\t\t\t\t...previous,\n\t\t\t\t\t\t[name]: { hasErrors: false, helperText: handle ? \"\" : helperText.warning(name) }\n\t\t\t\t\t}))"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "helper.hasErrors"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "helper.helperText"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/privateRegions/components/AvailablePrivateRegions.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "search"
        },
        {
          "name": "width",
          "type": "string",
          "value": "45%"
        },
        {
          "name": "placeholder",
          "type": "string",
          "value": "Search..."
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => setSearch(event.value)"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "search"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/tokenManagement/components/TokenForm.tsx",
      "props": [
        {
          "name": "value",
          "type": "expression",
          "value": "tokenFormValues.name"
        },
        {
          "name": "aria-label",
          "type": "string",
          "value": "Name"
        },
        {
          "name": "data-lpignore",
          "type": "string",
          "value": "true"
        },
        {
          "name": "width",
          "type": "string",
          "value": "500px"
        },
        {
          "name": "name",
          "type": "string",
          "value": "name"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!nameError"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "nameError ?? undefined"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => dispatch(setTokenName(e.value))"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "tokenName"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/TracingDestinationDetails.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "details_displayName"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "tracingProfile.formFields.name.field"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "tracingDestination?.displayName"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/TracingDestinationDetails.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "tracingProfile.formFields.type.field"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "tracingProfile.tracingType[tracingDestination?.tracingBackendType]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/TracingDestinationDetails.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "tracingProfile.formFields.connectionType.field"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "tracingProfile.tlsConnectionType[tracingDestination.connectionType]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/TracingDestinationDetails.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "tracingProfile.formFields.region.field"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "tracingProfile.datadogSite[tracingDestination.datadogSite]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/TracingDestinationDetails.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "tracingProfile.formFields.endpoint.field"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "tracingDestination.endpoint"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/TracingDestinationDetails.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "details_apiKey"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "tracingProfile.formFields.datadogApiKey.field"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "tracingDestination.datadogApiKey"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/formComponents.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "expression",
          "value": "!!readOnly"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!_.isEmpty(error)"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error?.message"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "onBlur",
          "type": "variable",
          "value": "onBlur"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa ?? name"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/aggregation/Aggregation.tsx",
      "props": [
        {
          "name": "customIcon",
          "type": "object",
          "value": "{\n\t\t\t\t\t\ticon: <SearchIcon />,\n\t\t\t\t\t\tposition: \"end\"\n\t\t\t\t\t}"
        },
        {
          "name": "width",
          "type": "string",
          "value": "50%"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "customers.searchAggregationName"
        },
        {
          "name": "name",
          "type": "string",
          "value": "searchCustomerTextbox"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSearchTextSearch"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "customers.searchAggregationName"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "searchCustomerTextbox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/organizations/organizationsList/OrganizationsFilter.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "orgSearchBox"
        },
        {
          "name": "name",
          "type": "string",
          "value": "orgSearchBox"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "orgSearchBox"
        },
        {
          "name": "width",
          "type": "string",
          "value": "400px"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "searchText"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => handleSearchField(event.value)"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\t\tsearchText ? (\n\t\t\t\t\t\t\t\t<SolaceButton key={\"closeIcon\"} variant=\"icon\" onClick={() => handleSearchField(EMPTY_STRING)}>\n\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t\t<Search key=\"search\" style={{ marginRight: \"4px\" }} />\n\t\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/components/ServicesMonitoringConfigurations.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "SolaceDatadogAgentVersion"
        },
        {
          "name": "placeholder",
          "type": "string",
          "value": "Enter to override Production Datadog Agent Version"
        },
        {
          "name": "helperText",
          "type": "string",
          "value": "Overrides solace-datadog-agent image version, default: latest"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => setValue(\"SolaceDatadogAgentVersion\", e.value)"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "SolaceDatadogAgentVersionTextBox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "orgIdField"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Organization Id"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "orgId"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "orgIdField"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "apiKeyField"
        },
        {
          "name": "label",
          "type": "string",
          "value": "API Key"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "ddOrgData?.apiKey ?? \"\""
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "apiKeyTextField"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "orgNameField"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Organization Display Name"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "ddOrgData?.orgPublicId ?? \"\""
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "orgNameField"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "name",
          "type": "string",
          "value": "appKeyField"
        },
        {
          "name": "label",
          "type": "string",
          "value": "APP Key"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "ddOrgData?.appKey ?? \"\""
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "appKeyTextField"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "ddSubOrgName"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Datadog Sub-Org Name"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "subOrgName"
        },
        {
          "name": "placeholder",
          "type": "string",
          "value": "Enter Datadog Sub-Org name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\thandleSubOrgNameInput(e.value);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "ddSubOrgNameTextBox"
        },
        {
          "name": "width",
          "type": "string",
          "value": "50%"
        },
        {
          "name": "maxLength",
          "type": "number",
          "value": "32"
        },
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "subOrgNameInvalid"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "subOrgNameInvalid\n\t\t\t\t\t\t\t\t\t\t? \"Datadog Sub-Org Name does not start with 'PI - ' or 'RMMS - ' , change the name and retry\"\n\t\t\t\t\t\t\t\t\t\t: \"\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "alertHandles"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Alert Handles"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleHandlesUpdate(resource.profile, e.name, convertToArray(e.value));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "resource.alertHandles ?? \"\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${resource.profile}_alertHandlesTextBox`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "warningHandles"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Warning Handles"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleHandlesUpdate(resource.profile, e.name, convertToArray(e.value));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "resource.warningHandles ?? \"\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${resource.profile}_warningHandlesTextBox`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "recoveryHandles"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Recovery Handles"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleHandlesUpdate(resource.profile, e.name, convertToArray(e.value));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "resource.recoveryHandles ?? \"\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${resource.profile}_recoveryHandlesTextBox`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "inviteUsersInput"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Provide a list of comma-separated solace.com email addresses"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "adminUsersList"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\tsetAdminUsersList(e.value);\n\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "inviteUsersTextBox"
        },
        {
          "name": "width",
          "type": "string",
          "value": "60%"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/serviceOperations/ServiceOperations.tsx",
      "props": [
        {
          "name": "disabled",
          "type": "expression",
          "value": "search === \"none\""
        },
        {
          "name": "label",
          "type": "string",
          "value": "Search"
        },
        {
          "name": "name",
          "type": "string",
          "value": "search"
        },
        {
          "name": "width",
          "type": "string",
          "value": "375px"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "filters[search]"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => setFilters({ ...filters, [search]: event.value })"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[<SearchIcon key=\"searchIcon\" sx={{ marginRight: \"8px\", fontSize: \"1rem\" }} />]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/plans/components/plansForm/QueryBuilder.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "value"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => setValue(event?.value)"
        },
        {
          "name": "placeholder",
          "type": "expression",
          "value": "operator === \"=in=\" || operator === \"=out=\" ? \"value1,value2,value3\" : \"Enter value\""
        },
        {
          "name": "fullWidth",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/plans/components/plansForm/PlansForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => onChange(event.value)"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "plan-name"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/plans/components/plansForm/PlansForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => onChange(event.value)"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "plan-description"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/runs/components/runsForm/RunsForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => onChange(event.value)"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "run-description"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/search/SearchForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "searchFor"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "searchBoxChangeHandler"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "search-for-textbox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/serviceTypes/CreateServiceType.tsx",
      "props": [
        {
          "name": "...",
          "type": "spread",
          "value": "rest"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error?.message"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "disabled"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "value || \"\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/serviceTypes/DeleteServicePackage.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "confirmationBox"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "confirmationText"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "confirmationBox"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value }) => setConfirmationText(value)"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<SolaceTypography>\n\t\t\t\t\t\t\t\tPlease type <Bold>DELETE</Bold> to confirm.\n\t\t\t\t\t\t\t</SolaceTypography>"
        },
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/serviceTypes/ManageServiceTypes.tsx",
      "props": [
        {
          "name": "dataQa",
          "type": "string",
          "value": "search"
        },
        {
          "name": "name",
          "type": "string",
          "value": "search"
        },
        {
          "name": "placeholder",
          "type": "string",
          "value": "Search by event broker version"
        },
        {
          "name": "width",
          "type": "string",
          "value": "400px"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "search"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(input) => setSearch(input.value)"
        },
        {
          "name": "customIcon",
          "type": "object",
          "value": "{\n\t\t\t\t\t\t\t\ticon: search ? <Close24Icon /> : <Search24Icon />,\n\t\t\t\t\t\t\t\tposition: \"end\",\n\t\t\t\t\t\t\t\thandleClick: search ? handleClearSearch : undefined\n\t\t\t\t\t\t\t}"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/DrawdownSelection.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "quantityTextfieldId"
        },
        {
          "name": "name",
          "type": "string",
          "value": "quantityTextfield"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value }) => validateQuantity(value)"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "prodQuantityValue"
        },
        {
          "name": "width",
          "type": "string",
          "value": "100%"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "quantityTextfieldQa"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "productDrawdown.inputError"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "prodQuantityErrors[0]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/ProductsList.tsx",
      "props": [
        {
          "name": "readOnly",
          "type": "expression",
          "value": "readOnlyProducts || isFieldReadOnly"
        },
        {
          "name": "type",
          "type": "string",
          "value": "number"
        },
        {
          "name": "size",
          "type": "number",
          "value": "5"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "`countField${key}`"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "prod.count !== 0 ? prod.count : undefined"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => handleCountSet(key, parseInt(e.value))"
        },
        {
          "name": "width",
          "type": "expression",
          "value": "!(readOnlyProducts || isFieldReadOnly) ? \"100%\" : \"auto\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/BizOpsOrgDetailsForm.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "(orgDetails[\"orgDisplayName\"].isEdited || !isSaveAllowed) &&\n\t\t\t\t\t\t\torgDetails[\"orgDisplayName\"].errors.validationErrors.concat(\n\t\t\t\t\t\t\t\torgDetails[\"orgDisplayName\"].errors.inputErrors\n\t\t\t\t\t\t\t).length > 0"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "orgDetails[\"orgDisplayName\"].errors.validationErrors.concat(\n\t\t\t\t\t\t\t\torgDetails[\"orgDisplayName\"].errors.inputErrors\n\t\t\t\t\t\t\t)[0]"
        },
        {
          "name": "name",
          "type": "string",
          "value": "orgDisplayName"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "inputHandler"
        },
        {
          "name": "width",
          "type": "string",
          "value": "80%"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "createBizOrganization.orgDetails.orgDisplayName"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "!!validationErrors"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/BizOpsOrgDetailsForm.tsx",
      "props": [
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "(orgDetails[\"orgId\"].isEdited || !isSaveAllowed) &&\n\t\t\t\t\t\t\torgDetails[\"orgId\"].errors.validationErrors.concat(orgDetails[\"orgId\"].errors.inputErrors).length > 0"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "validationErrors\n\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t: orgDetails[\"orgId\"].errors.validationErrors.concat(orgDetails[\"orgId\"].errors.inputErrors)[0] ||\n\t\t\t\t\t\t\t\t  createBizOrganization.orgDetails.orgIdWarning"
        },
        {
          "name": "name",
          "type": "string",
          "value": "orgId"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "inputHandler"
        },
        {
          "name": "width",
          "type": "string",
          "value": "80%"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "createBizOrganization.orgDetails.orgId"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "!!validationErrors"
        },
        {
          "name": "hasWarnings",
          "type": "expression",
          "value": "!validationErrors"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/BizOpsOrgDetailsForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "accountName"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "inputHandler"
        },
        {
          "name": "width",
          "type": "string",
          "value": "80%"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "createBizOrganization.orgDetails.accountName"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "!!validationErrors"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "(orgDetails[\"accountName\"].isEdited || !isSaveAllowed) &&\n\t\t\t\t\t\t\torgDetails[\"accountName\"].errors.validationErrors.concat(orgDetails[\"accountName\"].errors.inputErrors)\n\t\t\t\t\t\t\t\t.length > 0"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "orgDetails[\"accountName\"].errors.validationErrors.concat(\n\t\t\t\t\t\t\t\torgDetails[\"accountName\"].errors.inputErrors\n\t\t\t\t\t\t\t)[0] || createBizOrganization.orgDetails.accountNameHelperText"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/BizOpsOrgDetailsForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "accountId"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "inputHandler"
        },
        {
          "name": "width",
          "type": "string",
          "value": "80%"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "!!validationErrors"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "createBizOrganization.orgDetails.accountId"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "(orgDetails[\"accountId\"].isEdited || !isSaveAllowed) &&\n\t\t\t\t\t\t\torgDetails[\"accountId\"].errors.validationErrors.concat(orgDetails[\"accountId\"].errors.inputErrors)\n\t\t\t\t\t\t\t\t.length > 0"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "orgDetails[\"accountId\"].errors.validationErrors.concat(orgDetails[\"accountId\"].errors.inputErrors)[0] ||\n\t\t\t\t\t\t\tcreateBizOrganization.orgDetails.accountIdHelperText"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/BizOpsOrgDetailsForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "costCenter"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "inputHandler"
        },
        {
          "name": "width",
          "type": "string",
          "value": "80%"
        },
        {
          "name": "value",
          "type": "expression",
          "value": "orgDetails[\"costCenter\"].value"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "!!validationErrors"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "createBizOrganization.orgDetails.costCenter"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "costCenterInput"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "(orgDetails[\"costCenter\"].isEdited || !isSaveAllowed) && getCostCenterErrors().length > 0"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "((orgDetails[\"costCenter\"].isEdited || !isSaveAllowed) && getCostCenterErrors()[0]) || \"\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/ProductSubscriptionDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "domainNameFilter"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "nameFilter"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleFilterChange"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnlyProducts"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "filterDomainName"
        },
        {
          "name": "placeholder",
          "type": "expression",
          "value": "i18nStrings.filterByNameLabel"
        },
        {
          "name": "size",
          "type": "number",
          "value": "155"
        },
        {
          "name": "width",
          "type": "string",
          "value": "100%"
        },
        {
          "name": "endAdornment",
          "type": "array",
          "value": "[\n\t\t\t\t\t\t\t\t\tnameFilter ? (\n\t\t\t\t\t\t\t\t\t\t<SolaceButton key={\"closeIcon\"} variant=\"icon\" onClick={handleClearSearchText}>\n\t\t\t\t\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t\t\t\t<div key=\"searchIcon\" style={{ marginRight: \"8px\", height: \"24px\" }}>\n\t\t\t\t\t\t\t\t\t\t<SearchIcon />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t]"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/AccountAdminsSection.tsx",
      "props": [
        {
          "name": "helperText",
          "type": "expression",
          "value": "currentEmailEntry.length > 0 && !isEmailValid ? (\n\t\t\t\t\t\t\t\t\t<span data-qa=\"accountAdminEmailError\" id=\"accountAdminEmailError\" style={{ color: \"inherit\" }}>\n\t\t\t\t\t\t\t\t\t\t{createBizOrganization.accountAdmins.errorHelperText}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) : emailList.length === 0 && !isSaveAllowed ? (\n\t\t\t\t\t\t\t\t\t<span data-qa=\"accountAdminEmailError\" id=\"accountAdminEmailError\" style={{ color: 'inherit' }}>\n\t\t\t\t\t\t\t\t\t\t{createBizOrganization.accountAdmins.requiredFieldError}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\tcreateBizOrganization.accountAdmins.emailsPlaceholder\n\t\t\t\t\t\t\t\t)"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "(currentEmailEntry.length > 0 && !isEmailValid) || (emailList.length === 0 && !isSaveAllowed)"
        },
        {
          "name": "name",
          "type": "string",
          "value": "accountAdminEmail"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value }) => setCurrentEmailEntry(value)"
        },
        {
          "name": "onBlur",
          "type": "function",
          "value": "() => { setIsEmailValid(isEmail(currentEmailEntry)) }"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "currentEmailEntry"
        },
        {
          "name": "width",
          "type": "string",
          "value": "100%"
        },
        {
          "name": "data-qa",
          "type": "string",
          "value": "accountAdminTextField"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/monitoringDashboard/insightsOrganizations/InsightsOrganizations.tsx",
      "props": [
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "searchByOrgId"
        },
        {
          "name": "name",
          "type": "string",
          "value": "searchByOrgId"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Search By Organization ID"
        },
        {
          "name": "width",
          "type": "string",
          "value": "500px"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "orgId"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => (!loadingOrgs ? setOrgId(event.value) : undefined)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/monitoringDashboard/monitoringJobs/MonitoringJobs.tsx",
      "props": [
        {
          "name": "autoFocus",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "searchByOrgId"
        },
        {
          "name": "name",
          "type": "string",
          "value": "searchByOrgId"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Search By Organization ID"
        },
        {
          "name": "width",
          "type": "string",
          "value": "500px"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "orgId"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => (!loadingJobs ? setOrgId(event.value) : undefined)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/privateRegions/components/CloneDialog.tsx",
      "props": [
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "datacenterId"
        },
        {
          "name": "name",
          "type": "string",
          "value": "datacenterId"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/privateRegions/components/CloneDialog.tsx",
      "props": [
        {
          "name": "inlineLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "placeholder",
          "type": "string",
          "value": "Type a datacenter ID ..."
        },
        {
          "name": "name",
          "type": "string",
          "value": "sourceDatacenterId"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "sourceDatacenterId"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "selectedDatacenterId"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "isLoading"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value }) => {\n\t\t\t\t\t\t\tsetSelectedDatacenterId(value);\n\t\t\t\t\t\t\treset();\n\t\t\t\t\t\t}"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/distributedTracing/CollectorModificationDialog.tsx",
      "props": [
        {
          "name": "disabled",
          "type": "variable",
          "value": "isPerformingRequest"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Image Tag"
        },
        {
          "name": "name",
          "type": "string",
          "value": "imageTag"
        },
        {
          "name": "title",
          "type": "string",
          "value": "Image Tag"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "imageTag"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => dispatch(setImageTag(event.value.trim()))"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "imageTag"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/distributedTracing/CollectorModificationDialog.tsx",
      "props": [
        {
          "name": "disabled",
          "type": "variable",
          "value": "isPerformingRequest"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Helm Chart Version"
        },
        {
          "name": "name",
          "type": "string",
          "value": "helmChartVersion"
        },
        {
          "name": "title",
          "type": "string",
          "value": "Helm Chart Version"
        },
        {
          "name": "value",
          "type": "variable",
          "value": "helmChartVersion"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => dispatch(setHelmChartVersion(event.value.trim()))"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "helmChartVersion"
        },
        {
          "name": "required",
          "type": "boolean",
          "value": "true"
        }
      ]
    }
  ]
}