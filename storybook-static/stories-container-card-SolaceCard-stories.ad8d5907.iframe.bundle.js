"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[5541],{"../node_modules/@mui/icons-material/Info.js":(__unused_webpack_module,exports,__webpack_require__)=>{var _interopRequireDefault=__webpack_require__("../node_modules/@babel/runtime/helpers/interopRequireDefault.js");exports.Z=void 0;var _createSvgIcon=_interopRequireDefault(__webpack_require__("../node_modules/@mui/icons-material/utils/createSvgIcon.js")),_jsxRuntime=__webpack_require__("./node_modules/react/jsx-runtime.js"),_default=(0,_createSvgIcon.default)((0,_jsxRuntime.jsx)("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z"}),"Info");exports.Z=_default},"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/stories/container/card/SolaceCard.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CardWithSubTitle:()=>CardWithSubTitle,CompleteCard:()=>CompleteCard,CustomContent:()=>CustomContent,Default:()=>Default,PaddingOptions:()=>PaddingOptions,ReadOnly:()=>ReadOnly,WithDefaultHeader:()=>WithDefaultHeader,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../dist/index.js"),_mui_icons_material_Info__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../node_modules/@mui/icons-material/Info.js");_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceCard.displayName="SolaceCard";const __WEBPACK_DEFAULT_EXPORT__={title:"Container/Card",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceCard,parameters:{design:{type:"figma",url:"https://www.figma.com/design/4Y6nwn19uTNgpxzNAP5Vqe/Patterns?node-id=19215-2455&p=f&t=FAQR9BgIIAEYGEql-0"}},argTypes:{cardHeaderProps:{control:{type:"object"},description:"Configuration object for the card header component. Contains properties like title, subtitle, icon, and action elements. Use this to create a consistent header across different card implementations.",table:{type:{summary:"SolaceCardHeaderProps"},defaultValue:{summary:"undefined"}}},cardContent:{description:"The main content area of the card. Can be any React node including text, components, or complex layouts. This is where the primary information or functionality of the card is displayed.",table:{type:{summary:"React.ReactNode"},defaultValue:{summary:"undefined"}}},cardActions:{description:"Action elements displayed at the bottom of the card. Typically contains buttons, links, or other interactive elements that users can perform on the card content.",table:{type:{summary:"React.ReactNode"},defaultValue:{summary:"undefined"}}},width:{control:{type:"text"},description:"Explicit width of the card. Can be specified in any valid CSS unit (px, %, rem, etc.). Use this to control the exact width when the card needs to fit specific layout requirements.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},height:{control:{type:"text"},description:"Explicit height of the card. Can be specified in any valid CSS unit (px, %, rem, etc.). Use this when you need cards to have consistent heights in a grid layout.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},minWidth:{control:{type:"text"},description:"Minimum width constraint for the card. Ensures the card maintains usability and readability even in responsive layouts. Prevents content from becoming too cramped.",table:{type:{summary:"string"},defaultValue:{summary:"250px"}}},maxWidth:{control:{type:"text"},description:"Maximum width constraint for the card. Prevents cards from becoming too wide on large screens, maintaining optimal readability and visual balance.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},padding:{control:{type:"text"},description:"Internal padding for the entire card content. Controls the spacing between the card border and its content. Use larger padding for cards with more content or when more breathing room is needed.",table:{type:{summary:"string"},defaultValue:{summary:"16px"}}},margin:{control:{type:"text"},description:"External margin around the card. Controls spacing between the card and adjacent elements. Useful for creating consistent spacing in card grids or lists.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},readOnly:{control:{type:"boolean"},description:"When true, the card is in read-only mode and cannot be interacted with. Used for display-only cards that serve as visual layout elements to categorize and group content without interactive functionality.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},onClick:{description:"Callback function triggered when the card is clicked. Only functional when readOnly is false. Use this to make the entire card clickable for navigation or selection purposes."},elevation:{control:{type:"number",min:0,max:24},description:"Material-UI elevation level for the card shadow. Higher values create more pronounced shadows, giving the appearance of the card being elevated above the background.",table:{type:{summary:"number"},defaultValue:{summary:"1"}}},variant:{control:{type:"select"},options:["elevation","outlined"],description:"Visual variant of the card. 'elevation' uses shadow for depth, 'outlined' uses a border. Choose based on your design system and the visual hierarchy you want to establish.",table:{type:{summary:'"elevation" | "outlined"'},defaultValue:{summary:"elevation"}}},square:{control:{type:"boolean"},description:"When true, removes border radius for sharp corners. When false, applies rounded corners for a softer appearance. Use square cards for more formal or technical interfaces.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},raised:{control:{type:"boolean"},description:"When true, applies a more prominent elevation/shadow effect. Use this to make certain cards stand out more prominently in the interface, such as featured content or important notifications.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},ariaLabel:{control:{type:"text"},description:"ARIA label for accessibility. Provides a text description of the card's purpose for screen readers. Essential for making interactive cards accessible to users with disabilities.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},ariaDescribedBy:{control:{type:"text"},description:"ARIA described-by attribute referencing elements that provide additional description for the card. Use this to link the card to help text or detailed descriptions elsewhere on the page.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},role:{control:{type:"text"},description:"ARIA role for the card element. Defines the semantic meaning of the card for assistive technologies. Common values include 'button' for clickable cards or 'article' for content cards.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},tabIndex:{control:{type:"number"},description:"Tab index for keyboard navigation. When set to 0, makes the card focusable via keyboard navigation. When -1, removes from tab order but allows programmatic focus.",table:{type:{summary:"number"},defaultValue:{summary:"undefined"}}},dataQa:{control:{type:"text"},description:"Data attribute for QA testing. Use this to identify card elements during automated testing. Should be unique and descriptive of the card's purpose or content.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},dataTags:{control:{type:"text"},description:"Data attribute for additional tagging and metadata. Use this for analytics tracking, categorization, or any additional metadata that needs to be associated with the card element.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},className:{control:{type:"text"},description:"Additional CSS class names to apply to the card. Use this to extend the card's styling with custom CSS classes while maintaining the base card functionality.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},id:{control:{type:"text"},description:"Unique identifier for the card element. Use this when you need to reference the card programmatically or for linking with other elements via ARIA attributes.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}}}},menuItemsWithSecondaryActions=[{name:"Doc",onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{href:"http://www.cnn.com",variant:"link"})},{name:"Tutorial",onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{href:"http://www.cnn.com",variant:"link"})},{name:"Download",onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{href:"http://www.cnn.com",variant:"link"})}],SolaceCardStory=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{margin:"20px",padding:"20px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceCard,args)),Default={render:SolaceCardStory,args:{dataQa:"default-empty-card",width:"250px",height:"250px",minWidth:"250px",cardContent:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTypography,{variant:"body1"},"Click me! I'm interactive."),onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback")},parameters:{docs:{description:{story:"Default empty card with no header or footer, just an empty content area. This is the interactive card per the Card pattern. This card has an onClick handler that will be triggered when the card is clicked."}}}},ReadOnly={render:SolaceCardStory,args:{dataQa:"read-only-card",width:"250px",height:"250px",minWidth:"250px",cardContent:react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null),readOnly:!0,onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback")},parameters:{docs:{description:{story:"Read-only card example. Read-only cards are used as a visual layout option to help categorize and group topics. Note that even though an onClick handler is provided, it will not be triggered because the card is in read-only mode."}}}},CustomContent={render:SolaceCardStory,args:{dataQa:"custom-content-card",width:"400px",minWidth:"300px",onClick:()=>{alert("Card Clicked")},cardContent:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTypography,{variant:"h3",sx:{marginBottom:"8px"}},"Custom Title"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTypography,{variant:"body1"},"This is an example of a custom title as an example of what teams can do if they do not want to use the built-in header styling."))},parameters:{docs:{description:{story:"Card with custom content only. No header or footer. Shows an example of a custom title as an alternative to using the built-in header styling."}}}},PaddingOptions={render:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"24px",padding:"20px",margin:"20px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceCard,{dataQa:"padding-16px-card",width:"300px",cardHeaderProps:{title:"16px Padding (Default)"},cardContent:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTypography,{variant:"body1"},"This card uses the default padding of 16px. This is suitable for most card sizes.")}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceCard,{dataQa:"padding-24px-card",width:"300px",padding:"24px",cardHeaderProps:{title:"24px Padding"},cardContent:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTypography,{variant:"body1"},"This card uses a larger padding of 24px. This is suitable for larger cards that need more breathing room.")})),parameters:{docs:{description:{story:"Demonstrates both 16px (default) and 24px padding options for the card."}}}},WithDefaultHeader={render:SolaceCardStory,args:{dataQa:"with-header-card",width:"400px",minWidth:"371px",readOnly:!0,cardHeaderProps:{title:"Java",icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Info__WEBPACK_IMPORTED_MODULE_3__.Z,null),actionElements:react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{variant:"text",onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback")},"Tutorials"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceMenu,{buttonProps:{variant:"icon",title:"Actions","aria-label":"Actions menu",children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.MoreHorizOutlinedIcon,null)},items:menuItemsWithSecondaryActions.map((item=>({...item}))),numOfMenuItemDisplayed:menuItemsWithSecondaryActions.length}))}},parameters:{docs:{description:{story:"Original SolaceCard with icon, title, button, and menu"}}}},CardWithSubTitle={render:SolaceCardStory,args:{dataQa:"With-subtitle-card",width:"400px",minWidth:"371px",readOnly:!0,cardHeaderProps:{title:"Go",subTitle:"PubSub+ Messaging API for Go",icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material_Info__WEBPACK_IMPORTED_MODULE_3__.Z,null),actionElements:react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{variant:"text",onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback")},"Tutorials"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceMenu,{buttonProps:{variant:"icon",title:"actions","aria-label":"menu actions",children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.MoreHorizOutlinedIcon,null)},items:menuItemsWithSecondaryActions.map((item=>({...item}))),numOfMenuItemDisplayed:menuItemsWithSecondaryActions.length}))}},parameters:{docs:{description:{story:"SolaceCard with icon, title, subTitle, button, and menu"}}}},CompleteCard={render:SolaceCardStory,args:{dataQa:"complete-card-example",width:"400px",readOnly:!0,cardHeaderProps:{title:"Built-in header",subTitle:"subtitle",actionElements:react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",alignItems:"center",gap:"8px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceMenu,{buttonProps:{variant:"icon",title:"More actions","aria-label":"Action menu",children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.MoreHorizOutlinedIcon,null)},items:menuItemsWithSecondaryActions,numOfMenuItemDisplayed:menuItemsWithSecondaryActions.length}))},cardContent:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTypography,{variant:"body1"},"Card Content")),cardActions:react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",gap:"8px",justifyContent:"space-between",alignItems:"center",flex:"1"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTypography,{variant:"body1"},"CardActions"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{variant:"icon",onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback")},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.DeleteIcon,null)))},parameters:{docs:{description:{story:"Complete card with all 3 parts"}}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: SolaceCardStory,\n  args: {\n    dataQa: "default-empty-card",\n    width: "250px",\n    height: "250px",\n    minWidth: "250px",\n    cardContent: <SolaceTypography variant="body1">Click me! I&apos;m interactive.</SolaceTypography>,\n    onClick: action("callback")\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Default empty card with no header or footer, just an empty content area. This is the interactive card per the Card pattern. This card has an onClick handler that will be triggered when the card is clicked."\n      }\n    }\n  }\n}',...Default.parameters?.docs?.source},description:{story:"Default story - A card that has nothing in it except an empty content area.\nNo header, no footer. This helps show what devs will get if they pass nothing in.",...Default.parameters?.docs?.description}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:'{\n  render: SolaceCardStory,\n  args: {\n    dataQa: "read-only-card",\n    width: "250px",\n    height: "250px",\n    minWidth: "250px",\n    cardContent: <div></div>,\n    readOnly: true,\n    onClick: action("callback")\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Read-only card example. Read-only cards are used as a visual layout option to help categorize and group topics. " + "Note that even though an onClick handler is provided, it will not be triggered because the card is in read-only mode."\n      }\n    }\n  }\n}',...ReadOnly.parameters?.docs?.source},description:{story:"Read Only story - Show an example of what it looks like when the card is read-only.",...ReadOnly.parameters?.docs?.description}}},CustomContent.parameters={...CustomContent.parameters,docs:{...CustomContent.parameters?.docs,source:{originalSource:'{\n  render: SolaceCardStory,\n  args: {\n    dataQa: "custom-content-card",\n    width: "400px",\n    minWidth: "300px",\n    onClick: () => {\n      alert("Card Clicked");\n    },\n    cardContent: <>\n                <SolaceTypography variant="h3" sx={{\n        marginBottom: "8px"\n      }}>\n                    Custom Title\n                </SolaceTypography>\n                <SolaceTypography variant="body1">\n                    This is an example of a custom title as an example of what teams can do if they do not want to use the\n                    built-in header styling.\n                </SolaceTypography>\n            </>\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Card with custom content only. No header or footer. Shows an example of a custom title as an alternative to using the built-in header styling."\n      }\n    }\n  }\n}',...CustomContent.parameters?.docs?.source},description:{story:"Custom Content story - No header, no footer. Content only with custom title.",...CustomContent.parameters?.docs?.description}}},PaddingOptions.parameters={...PaddingOptions.parameters,docs:{...PaddingOptions.parameters?.docs,source:{originalSource:'{\n  render: () => <div style={{\n    display: "flex",\n    flexDirection: "column",\n    gap: "24px",\n    padding: "20px",\n    margin: "20px"\n  }}>\n            <SolaceCard dataQa="padding-16px-card" width="300px" cardHeaderProps={{\n      title: "16px Padding (Default)"\n    }} cardContent={<SolaceTypography variant="body1">\n                        This card uses the default padding of 16px. This is suitable for most card sizes.\n                    </SolaceTypography>} />\n            <SolaceCard dataQa="padding-24px-card" width="300px" padding="24px" cardHeaderProps={{\n      title: "24px Padding"\n    }} cardContent={<SolaceTypography variant="body1">\n                        This card uses a larger padding of 24px. This is suitable for larger cards that need more breathing room.\n                    </SolaceTypography>} />\n        </div>,\n  parameters: {\n    docs: {\n      description: {\n        story: "Demonstrates both 16px (default) and 24px padding options for the card."\n      }\n    }\n  }\n}',...PaddingOptions.parameters?.docs?.source},description:{story:"Padding Options story - Demonstrate both 16px and 24px padding options.",...PaddingOptions.parameters?.docs?.description}}},WithDefaultHeader.parameters={...WithDefaultHeader.parameters,docs:{...WithDefaultHeader.parameters?.docs,source:{originalSource:'{\n  render: SolaceCardStory,\n  args: {\n    dataQa: "with-header-card",\n    width: "400px",\n    minWidth: "371px",\n    readOnly: true,\n    cardHeaderProps: {\n      title: "Java",\n      icon: <InfoIcon />,\n      actionElements: <div style={{\n        display: "flex",\n        alignItems: "center",\n        gap: "8px"\n      }}>\n                    <SolaceButton variant="text" onClick={action("callback")}>\n                        Tutorials\n                    </SolaceButton>\n                    <SolaceMenu buttonProps={{\n          variant: "icon",\n          title: "Actions",\n          "aria-label": "Actions menu",\n          children: <MoreHorizOutlinedIcon />\n        }} items={menuItemsWithSecondaryActions.map(item => ({\n          ...item\n        }))} numOfMenuItemDisplayed={menuItemsWithSecondaryActions.length} />\n                </div>\n    }\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Original SolaceCard with icon, title, button, and menu"\n      }\n    }\n  }\n}',...WithDefaultHeader.parameters?.docs?.source},description:{story:"Original Default SolaceCard story",...WithDefaultHeader.parameters?.docs?.description}}},CardWithSubTitle.parameters={...CardWithSubTitle.parameters,docs:{...CardWithSubTitle.parameters?.docs,source:{originalSource:'{\n  render: SolaceCardStory,\n  args: {\n    dataQa: "With-subtitle-card",\n    width: "400px",\n    minWidth: "371px",\n    readOnly: true,\n    cardHeaderProps: {\n      title: "Go",\n      subTitle: "PubSub+ Messaging API for Go",\n      icon: <InfoIcon />,\n      actionElements: <div style={{\n        display: "flex",\n        alignItems: "center",\n        gap: "8px"\n      }}>\n                    <SolaceButton variant="text" onClick={action("callback")}>\n                        Tutorials\n                    </SolaceButton>\n                    <SolaceMenu buttonProps={{\n          variant: "icon",\n          title: "actions",\n          "aria-label": "menu actions",\n          children: <MoreHorizOutlinedIcon />\n        }} items={menuItemsWithSecondaryActions.map(item => ({\n          ...item\n        }))} numOfMenuItemDisplayed={menuItemsWithSecondaryActions.length} />\n                </div>\n    }\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "SolaceCard with icon, title, subTitle, button, and menu"\n      }\n    }\n  }\n}',...CardWithSubTitle.parameters?.docs?.source}}},CompleteCard.parameters={...CompleteCard.parameters,docs:{...CompleteCard.parameters?.docs,source:{originalSource:'{\n  render: SolaceCardStory,\n  args: {\n    dataQa: "complete-card-example",\n    width: "400px",\n    readOnly: true,\n    cardHeaderProps: {\n      title: "Built-in header",\n      subTitle: "subtitle",\n      actionElements: <div style={{\n        display: "flex",\n        alignItems: "center",\n        gap: "8px"\n      }}>\n                    <SolaceMenu buttonProps={{\n          variant: "icon",\n          title: "More actions",\n          "aria-label": "Action menu",\n          children: <MoreHorizOutlinedIcon />\n        }} items={menuItemsWithSecondaryActions} numOfMenuItemDisplayed={menuItemsWithSecondaryActions.length} />\n                </div>\n    },\n    cardContent: <>\n                <SolaceTypography variant="body1">Card Content</SolaceTypography>\n            </>,\n    cardActions: <div style={{\n      display: "flex",\n      gap: "8px",\n      justifyContent: "space-between",\n      alignItems: "center",\n      flex: "1"\n    }}>\n                <SolaceTypography variant="body1">CardActions</SolaceTypography>\n                <SolaceButton variant="icon" onClick={action("callback")}>\n                    <DeleteIcon />\n                </SolaceButton>\n            </div>\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: "Complete card with all 3 parts"\n      }\n    }\n  }\n}',...CompleteCard.parameters?.docs?.source}}};const __namedExportsOrder=["Default","ReadOnly","CustomContent","PaddingOptions","WithDefaultHeader","CardWithSubTitle","CompleteCard"]}}]);