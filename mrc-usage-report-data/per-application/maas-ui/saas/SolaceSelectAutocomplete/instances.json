[
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/userAccess/rrbac/components/UserAccessSelectAutocomplete.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "userAccessSelect-search"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`userAccessSelect-${resourceAssignment.userId}`"
      },
      {
        "name": "itemComponent",
        "type": "variable",
        "value": "SolaceSelectAutocompleteItem"
      },
      {
        "name": "optionsLabelCallback",
        "type": "variable",
        "value": "getSolaceSelectAutocompleteOptionLabel"
      },
      {
        "name": "isOptionEqualToValueCallback",
        "type": "function",
        "value": "(option, value) => option?.value === value?.value"
      },
      {
        "name": "itemMappingCallback",
        "type": "function",
        "value": "(option) => option ?? { name: \"\", value: \"\" }"
      },
      {
        "name": "fetchOptionsCallback",
        "type": "function",
        "value": "(searchTerm) => setSearchTerm(searchTerm)"
      },
      {
        "name": "getOptionDisabledCallback",
        "type": "function",
        "value": "(option) =>\n\t\t\t\t!!emptyOptionMapByValue[option?.value as keyof typeof emptyOptionMapByValue]"
      },
      {
        "name": "options",
        "type": "variable",
        "value": "userOptions"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedOption"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleOnChange"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!resourceAssignment.error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "resourceAssignment.error"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/userManagement/components/DeleteUserDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "transferServicesDropdownSelect"
      },
      {
        "name": "name",
        "type": "string",
        "value": "transferServicesDropdownSelect"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "transferServicesDropdownSelect"
      },
      {
        "name": "fetchOptionsCallback",
        "type": "variable",
        "value": "fetchOptionsCallback"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "multiple",
        "type": "boolean",
        "value": "false"
      },
      {
        "name": "itemComponent",
        "type": "variable",
        "value": "SolaceSelectAutocompleteItem"
      },
      {
        "name": "itemMappingCallback",
        "type": "function",
        "value": "(option) => option"
      },
      {
        "name": "optionsLabelCallback",
        "type": "variable",
        "value": "getSolaceSelectAutocompleteOptionLabel"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleOnChange"
      },
      {
        "name": "options",
        "type": "variable",
        "value": "usersDropdownList"
      },
      {
        "name": "title",
        "type": "string",
        "value": "Select a user to transfer services to"
      },
      {
        "name": "isOptionEqualToValueCallback",
        "type": "variable",
        "value": "isSolaceSelectAutocompleteOptionEqual"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/userGroups/components/CreateEditUserGroupsDialog.tsx",
    "props": [
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "id",
        "type": "string",
        "value": "userGroupRoleDropdownId"
      },
      {
        "name": "name",
        "type": "string",
        "value": "userGroupRoleDropdown"
      },
      {
        "name": "width",
        "type": "string",
        "value": "800px"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "userGroups.ugDialog.roles"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "userGroupRoleDropdownQa"
      },
      {
        "name": "multiple",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleUserGroupRoleChange"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "dialogState.roleValue ? dialogState.roleValue : currentFilters"
      },
      {
        "name": "options",
        "type": "variable",
        "value": "filterOptions"
      },
      {
        "name": "itemComponent",
        "type": "variable",
        "value": "SolaceSelectAutocompleteItem"
      },
      {
        "name": "itemMappingCallback",
        "type": "function",
        "value": "(option) => option"
      },
      {
        "name": "optionsLabelCallback",
        "type": "variable",
        "value": "getSolaceSelectAutocompleteOptionLabel"
      },
      {
        "name": "getShowOptionDividerCallback",
        "type": "variable",
        "value": "getShowSolaceSelectAutocompleteOptionDivider"
      },
      {
        "name": "isOptionEqualToValueCallback",
        "type": "variable",
        "value": "isSolaceSelectAutocompleteOptionEqual"
      },
      {
        "name": "fetchOptionsCallback",
        "type": "variable",
        "value": "handleFiltersCallback"
      },
      {
        "name": "getOptionDisabledCallback",
        "type": "variable",
        "value": "handleRolesDisabled"
      },
      {
        "name": "hasErrors",
        "type": "variable",
        "value": "hasRoleError"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "hasRoleError ? userGroups.ugDialog.ugRoleError : \"\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/auditLogs/AudiLogs.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "en.auditLogs.username"
      },
      {
        "name": "id",
        "type": "string",
        "value": "usernameSelectFilter"
      },
      {
        "name": "name",
        "type": "string",
        "value": "usernameSelectFilter"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "usernameSelectFilter"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => handleEmailSelection(e.value as IEmailOption)"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "filters.email.value ? selectedEmail : undefined"
      },
      {
        "name": "options",
        "type": "expression",
        "value": "emailSearchTerm ? matchingEmails : getEmails(usersDetails)"
      },
      {
        "name": "itemComponent",
        "type": "function",
        "value": "(item: SolaceSelectAutocompleteItemProps & { roles?: string[] }) => {\n\t\t\t\t\treturn SolaceSelectAutocompleteItem({\n\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\tvalue: item.name\n\t\t\t\t\t});\n\t\t\t\t}"
      },
      {
        "name": "itemMappingCallback",
        "type": "function",
        "value": "(option) => option"
      },
      {
        "name": "optionsLabelCallback",
        "type": "variable",
        "value": "getSolaceSelectAutocompleteOptionLabel"
      },
      {
        "name": "getShowOptionDividerCallback",
        "type": "variable",
        "value": "getShowSolaceSelectAutocompleteOptionDivider"
      },
      {
        "name": "isOptionEqualToValueCallback",
        "type": "variable",
        "value": "isSolaceSelectAutocompleteOptionEqual"
      },
      {
        "name": "fetchOptionsCallback",
        "type": "variable",
        "value": "handleFetchProtocolOptionsCallback"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/GroupManagement/components/GroupManagementChecks.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "userGroupManagement.defaultUserGroupLabel"
      },
      {
        "name": "hasErrors",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "id",
        "type": "string",
        "value": "customizeUserGroup"
      },
      {
        "name": "name",
        "type": "string",
        "value": "customizeUserGroup"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "customizeUserGroup"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "!selectedUserGroup ? userGroupManagement.selectDefaultGroup : \"\""
      },
      {
        "name": "placeholder",
        "type": "expression",
        "value": "selectedUserGroup?.name"
      },
      {
        "name": "options",
        "type": "expression",
        "value": "userGroupFilter ? matchingUserGroups : getUserGroups(userGroupsDataResponse?.data)"
      },
      {
        "name": "itemComponent",
        "type": "function",
        "value": "(item: SolaceSelectAutocompleteItemProps & { roles?: string[] }) => {\n\t\t\t\t\t\t\t\t\t\treturn SolaceSelectAutocompleteItem({\n\t\t\t\t\t\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\t\t\t\t\t\tsubText: item.roles?.join(\", \"),\n\t\t\t\t\t\t\t\t\t\t\tvalue: item.name\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "itemMappingCallback",
        "type": "function",
        "value": "(option) => option"
      },
      {
        "name": "optionsLabelCallback",
        "type": "variable",
        "value": "getSolaceSelectAutocompleteOptionLabel"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleUserGroupSelectChange"
      },
      {
        "name": "fetchOptionsCallback",
        "type": "variable",
        "value": "handleFetchProtocolOptionsCallback"
      },
      {
        "name": "isOptionEqualToValueCallback",
        "type": "variable",
        "value": "isSolaceSelectAutocompleteOptionEqual"
      },
      {
        "name": "width",
        "type": "string",
        "value": "30rem"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/GroupManagement/components/ClaimMapping.tsx",
    "props": [
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "id",
        "type": "string",
        "value": "claimMappingUserGroups"
      },
      {
        "name": "name",
        "type": "string",
        "value": "claimMappingUserGroups"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "claimMappingUserGroups"
      },
      {
        "name": "multiple",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => setSelectedUserGroups(e.value as IUserGroupsItem[])"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedUserGroups"
      },
      {
        "name": "options",
        "type": "expression",
        "value": "userGroupFilter ? matchingUserGroups : getUserGroups(userGroupsDataResponse?.data)"
      },
      {
        "name": "itemComponent",
        "type": "function",
        "value": "(item: SolaceSelectAutocompleteItemProps & { roles?: string[] }) => {\n\t\t\t\t\treturn SolaceSelectAutocompleteItem({\n\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\tsubText: item.roles?.map((role) => (mappedRolesData as IMappedRolesData)[role].name).join(\", \"),\n\t\t\t\t\t\tvalue: item.name\n\t\t\t\t\t});\n\t\t\t\t}"
      },
      {
        "name": "itemMappingCallback",
        "type": "function",
        "value": "(option) => option"
      },
      {
        "name": "optionsLabelCallback",
        "type": "variable",
        "value": "getSolaceSelectAutocompleteOptionLabel"
      },
      {
        "name": "getShowOptionDividerCallback",
        "type": "variable",
        "value": "getShowSolaceSelectAutocompleteOptionDivider"
      },
      {
        "name": "isOptionEqualToValueCallback",
        "type": "variable",
        "value": "isSolaceSelectAutocompleteOptionEqual"
      },
      {
        "name": "fetchOptionsCallback",
        "type": "variable",
        "value": "handleFetchProtocolOptionsCallback"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/support/GetSupport.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "servicesDropdownId"
      },
      {
        "name": "name",
        "type": "string",
        "value": "servicesDropdown"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "supportPageService"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleServiceDropdown"
      },
      {
        "name": "fetchOptionsCallback",
        "type": "variable",
        "value": "handleServiceCallback"
      },
      {
        "name": "itemMappingCallback",
        "type": "function",
        "value": "(option) => option"
      },
      {
        "name": "options",
        "type": "variable",
        "value": "services"
      },
      {
        "name": "isOptionEqualToValueCallback",
        "type": "variable",
        "value": "isSolaceSelectAutocompleteOptionEqual"
      },
      {
        "name": "itemComponent",
        "type": "variable",
        "value": "SolaceSelectAutocompleteItem"
      },
      {
        "name": "optionsLabelCallback",
        "type": "variable",
        "value": "getSolaceSelectAutocompleteOptionLabel"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "dropdownValueFromParam"
      }
    ]
  }
]