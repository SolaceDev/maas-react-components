[
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/CustomAttributes/CustomAttributesEditor.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || \"\""
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!errorMsgs[index]"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "errorMsgs[index] || (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Box textAlign={\"right\"}>{`${value.trim().length.toLocaleString()}/${complexValueTypeCharLimit.toLocaleString()}`}</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t)"
      },
      {
        "name": "minRows",
        "type": "number",
        "value": "3"
      },
      {
        "name": "maxRows",
        "type": "number",
        "value": "3"
      },
      {
        "name": "maxLength",
        "type": "variable",
        "value": "complexValueTypeCharLimit"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst newValue = e.value;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (value !== newValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange(newValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleValueUpdate(index, customAttributeValue, errorMsgs, newValue, valueType);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "onBlur",
        "type": "function",
        "value": "() => {\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(value.trim());\n\t\t\t\t\t\t\t\t\t\t\t\thandleValueUpdate(index, customAttributeValue, errorMsgs, value.trim(), valueType);\n\t\t\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`${caKey}-value-input`"
      },
      {
        "name": "resizable",
        "type": "expression",
        "value": "\"vertical\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RESTDeliveryPointQueueBinding.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "`postRequestTargetValue`"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "queueBindingConfiguration.postRequestTarget"
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`postRequestTargetValue`"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RESTDeliveryPointQueueBinding.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "`${prefix}Value`"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "displayedHeaderValue"
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`${prefix}Value`"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RequestHeaderDialog.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "en.application.configuration.restDeliveryPoint.requestHeaderValue"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || \"\""
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "maxLength",
        "type": "number",
        "value": "2001"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "onBlur",
        "type": "function",
        "value": "() => {\n\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\tvalue && onChange(value.trim());\n\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "dataQa",
        "type": "variable",
        "value": "configurationNameRequestHeaderValue"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : \"\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/sidePanel/customAttributePanel/CustomAttributeForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || \"\""
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!errorMsgs[index]"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "errorMsgs[index] || (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Box textAlign={\"right\"}>{`${value.trim().length.toLocaleString()}/${complexValueTypeCharLimit.toLocaleString()}`}</Box>\n\t\t\t\t\t\t\t\t\t\t\t\t)"
      },
      {
        "name": "minRows",
        "type": "number",
        "value": "3"
      },
      {
        "name": "maxRows",
        "type": "number",
        "value": "3"
      },
      {
        "name": "maxLength",
        "type": "variable",
        "value": "complexValueTypeCharLimit"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst newValue = e.value;\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (value !== newValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange(newValue);\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleValueUpdate(index, customAttributeValue, errorMsgs, newValue, valueType);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetIsDirty(true);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "onBlur",
        "type": "function",
        "value": "() => {\n\t\t\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(value.trim());\n\t\t\t\t\t\t\t\t\t\t\t\thandleValueUpdate(index, customAttributeValue, errorMsgs, value.trim(), valueType);\n\t\t\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`${caKey}-value-input`"
      },
      {
        "name": "resizable",
        "type": "expression",
        "value": "\"vertical\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/sidePanel/EntityAndVersionEditor.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || \"\""
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "onKeyDown",
        "type": "variable",
        "value": "blockEnterKey"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\tsetIsDirty(true);\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`${entityType}[name]`"
      },
      {
        "name": "autoFocus",
        "type": "expression",
        "value": "!isDuplicateVersion"
      },
      {
        "name": "maxLength",
        "type": "expression",
        "value": "nameMaxLength + 1"
      },
      {
        "name": "minRows",
        "type": "number",
        "value": "1"
      },
      {
        "name": "maxRows",
        "type": "number",
        "value": "3"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/requests/RevokeEventAccessDialog.tsx",
    "props": [
      {
        "name": "width",
        "type": "string",
        "value": "550px"
      },
      {
        "name": "name",
        "type": "string",
        "value": "declineReason"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "declineReason"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleReasonChange"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "\"Reason for Revocation\""
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!declineReasonError"
      },
      {
        "name": "helperText",
        "type": "variable",
        "value": "declineReasonError"
      },
      {
        "name": "maxLength",
        "type": "variable",
        "value": "MAX_REASON_LENGTH"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "declineReason"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/requests/RequestReviewDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "declineReason"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "declineReason"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleReasonChange"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "\"Reason for Decline\""
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!declineReasonError"
      },
      {
        "name": "helperText",
        "type": "variable",
        "value": "declineReasonError"
      },
      {
        "name": "maxLength",
        "type": "variable",
        "value": "MAX_REASON_LENGTH"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "reviewDecision !== ReviewDecision.declined"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "declineReason"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/RequestAccordionList.tsx",
    "props": [
      {
        "name": "aria-label",
        "type": "string",
        "value": "Comment"
      },
      {
        "name": "width",
        "type": "string",
        "value": "100%"
      },
      {
        "name": "name",
        "type": "string",
        "value": "comment"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "item?.comments"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => handleOnCommentChange(e, item)"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "\"Comment\""
      },
      {
        "name": "maxLength",
        "type": "number",
        "value": "400"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/aiWizard/components/shared.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "description ?? \"emptyDescription\""
      },
      {
        "name": "label",
        "type": "expression",
        "value": "label ?? \"Description\""
      },
      {
        "name": "value",
        "type": "variable",
        "value": "description"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\tsetDescription(e.value ?? \"\");\n\t\t\t}"
      },
      {
        "name": "onBlur",
        "type": "function",
        "value": "() => {\n\t\t\t\tsetDescription(description.trim());\n\t\t\t}"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "\"description\""
      },
      {
        "name": "maxLength",
        "type": "number",
        "value": "10000"
      },
      {
        "name": "placeholder",
        "type": "expression",
        "value": "placeholder ?? \"\""
      },
      {
        "name": "resizable",
        "type": "variable",
        "value": "resizable"
      }
    ]
  }
]