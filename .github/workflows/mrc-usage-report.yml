name: MRC Usage Report Generation

on:
  schedule:
    - cron: "0 8 * * *" # Daily at 8 AM UTC
  workflow_dispatch: # Manual trigger
  push:
    branches:
      - iphadte/DATAGO-103052 # Trigger on pushes to the main branch

jobs:
  generate-and-publish-report:
    runs-on: ubuntu-latest
    permissions:
      contents: write # For checking out repositories
      pages: write # For publishing to GitHub Pages
      id-token: write # For OIDC authentication with GitHub Pages

    steps:
      - name: Checkout maas-react-components (current repo)
        uses: actions/checkout@v4
        with:
          path: maas-react-components-repo

      - name: Print directory structure (maas-react-components)
        run: |
          echo "==== DIRECTORY STRUCTURE INFORMATION ===="
          echo "Current working directory: $(pwd)"
          echo "maas-react-components-repo location: $(pwd)/maas-react-components-repo"
          ls -la maas-react-components-repo

      - name: Checkout maas-ui
        uses: actions/checkout@v4
        with:
          repository: SolaceDev/maas-ui
          ref: sthomas/mrc-usage-report
          path: maas-ui-repo
          token: ${{ secrets.PACKAGES_ADMIN_TOKEN }}

      - name: Print directory structure (maas-ui)
        run: |
          echo "==== MAAS-UI DIRECTORY STRUCTURE ===="
          echo "maas-ui-repo location: $(pwd)/maas-ui-repo"
          ls -la maas-ui-repo
          echo "maas-ui-repo/tools location: $(pwd)/maas-ui-repo/tools"
          ls -la maas-ui-repo/tools || echo "tools directory not found"
          echo "maas-ui-repo/tools/mrc-usage-report location: $(pwd)/maas-ui-repo/tools/mrc-usage-report"
          ls -la maas-ui-repo/tools/mrc-usage-report || echo "mrc-usage-report directory not found"

      - name: Checkout maas-ops-ui
        uses: actions/checkout@v4
        with:
          repository: SolaceDev/maas-ops-ui
          ref: iphadte/DATAGO-103044
          path: maas-ops-ui-repo
          token: ${{ secrets.PACKAGES_ADMIN_TOKEN }}

      - name: Print directory structure (maas-ops-ui)
        run: |
          echo "==== MAAS-OPS-UI DIRECTORY STRUCTURE ===="
          echo "maas-ops-ui-repo location: $(pwd)/maas-ops-ui-repo"
          ls -la maas-ops-ui-repo
          echo "maas-ops-ui-repo/tools location: $(pwd)/maas-ops-ui-repo/tools"
          ls -la maas-ops-ui-repo/tools || echo "tools directory not found"
          echo "maas-ops-ui-repo/tools/mrc-usage-report location: $(pwd)/maas-ops-ui-repo/tools/mrc-usage-report"
          ls -la maas-ops-ui-repo/tools/mrc-usage-report || echo "mrc-usage-report directory not found"
          echo "maas-ops-ui-repo/tools/mrc-report-merger location: $(pwd)/maas-ops-ui-repo/tools/mrc-report-merger"
          ls -la maas-ops-ui-repo/tools/mrc-report-merger || echo "mrc-report-merger directory not found"
          echo "maas-ops-ui-repo/tools/json-splitter location: $(pwd)/maas-ops-ui-repo/tools/json-splitter"
          ls -la maas-ops-ui-repo/tools/json-splitter || echo "json-splitter directory not found"

      - name: Checkout broker manager
        uses: actions/checkout@v4
        with:
          repository: SolaceDev/broker-manager
          ref: mrc-usage-report
          path: broker-manager-repo
          token: ${{ secrets.PACKAGES_ADMIN_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Step 1. Generate maas-ui report
        run: |
          echo "==== STEP 1: GENERATE MAAS-UI REPORT ===="
          echo "Current working directory: $(pwd)"
          ls -la
          echo "Checking for package.json:"
          cat package.json || echo "package.json not found"
          echo "Creating reports directory if it doesn't exist..."
          mkdir -p reports
          echo "Installing dependencies..."
          npm install
          npm run build


          echo "Generating JSON report..."
          npm start -- -b ../../../maas-ui-repo -r ../maas-react-components-repo -f json

          echo "Generating HTML report..."
          npm start -- -b ../../../maas-ui-repo -r ../maas-react-components-repo -f html

        working-directory: maas-react-components-repo/tools/mrc-usage-report-maas-ui

      - name: Step 2. Generate maas-ops-ui report
        run: |
          echo "==== STEP 2: GENERATE MAAS-OPS-UI REPORTS ===="
          echo "Current working directory: $(pwd)"
          pwd
          ls
          echo "Checking for package.json:"
          cat package.json || echo "package.json not found"
          echo "Creating reports directory if it doesn't exist..."
          mkdir -p reports
          echo "Installing dependencies..."
          npm install @types/babel__traverse
          npm run build
          echo "Checking for dist directory after npm install:"
          ls -la dist || echo "dist directory not found after npm install"

          echo "Generating JSON report..."
          npm start -- -b ../../../maas-ops-ui-repo -r ../maas-react-components-repo -f json

          echo "Generating HTML report..."
          npm start -- -b ../../../maas-ops-ui-repo -r ../maas-react-components-repo -f html

        working-directory: maas-react-components-repo/tools/mrc-usage-report-maas-ops-ui

      - name: Step 3. Generate broker report
        run: |
          echo "==== STEP 3: GENERATE BROKER REPORT ===="
          echo "Current working directory: $(pwd)"
          mkdir -p reports
          npm install
          npm run build

          echo "Generating JSON report..."
          npm start -- -b ../../../broker-manager-repo -r ../maas-react-components-repo -f json

          echo "Generating HTML report..."
          npm start -- -b ../../../broker-manager-repo -r ../maas-react-components-repo -f html

        working-directory: maas-react-components-repo/tools/mrc-usage-report-broker-manager

      - name: Step 4. Merge reports
        run: |
          echo "==== STEP 4: MERGE REPORTS ===="
          echo "Current working directory: $(pwd)"
          ls -la

          echo "Changing permissions for report files..."
          chmod -R 777 ../../../maas-react-components-repo/tools/mrc-usage-report-maas-ui/reports/
          chmod -R 777 ../../../maas-react-components-repo/tools/mrc-usage-report-maas-ops-ui/reports/
          chmod -R 777 ../../../maas-react-components-repo/tools/mrc-usage-report-broker-manager/reports/


          echo "Checking for input files:"
          REPORTS_TO_MERGE=""
          MAAS_OPS_UI_REPORT_PATH="../../../maas-react-components-repo/tools/mrc-usage-report-maas-ops-ui/reports/mrc-maas-ops-ui-usage-report.json"
          MAAS_UI_REPORT_PATH="../../../maas-react-components-repo/tools/mrc-usage-report-maas-ui/reports/mrc-maas-ui-usage-report.json"
          BROKER_MANAGER_REPORT_PATH="../../../maas-react-components-repo/tools/mrc-usage-report-broker-manager/reports/mrc-broker-manager-usage-report.json"

          if [ -f "$MAAS_OPS_UI_REPORT_PATH" ]; then
            REPORTS_TO_MERGE="$REPORTS_TO_MERGE $MAAS_OPS_UI_REPORT_PATH"
          else
            echo "$MAAS_OPS_UI_REPORT_PATH not found."
          fi

          if [ -f "$MAAS_UI_REPORT_PATH" ]; then
            REPORTS_TO_MERGE="$REPORTS_TO_MERGE $MAAS_UI_REPORT_PATH"
          else
            echo "$MAAS_UI_REPORT_PATH not found."
          fi

          if [ -f "$BROKER_MANAGER_REPORT_PATH" ]; then
            REPORTS_TO_MERGE="$REPORTS_TO_MERGE $BROKER_MANAGER_REPORT_PATH"
          else
            echo "$BROKER_MANAGER_REPORT_PATH not found."
          fi

          echo "Installing dependencies..."
          npm install

          if [ -n "$REPORTS_TO_MERGE" ]; then
            mkdir -p merged-reports
            echo "Running npm start with parameters: $REPORTS_TO_MERGE"
            npm start -- --output-json merged-reports/merged-mrc-usage-report.json --output-html merged-reports/merged-mrc-usage-report.html $REPORTS_TO_MERGE
            chmod 777 merged-reports/merged-mrc-usage-report.json
            chmod 777 merged-reports/merged-mrc-usage-report.html
          else
            echo "No reports found to merge."
          fi

        working-directory: maas-react-components-repo/tools/mrc-usage-report-merger

      - name: Step 5. Split merged JSON
        run: |
          echo "==== STEP 5: SPLIT MERGED JSON ===="
          echo "Current working directory: $(pwd)"
          ls -la
          echo "Checking for input file:"
          ls -la ../../../maas-react-components-repo/tools/mrc-usage-report-merger/merged-mrc-usage-report.json || echo "merged-report.json not found"
          echo "Creating reports directory if it doesn't exist..."
          echo "Installing dependencies..."
          npm install
          echo "Running npm start with parameters..."
          npm start -- -i ../../../maas-react-components-repo/tools/mrc-usage-report-merger/merged-mrc-usage-report.json -o ../../../maas-react-components-repo/mrc-usage-report-data

          echo "Listing generated files:"
          find . -type f -name "*.json" | sort

          echo "Contents of first split file (if any):"
          find . -type f -name "*.json" | sort | head -n 1 | xargs cat || echo "No split files found"

        working-directory: maas-react-components-repo/tools/mrc-usage-report-json-splitter

      - name: Step 6. Upload merged reports
        uses: actions/upload-artifact@v4
        with:
          name: merged-reports
          path: |
            maas-react-components-repo/tools/mrc-usage-report-merger/merged-reports/
            maas-react-components-repo/mrc-usage-report-data

      - name: Step 7. Commit and push report data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e

          # Report data is already in the correct location
          cd maas-react-components-repo

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          BRANCH_NAME="feature/mrc-usage-report-data"
          git checkout -b $BRANCH_NAME

          git add mrc-usage-report-data/

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            COMMIT_MESSAGE="feat: add mrc usage report data for $(date +'%Y-%m-%d %H:%M')"
            git commit --no-verify -m "$COMMIT_MESSAGE"
            git push --set-upstream origin $BRANCH_NAME
          fi
