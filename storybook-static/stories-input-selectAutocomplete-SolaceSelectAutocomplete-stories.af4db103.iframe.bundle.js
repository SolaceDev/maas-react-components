(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[6263],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{aD:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/stories/input/selectAutocomplete/SolaceSelectAutocomplete.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomHeight:()=>CustomHeight,DefaultAutocomplete:()=>DefaultAutocomplete,Disabled:()=>Disabled,HelperText:()=>HelperText,IconAndTextOnRight:()=>IconAndTextOnRight,IconMenuItemOnLeft:()=>IconMenuItemOnLeft,IconMenuItemShowingSecondaryActionIconInInput:()=>IconMenuItemShowingSecondaryActionIconInInput,IconMenuItemShowingSupplementalTextInInput:()=>IconMenuItemShowingSupplementalTextInInput,IconOnRight:()=>IconOnRight,InlineLabelFormat:()=>InlineLabelFormat,MultiSelectionDisabled:()=>MultiSelectionDisabled,MultiSelectionReadOnly:()=>MultiSelectionReadOnly,MultiSelectionWithCreateNewAndClearSearchWhenSelectNew:()=>MultiSelectionWithCreateNewAndClearSearchWhenSelectNew,MultiSelectionWithCreateNewAndNotClearSearchWhenSelectNew:()=>MultiSelectionWithCreateNewAndNotClearSearchWhenSelectNew,MultiSelectionWithCustomTagRenderer:()=>MultiSelectionWithCustomTagRenderer,MultiSelectionWithDisabledItems:()=>MultiSelectionWithDisabledItems,MultiSelectionWithErrors:()=>MultiSelectionWithErrors,MultiSelectionWithHeading:()=>MultiSelectionWithHeading,MultiSelectionWithHeadingAndDisabledItems:()=>MultiSelectionWithHeadingAndDisabledItems,MultiSelectionWithHeadingWithCustomHeight:()=>MultiSelectionWithHeadingWithCustomHeight,MultiSelectionWithHeadingWithDividers:()=>MultiSelectionWithHeadingWithDividers,MultiSelectionWithHeadingWithDividersAndDisabledItems:()=>MultiSelectionWithHeadingWithDividersAndDisabledItems,MultiSelectionWithInitialValueCreateNewAndClearSearchWhenSelectNew:()=>MultiSelectionWithInitialValueCreateNewAndClearSearchWhenSelectNew,MultiSelectionWithInitialValueCreateNewAndValidateInputAndClearSearchWhenSelectNew:()=>MultiSelectionWithInitialValueCreateNewAndValidateInputAndClearSearchWhenSelectNew,MultiSelectionWithResponsiveTagRenderer:()=>MultiSelectionWithResponsiveTagRenderer,MultiSelectionWithResponsiveTagRendererDisabled:()=>MultiSelectionWithResponsiveTagRendererDisabled,MultiSelectionWithResponsiveTagRendererReadOnly:()=>MultiSelectionWithResponsiveTagRendererReadOnly,MultipleSelection:()=>MultipleSelection,MultipleSelectionWithClearSearchOnSelect:()=>MultipleSelectionWithClearSearchOnSelect,MultipleSelectionWithCloseOnSelect:()=>MultipleSelectionWithCloseOnSelect,MultipleSelectionWithLimitedTag:()=>MultipleSelectionWithLimitedTag,MultipleSelectionWithLongLabel:()=>MultipleSelectionWithLongLabel,MultipleSelectionWithLongLabelAndNullMaxTagWidth:()=>MultipleSelectionWithLongLabelAndNullMaxTagWidth,OpenDropDownOnButtonClick:()=>OpenDropDownOnButtonClick,ReadOnly:()=>ReadOnly,Required:()=>Required,SecondaryActionSolaceMenu:()=>SecondaryActionSolaceMenu,SecondaryActionSolaceMenuWithSubtext:()=>SecondaryActionSolaceMenuWithSubtext,ShowIconMenuItemOnLeftShowingLeftIconAndSupplementaryTextInInput:()=>ShowIconMenuItemOnLeftShowingLeftIconAndSupplementaryTextInInput,ShowIconMenuItemOnLeftShowingLeftIconInInput:()=>ShowIconMenuItemOnLeftShowingLeftIconInInput,StackedLabelFormat:()=>StackedLabelFormat,StackedLabelFormatWithCustomWidth:()=>StackedLabelFormatWithCustomWidth,WithDisabledItems:()=>WithDisabledItems,WithDividers:()=>WithDividers,WithEllipsisAtStart:()=>WithEllipsisAtStart,WithErrors:()=>WithErrors,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_test__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../dist/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocomplete.displayName="SolaceSelectAutocomplete",_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocompleteItem.displayName="SolaceSelectAutocompleteItem",_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceChip.displayName="SolaceChip",_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton.displayName="SolaceButton",_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocompleteResponsiveTags.displayName="SolaceSelectAutocompleteResponsiveTags";const __WEBPACK_DEFAULT_EXPORT__={title:"Input/Dropdown/Autocomplete",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocomplete,parameters:{controls:{sort:"alpha"},chromatic:{delay:500},docs:{description:{component:"Code component name: SolaceSelectAutocomplete"}}},argTypes:{label:{control:{type:"text"},description:"The label text displayed above or inline with the autocomplete field. Use this to clearly describe what the user is selecting. Labels should be concise and descriptive.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},helperText:{control:{type:"text"},description:"Additional text displayed below the autocomplete field to provide guidance or error messages. Use this to give users context about available options or validation requirements.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},placeholder:{control:{type:"text"},description:"Placeholder text displayed when no value is selected. Use this to provide guidance about what the user should search for or select.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},width:{control:{type:"text"},description:"The width of the autocomplete field. Can be a number (pixels), percentage, or CSS width value. Use this to control the field width within your layout constraints.",table:{type:{summary:"string | number"},defaultValue:{summary:"undefined"}}},hasErrors:{control:{type:"boolean"},description:"If true, displays the autocomplete field in an error state with red styling. Use this to indicate validation failures or selection errors. Often paired with error text in helperText.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},hasWarnings:{control:{type:"boolean"},description:"If true, displays the autocomplete in a warning state with amber styling. Use this to indicate potential issues or cautionary information about the autocomplete options.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},inlineLabel:{control:{type:"boolean"},description:"If true, displays the label inline with the autocomplete field rather than above it. Use this for compact layouts or when you need to save vertical space.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},required:{control:{type:"boolean"},description:"If true, marks the field as required and displays an asterisk (*) next to the label. Use this to indicate mandatory fields in forms and ensure proper validation.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},disabled:{control:{type:"boolean"},description:"If true, disables the autocomplete field preventing user interaction. Use this when the field is not applicable based on current form state or user permissions.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},disableCloseOnSelect:{control:{type:"boolean"},description:"If true, keeps the dropdown open after selecting an option. Use this for multiple selection scenarios where users need to select multiple items in succession.",table:{type:{summary:"boolean"},defaultValue:{summary:"true"}}},readOnly:{control:{type:"boolean"},description:"If true, makes the autocomplete field read-only. Users can see the selected value but cannot change it. Use this for displaying computed values or information that shouldn't be modified.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},multiple:{control:{type:"boolean"},description:"If true, enables multiple selection mode. Users can select multiple options from the dropdown. The value will be an array of selected values.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},limitTags:{control:{type:"number"},description:"Maximum number of tags to display in multiple selection mode. Additional selections will be shown as a count. Use this to prevent the field from becoming too cluttered.",table:{type:{summary:"number"},defaultValue:{summary:"undefined"}}},maxHeight:{control:{type:"text"},description:"Maximum height of the dropdown menu. Use this to limit the dropdown height and enable scrolling when there are many options.",table:{type:{summary:"string | number"},defaultValue:{summary:"undefined"}}},fullWidth:{control:{type:"boolean"},description:"If true, the autocomplete field will take up the full width of its container. Use this for responsive layouts or when you want the field to fill available space.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},minWidth:{control:{type:"text"},description:"Minimum width of the autocomplete field. Use this to ensure the field maintains a minimum width even in responsive layouts.",table:{type:{summary:"string | number"},defaultValue:{summary:"undefined"}}},clearSearchOnSelect:{control:{type:"boolean"},description:"If true, clears the search input after selecting an option. Use this to improve user experience in multiple selection scenarios.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},tagMaxWidth:{control:{type:"text"},description:"Maximum width for tags in multiple selection mode. Tags longer than this width will be truncated with ellipsis. Use this to maintain consistent layout.",table:{type:{summary:"string | number"},defaultValue:{summary:"undefined"}}},freeSolo:{control:{type:"boolean"},description:"If true, allows users to enter custom values not present in the options list. Use this when you want to allow both selection from predefined options and custom input.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},openOnFocus:{control:{type:"boolean"},description:"If true, opens the dropdown when the field receives focus. Use this to improve discoverability of available options.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},showGroupDivider:{control:{type:"boolean"},description:"If true, shows dividers between option groups. Use this with grouped options to visually separate different categories.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},showSupplementalTextOrSecondaryAction:{control:{type:"boolean"},description:"If true, displays supplemental text or secondary actions in the selected value display. Use this to show additional context about the selected option.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},showLeftIcon:{control:{type:"boolean"},description:"If true, displays icons on the left side of the selected value. Use this to provide visual context about the selected option type.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},value:{description:"The current selected value(s) of the autocomplete field. Use this for controlled components where you manage the field state externally. Should be paired with an onChange handler.",table:{type:{summary:"SolaceSelectAutocompleteItemProps | Array<SolaceSelectAutocompleteItemProps>"},defaultValue:{summary:"undefined"}}},defaultValue:{description:"The default selected value(s) for uncontrolled components. Use this when you want to set an initial value but don't need to control the selection state.",table:{type:{summary:"SolaceSelectAutocompleteItemProps | Array<SolaceSelectAutocompleteItemProps>"},defaultValue:{summary:"undefined"}}},options:{description:"Array of options available for selection. Each option should conform to the SolaceSelectAutocompleteItemProps interface.",table:{type:{summary:"Array<SolaceSelectAutocompleteItemProps>"},defaultValue:{summary:"[]"}}},id:{control:{type:"text"},description:"Unique identifier for the autocomplete field. Used to associate the label with the input for accessibility and to reference the field programmatically.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},name:{control:{type:"text"},description:"The name attribute for the autocomplete field, used for form submission and accessibility. Essential for proper form handling and assistive technology support.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},title:{control:{type:"text"},description:"The title attribute for the autocomplete field, displayed as a tooltip on hover. Use this for additional context or instructions that don't fit in the label or helper text.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},dataQa:{control:{type:"text"},description:"Data attribute for QA testing. Use this to identify the autocomplete field during automated testing.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},dataTags:{control:{type:"text"},description:"Data attribute for additional tagging. Use this for analytics, tracking, or additional metadata.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},onChange:{description:"Callback function fired when the selection changes. Receives an event object with the new value. Essential for controlled components and form state management."},onBlur:{description:"Callback function fired when the autocomplete field loses focus. Use this for validation, formatting, or other actions that should occur when the user finishes selecting."},onFocus:{description:"Callback function fired when the autocomplete field gains focus. Use this for tracking user interaction, showing additional UI elements, or preparing the field for selection."},onOpen:{description:"Callback function fired when the dropdown opens. Use this for controlled dropdown state or to trigger actions when the dropdown becomes visible."},onClose:{description:"Callback function fired when the dropdown closes. Use this for controlled dropdown state or to trigger actions when the dropdown becomes hidden."},fetchOptionsCallback:{description:"Callback function to fetch options asynchronously based on user input. Use this for remote data fetching or filtering large datasets."},itemMappingCallback:{description:"Function to transform option data before rendering. Use this to adapt your data structure to the expected format."},optionsLabelCallback:{description:"Function to extract the display label from option objects. Use this to customize how option labels are determined."},isOptionEqualToValueCallback:{description:"Function to determine if an option equals the current value. Use this for custom equality comparison logic."},getOptionDisabledCallback:{description:"Function to determine if an option should be disabled. Use this to conditionally disable options based on business logic."},getShowOptionDividerCallback:{description:"Function to determine if a divider should be shown after an option. Use this to add visual separation between certain options."},getOptionValidationErrorCallback:{description:"Function to provide validation error messages for specific options. Use this to show context-specific validation feedback."},validateInputCallback:{description:"Function to validate user input in real-time. Use this to provide immediate feedback on input validity."},groupByCallback:{description:"Function to group options by category. Use this to organize options into logical groups for better user experience."},renderTags:{description:"Custom function to render selected tags in multiple selection mode. Use this for complete control over tag appearance and behavior."},getLimitTagsText:{description:"Function to customize the text shown when tag limit is exceeded. Use this to provide localized or custom overflow text."},onCloseCallback:{description:"Additional callback fired when the dropdown closes. Use this for cleanup actions or additional state management."},itemComponent:{description:"React component used to render individual options. Use this to customize the appearance of dropdown options."},startAdornment:{control:{type:"object"},description:"Element to display at the start of the input field. Use this for icons, labels, or other visual elements that provide context.",table:{type:{summary:"React.ReactNode"},defaultValue:{summary:"undefined"}}},endAdornment:{control:{type:"object"},description:"Element to display at the end of the input field. Use this for action buttons, status indicators, or additional interactive elements.",table:{type:{summary:"React.ReactNode"},defaultValue:{summary:"undefined"}}},inputRef:{description:"Ref to access the underlying input element. Use this for programmatic focus control or direct DOM manipulation."}},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{id:"snapshot",style:{width:"auto",height:"500px",padding:"10px 35px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))]},SUBTEXT="Subtext subtext",SELECT_OPTIONS=[{name:"Option #1",value:"option1",subText:"Some sub text for option 1",supplementalText:"supplemental text option 1"},{name:"Option #2",value:"option2",subText:"Some sub text for option 2, should be taking up the whole 2nd row"},{name:"Option #3",value:"option3"},{name:"Option #4",value:"option4",supplementalText:"supplemental text option 4"}],SELECT_OPTIONS_FOR_SECONDARY_ACTION=[{name:"Option 1",value:"option1",secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTooltip,{title:"Help"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.HelpOutlineOutlinedIcon,null)),onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),subText:SUBTEXT},{name:"Option 2",value:"option2",supplementalText:"Supplemental text",onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback")},{name:"Option 3",value:"option3",secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTooltip,{title:"Help"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.HelpOutlineOutlinedIcon,null)),onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),subText:SUBTEXT},{name:"Option 4",value:"option4",supplementalText:"Supplemental text",onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),subText:SUBTEXT}];function getLongLabel(option){return option.name+" with Long Name to Check Responsiveness Works Properly"}const DefaultSelectionTemplate=_ref=>{let{multiple=!1,readOnly=!1,required=!1,disabled=!1,label,inlineLabel=!1,width,placeholder,helperText,hasErrors,value,options=SELECT_OPTIONS,limitTags,disableCloseOnSelect,clearSearchOnSelect,maxHeight,tagMaxWidth,minWidth,getOptionValidationErrorCallback,showSupplementalTextOrSecondaryAction,showLeftIcon,textEllipsisPosition,disabledItems=!1,withDividers=!1,longLabel=!1}=_ref;const[matchingValues,setMatchingValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),dropdownOptions=options,handleFetchOptionsCallback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((searchTerm=>{(function fetchOptions(searchTerm,dataSet,delay,withDivider){const processedData=dataSet.map((option=>!withDivider||"option1"!==option.value&&"option2"!==option.value?option:{...option,divider:!0}));return new Promise((resolve=>{setTimeout((()=>{if(searchTerm){const filteredData=processedData.filter((option=>option.name.toLowerCase().includes(searchTerm.toLowerCase())));resolve(filteredData)}else resolve(processedData)}),delay)}))})(searchTerm,dropdownOptions.map((option=>({...option,name:!longLabel||"option2"!==option.value&&"option4"!==option.value?option.name:getLongLabel(option)}))),300,withDividers).then((data=>{setMatchingValues(data)}))}),[withDividers,longLabel,dropdownOptions]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocomplete,{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),multiple,title:"Demo Select",id:"demoSelectId",name:"demoSelect",label,options:matchingValues,itemComponent:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocompleteItem,itemMappingCallback:option=>option,optionsLabelCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.getSolaceSelectAutocompleteOptionLabel,isOptionEqualToValueCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.isSolaceSelectAutocompleteOptionEqual,fetchOptionsCallback:handleFetchOptionsCallback,getOptionDisabledCallback:disabledItems?option=>option.value===SELECT_OPTIONS[2].value||option.value===SELECT_OPTIONS[3].value:void 0,getShowOptionDividerCallback:withDividers?_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.getShowSolaceSelectAutocompleteOptionDivider:void 0,getOptionValidationErrorCallback,width,placeholder,readOnly,disabled,required,inlineLabel,onCloseCallback:()=>setMatchingValues([]),value,helperText,hasErrors,limitTags,getLimitTagsText:limit=>`+${limit} more`,disableCloseOnSelect,clearSearchOnSelect,maxHeight,tagMaxWidth,minWidth,showSupplementalTextOrSecondaryAction,showLeftIcon,textEllipsisPosition}))},DefaultAutocomplete={render:DefaultSelectionTemplate,args:{value:SELECT_OPTIONS[0],options:SELECT_OPTIONS},play:async _ref2=>{let{canvasElement}=_ref2;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},WithDividers={render:DefaultSelectionTemplate,args:{value:SELECT_OPTIONS[0],withDividers:!0,options:SELECT_OPTIONS},play:async _ref3=>{let{canvasElement}=_ref3;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},StackedLabelFormat={render:DefaultSelectionTemplate,args:{label:"Some Label"}},StackedLabelFormatWithCustomWidth={render:DefaultSelectionTemplate,args:{label:"Some Label",width:"50%",longLabel:!0},play:async _ref4=>{let{canvasElement}=_ref4;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},InlineLabelFormat={render:DefaultSelectionTemplate,args:{label:"Some Label",inlineLabel:!0}},HelperText={render:DefaultSelectionTemplate,args:{helperText:"Some helper text"}},WithErrors={render:DefaultSelectionTemplate,args:{helperText:"The text you entered was invalid",hasErrors:!0}},Required={render:DefaultSelectionTemplate,args:{label:"Some Label",required:!0}},Disabled={render:DefaultSelectionTemplate,args:{label:"Some Label",disabled:!0,value:SELECT_OPTIONS[1]}},ReadOnly={render:DefaultSelectionTemplate,args:{label:"Some Label",readOnly:!0,value:SELECT_OPTIONS[1]}},WithDisabledItems={render:DefaultSelectionTemplate,args:{disabledItems:!0},play:async _ref5=>{let{canvasElement}=_ref5;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},CustomHeight={render:DefaultSelectionTemplate,args:{label:"Some Label",maxHeight:"150px"},play:async _ref6=>{let{canvasElement}=_ref6;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},MultipleSelection={render:DefaultSelectionTemplate,args:{label:"Some Label",multiple:!0,value:[SELECT_OPTIONS[0],SELECT_OPTIONS[1],SELECT_OPTIONS[2]]}},MultipleSelectionWithLimitedTag={render:DefaultSelectionTemplate,args:{label:"Some Label",multiple:!0,value:[SELECT_OPTIONS[0],SELECT_OPTIONS[1],SELECT_OPTIONS[2]],limitTags:2}},MultipleSelectionWithLongLabel={render:DefaultSelectionTemplate,args:{label:"Some Label",multiple:!0,value:[],width:"50%",longLabel:!0},play:async _ref7=>{let{canvasElement}=_ref7;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},MultipleSelectionWithLongLabelAndNullMaxTagWidth={render:DefaultSelectionTemplate,args:{label:"Some Label",multiple:!0,value:[],width:"50%",longLabel:!0,tagMaxWidth:null},play:async _ref8=>{let{canvasElement}=_ref8;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},MultipleSelectionWithCloseOnSelect={render:DefaultSelectionTemplate,args:{label:"Some Label",multiple:!0,value:[],disableCloseOnSelect:!1}},MultipleSelectionWithClearSearchOnSelect={render:DefaultSelectionTemplate,args:{label:"Some Label",multiple:!0,value:[],clearSearchOnSelect:!0}},MultiSelectionDisabled={render:DefaultSelectionTemplate,args:{label:"Some Label",multiple:!0,disabled:!0,value:[SELECT_OPTIONS[0],SELECT_OPTIONS[2]]}},MultiSelectionReadOnly={render:DefaultSelectionTemplate,args:{label:"Some Label",multiple:!0,readOnly:!0,longLabel:!0,value:[SELECT_OPTIONS[0],{...SELECT_OPTIONS[3],name:getLongLabel(SELECT_OPTIONS[3])}]}},MultiSelectionWithErrors={render:DefaultSelectionTemplate,args:{label:"Some Label",multiple:!0,helperText:"More than one values have errors. Hover on the values to see errors.",hasErrors:!0,longLabel:!0,getOptionValidationErrorCallback:option=>"option1"===option.value?"Invalid characters. Enter only alphanumeric characters, dashes and underscores.":"option4"===option.value?"Exceeds limit. Enter a value under 100 characters":void 0,value:[SELECT_OPTIONS[0],{...SELECT_OPTIONS[3],name:getLongLabel(SELECT_OPTIONS[3])},SELECT_OPTIONS[2]]}},SAMPLE_EVENT_MESHES=[{name:"MEM #1",value:"mem1",supplementalText:"Already added"},{name:"MEM #2",value:"mem2",supplementalText:""},{name:"MEM #3",value:"mem3",supplementalText:""},{name:"MEM #4",value:"mem4",supplementalText:"Already added"},{name:"MEM With Long Name #1",value:"mem5",supplementalText:""},{name:"MEM With Long Name #2",value:"mem6",supplementalText:""}],MultiSelectionWithDisabledItems=_ref9=>{let{multiple=!0,readOnly=!1,required=!0,disabled=!1,label="Modeled Event Mesh",inlineLabel=!1,width,placeholder,helperText,hasErrors,limitTags,disableCloseOnSelect,clearSearchOnSelect,maxHeight,tagMaxWidth,minWidth,getOptionValidationErrorCallback}=_ref9;const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([SAMPLE_EVENT_MESHES[1],SAMPLE_EVENT_MESHES[2]]),[matchingValues,setMatchingValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),handleFetchOptionsCallback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((searchTerm=>{setMatchingValues(searchTerm?SAMPLE_EVENT_MESHES.filter((option=>option.name.toLowerCase().includes(searchTerm.toLowerCase()))):SAMPLE_EVENT_MESHES)}),[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocomplete,{name:"modeledEventMesh",label,required,clearSearchOnSelect,disabled,hasErrors,helperText,inlineLabel,limitTags,multiple,readOnly,width,placeholder,disableCloseOnSelect,maxHeight,minWidth,tagMaxWidth,getOptionValidationErrorCallback,value:values,options:matchingValues,itemComponent:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocompleteItem,itemMappingCallback:option=>option,optionsLabelCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.getSolaceSelectAutocompleteOptionLabel,isOptionEqualToValueCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.isSolaceSelectAutocompleteOptionEqual,onChange:evt=>{setValues(evt.value)},fetchOptionsCallback:handleFetchOptionsCallback,getOptionDisabledCallback:option=>"Already added"===option.supplementalText}))};MultiSelectionWithDisabledItems.play=async _ref10=>{let{canvasElement}=_ref10;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))};const INPUT_VALUE_REGEX=/^[A-Za-z0-9-_./@()'–# ]*$/,MultiSelectionWithCreateNewTemplate=_ref11=>{let{multiple=!0,readOnly=!1,required=!1,disabled=!1,name="customAttributeValues",label="Custom Attribute Values",inlineLabel=!1,width,placeholder,helperText,hasErrors,limitTags,disableCloseOnSelect,clearSearchOnSelect=!1,maxHeight="400px",minWidth,tagMaxWidth,getOptionValidationErrorCallback,value=[],options=[],validateInput=!1}=_ref11;const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(Array.isArray(value)?value:[value]),[matchingValues,setMatchingValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(options),handleFetchOptionsCallback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((searchTerm=>{if(searchTerm){const matches=options.filter((option=>option.name.toLowerCase().includes(searchTerm.toLowerCase())));if(matches.find((option=>option.name===searchTerm)))setMatchingValues(matches);else{const toCreate={name:searchTerm,value:searchTerm,subText:"Create new value",isNew:!0};setMatchingValues([...matches,toCreate])}}else setMatchingValues([...options])}),[options]),validateInputValue=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((value=>{let errorMsg="";return value.length>100?errorMsg="Exceeds limit. Enter a value with no more than 100 characters.":value.match(INPUT_VALUE_REGEX)||(errorMsg="Invalid characters. Enter only alphanumeric characters, spaces and the following characters: . - – _ @ / ( ) #"),errorMsg}),[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocomplete,{name,label,multiple,readOnly,disabled,required,inlineLabel,value:values,options:matchingValues,itemComponent:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocompleteItem,itemMappingCallback:option=>option,optionsLabelCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.getSolaceSelectAutocompleteOptionLabel,isOptionEqualToValueCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.isSolaceSelectAutocompleteOptionEqual,onChange:evt=>{const selectedValues=[],newValues=[];evt.value.forEach((value=>{if(value.isNew){const newValue={...value,subText:void 0,isNew:!1};newValues.push(newValue),selectedValues.push(newValue)}else selectedValues.push(value)})),setValues(selectedValues),newValues.length>0&&(options.push(...newValues),setMatchingValues([...options].sort(((a,b)=>a.name.localeCompare(b.name)))))},fetchOptionsCallback:handleFetchOptionsCallback,clearSearchOnSelect,width,placeholder,limitTags,disableCloseOnSelect,maxHeight,minWidth,tagMaxWidth,getOptionValidationErrorCallback,validateInputCallback:validateInput?validateInputValue:void 0,hasErrors,helperText}))},MultiSelectionWithCreateNewAndClearSearchWhenSelectNew={render:MultiSelectionWithCreateNewTemplate,args:{clearSearchOnSelect:!0,options:[]}},MultiSelectionWithInitialValueCreateNewAndClearSearchWhenSelectNew={render:MultiSelectionWithCreateNewTemplate,args:{value:[SELECT_OPTIONS[0],SELECT_OPTIONS[1]],clearSearchOnSelect:!0,options:SELECT_OPTIONS}},MultiSelectionWithInitialValueCreateNewAndValidateInputAndClearSearchWhenSelectNew={render:MultiSelectionWithCreateNewTemplate,args:{value:[SELECT_OPTIONS[0],SELECT_OPTIONS[1]],clearSearchOnSelect:!0,options:SELECT_OPTIONS,validateInput:!0}},MultiSelectionWithCreateNewAndNotClearSearchWhenSelectNew={render:MultiSelectionWithCreateNewTemplate,args:{clearSearchOnSelect:!1,options:SELECT_OPTIONS}},SELECT_OPTIONS_WITH_CATEGORY_HEADING=[{name:"Option #1",value:"option1",categoryHeading:"Shared"},{name:"Option #2",value:"option2",categoryHeading:"Shared"},{name:"Option #5",value:"option5",categoryHeading:"Shared"},{name:"Option #3",value:"option3",categoryHeading:"Non-Shared"},{name:"Option #4",value:"option4",categoryHeading:"Non-Shared"}],MultiSelectionWithHeadingTemplate=_ref12=>{let{label,disabled,readOnly=!1,value,showGroupDivider=!1,clearSearchOnSelect=!1,hasErrors,disableCloseOnSelect,helperText,inlineLabel,limitTags,maxHeight,minWidth,multiple=!0,placeholder,required,tagMaxWidth,width,disabledItems}=_ref12;const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value??[]),[matchingValues,setMatchingValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),handleFetchOptionsCallback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((searchTerm=>{setMatchingValues(searchTerm?SELECT_OPTIONS_WITH_CATEGORY_HEADING.filter((option=>option.name.toLowerCase().includes(searchTerm.toLowerCase()))):SELECT_OPTIONS_WITH_CATEGORY_HEADING)}),[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocomplete,{name:"demoSelect",label,multiple,value:values,options:matchingValues,itemComponent:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocompleteItem,itemMappingCallback:option=>option,optionsLabelCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.getSolaceSelectAutocompleteOptionLabel,isOptionEqualToValueCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.isSolaceSelectAutocompleteOptionEqual,onChange:evt=>{setValues(evt.value)},fetchOptionsCallback:handleFetchOptionsCallback,getOptionDisabledCallback:disabledItems?option=>"Non-Shared"===option.categoryHeading:void 0,groupByCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.getSolaceSelectAutocompleteGroupBy,showGroupDivider,disabled,readOnly,clearSearchOnSelect,disableCloseOnSelect,hasErrors,helperText,inlineLabel,limitTags,maxHeight,minWidth,placeholder,required,tagMaxWidth,width}))},MultiSelectionWithHeading={render:MultiSelectionWithHeadingTemplate,args:{},play:async _ref13=>{let{canvasElement}=_ref13;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},MultiSelectionWithHeadingWithCustomHeight={render:MultiSelectionWithHeadingTemplate,args:{maxHeight:"205px"},play:async _ref14=>{let{canvasElement}=_ref14;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},MultiSelectionWithHeadingAndDisabledItems={render:MultiSelectionWithHeadingTemplate,args:{disabledItems:!0},play:async _ref15=>{let{canvasElement}=_ref15;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},MultiSelectionWithHeadingWithDividers={render:MultiSelectionWithHeadingTemplate,args:{showGroupDivider:!0},play:async _ref16=>{let{canvasElement}=_ref16;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},MultiSelectionWithHeadingWithDividersAndDisabledItems={render:MultiSelectionWithHeadingTemplate,args:{disabledItems:!0,showGroupDivider:!0},play:async _ref17=>{let{canvasElement}=_ref17;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},SAMPLE_APPLICATION_DOMAINS=[{name:"Domain A",value:"domainA"},{name:"Domain B",value:"domainB"},{name:"Domain C",value:"domainC"},{name:"Domain D",value:"domainD"},{name:"Domain With Long Long Long Long Name #1",value:"domain1"},{name:"Domain With Long Long Long Long Name #2",value:"domain2"}],MultiSelectionWithCustomTagRenderer=_ref18=>{let{label,disabled,readOnly,showGroupDivider=!1,clearSearchOnSelect=!1,hasErrors,disableCloseOnSelect,helperText,inlineLabel,maxHeight,minWidth,options=[],required,tagMaxWidth,width}=_ref18;const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([SAMPLE_APPLICATION_DOMAINS[0],SAMPLE_APPLICATION_DOMAINS[2]]),[matchingValues,setMatchingValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(options),handleFetchOptionsCallback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((searchTerm=>{setMatchingValues(searchTerm?SAMPLE_APPLICATION_DOMAINS.filter((option=>option.name.toLowerCase().includes(searchTerm.toLowerCase()))):SAMPLE_APPLICATION_DOMAINS)}),[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocomplete,{name:"applicationDomain",placeholder:values.length?"":"Application Domain",multiple:!0,value:values,options:matchingValues,itemComponent:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocompleteItem,itemMappingCallback:option=>option,optionsLabelCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.getSolaceSelectAutocompleteOptionLabel,isOptionEqualToValueCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.isSolaceSelectAutocompleteOptionEqual,onChange:evt=>{setValues(evt.value)},fetchOptionsCallback:handleFetchOptionsCallback,label,disabled,readOnly,showGroupDivider,clearSearchOnSelect,hasErrors,disableCloseOnSelect,helperText,inlineLabel,maxHeight,minWidth,required,tagMaxWidth,width,renderTags:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",alignItems:"center",gap:"4px",paddingRight:"8px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"Application Domain: "),react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{style:{display:"inline-block",backgroundColor:"rgba(0, 0, 0, 0.1)",borderRadius:"50%",lineHeight:"0px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{style:{display:"inline-block",paddingBottom:"50%",paddingTop:"50%",marginLeft:"5px",marginRight:"5px",textAlign:"center"}},values.length)))}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{marginBlock:"24px",display:"flex",flexWrap:"wrap",width:null===width?void 0:width}},values.map((value=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{marginRight:"8px",marginBottom:"8px"},key:value.value},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceChip,{clickable:!0,label:`Application Domain: ${value.name}`,maxWidth:null===tagMaxWidth?void 0:tagMaxWidth,onDelete:disabled||readOnly?void 0:()=>{return item=value.value,void setValues((prevValues=>prevValues.filter((value=>value.value!==item))));var item}}))))))},Container=(0,_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.styled)("div")((()=>({".MuiAutocomplete-root .MuiOutlinedInput-root .MuiInputBase-root":{height:"32px",maxHeight:"32px"}}))),MultiSelectionWithResponsiveTagRenderer=_ref19=>{let{label="Application Label",disabled,readOnly,showGroupDivider=!1,clearSearchOnSelect=!1,hasErrors,disableCloseOnSelect,helperText,inlineLabel,maxHeight,minWidth="500px",options=[],required,tagMaxWidth,width,limitTags}=_ref19;const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(SAMPLE_APPLICATION_DOMAINS.slice(1)),[matchingValues,setMatchingValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(options),[selectedTags,setSelectedTags]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),handleDelete=item=>{setValues((prevValues=>prevValues.filter((value=>value.value!==item))))},handleFetchOptionsCallback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((searchTerm=>{setMatchingValues(searchTerm?SAMPLE_APPLICATION_DOMAINS.filter((option=>option.name.toLowerCase().includes(searchTerm.toLowerCase()))):SAMPLE_APPLICATION_DOMAINS)}),[]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const tags=values?.map((selectedItemValue=>({id:selectedItemValue.value,label:selectedItemValue.name})));setSelectedTags(tags)}),[values]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(Container,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocomplete,_extends({name:"applicationDomain",placeholder:values.length?"":"Application Domain",multiple:!0,value:values,options:matchingValues,itemComponent:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocompleteItem,itemMappingCallback:option=>option,optionsLabelCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.getSolaceSelectAutocompleteOptionLabel,isOptionEqualToValueCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.isSolaceSelectAutocompleteOptionEqual,onChange:evt=>{setValues(evt.value)},fetchOptionsCallback:handleFetchOptionsCallback,label,disabled,readOnly,showGroupDivider,clearSearchOnSelect,hasErrors,disableCloseOnSelect,helperText,inlineLabel,maxHeight,minWidth,required,tagMaxWidth,width},"number"==typeof limitTags&&{limitTags},{getLimitTagsText:limit=>`+${limit} more`,renderTags:()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,values&&values.length>0&&react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocompleteResponsiveTags,{containerWidth:500,tags:selectedTags,tagMaxWidth,overflowIndicatorLabel:"Filters",overflowIndicatorLabelSingular:"Filter",onDelete:handleDelete,dataQa:"applicationDomainSelect-tags",disabled}))})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{marginBlock:"24px",display:"flex",flexWrap:"wrap",width:null===width?void 0:width}},values.length>0&&(()=>{const count=values.length;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{marginRight:"8px",marginBottom:"8px"},key:"selected-tags"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceChip,{clickable:!0,label:`${label}: ${count}`,onDelete:disabled||readOnly?void 0:()=>setValues([])}))})()))},MultiSelectionWithResponsiveTagRendererDisabled={render:MultiSelectionWithResponsiveTagRenderer,args:{disabled:!0}},MultiSelectionWithResponsiveTagRendererReadOnly={render:MultiSelectionWithResponsiveTagRenderer,args:{readOnly:!0}},OpenDropDownOnButtonClick=()=>{const[values,setValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),[matchingValues,setMatchingValues]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),demoInputRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(),handleFetchOptionsCallback=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((searchTerm=>{setMatchingValues(searchTerm?SELECT_OPTIONS.filter((option=>option.name.toLowerCase().includes(searchTerm.toLowerCase()))):SELECT_OPTIONS)}),[]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",columnGap:"10px",alignItems:"end"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocomplete,{name:"demoOptions",label:"Demo Select Options",multiple:!0,value:values,options:matchingValues,itemComponent:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceSelectAutocompleteItem,itemMappingCallback:option=>option,optionsLabelCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.getSolaceSelectAutocompleteOptionLabel,isOptionEqualToValueCallback:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.isSolaceSelectAutocompleteOptionEqual,onChange:evt=>{setValues(evt.value)},fetchOptionsCallback:handleFetchOptionsCallback,getOptionDisabledCallback:option=>"Already added"===option.supplementalText,inputRef:input=>{demoInputRef.current=input},openOnFocus:!0,width:"500px"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{variant:"outline",onClick:()=>{demoInputRef.current?.focus()}},"open the dropdown"))},SecondaryActionSolaceMenu={render:DefaultSelectionTemplate,args:{options:[{name:"Option 1",value:"option1",secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{href:"http://www.cnn.com",variant:"link"}),onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback")},{name:"Option 2",value:"option2",secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{href:"http://www.cnn.com",variant:"link"}),onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback")},{name:"Option 3",value:"option3",secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{href:"http://www.cnn.com",variant:"link"}),onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback")}]},play:async _ref20=>{let{canvasElement}=_ref20;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(canvas.getByRole("button"))}},SecondaryActionSolaceMenuWithSubtext={render:DefaultSelectionTemplate,args:{options:[{name:"Option 1",value:"option1",secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{href:"http://www.cnn.com",variant:"link"}),onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),subText:SUBTEXT},{name:"Option 2",value:"option2",secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{href:"http://www.cnn.com",variant:"link"}),onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback")},{name:"Option 3",value:"option3",secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{href:"http://www.cnn.com",variant:"link"}),onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),subText:SUBTEXT}]},play:async _ref21=>{let{canvasElement}=_ref21;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(canvas.getByRole("button"))}},IconOnRight={render:DefaultSelectionTemplate,args:{id:"demo-solace-autocomplete",options:[{name:"Option 1",value:"option1",secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTooltip,{title:"Help"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.HelpOutlineOutlinedIcon,null)),onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),subText:SUBTEXT},{name:"Option 2",value:"option2",secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTooltip,{title:"Help"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.HelpOutlineOutlinedIcon,null)),onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback")},{name:"Option 3",value:"option3",secondaryAction:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTooltip,{title:"Help"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.HelpOutlineOutlinedIcon,null)),onMenuItemClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),subText:SUBTEXT}]},play:async _ref22=>{let{canvasElement}=_ref22;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},IconAndTextOnRight={render:DefaultSelectionTemplate,args:{id:"demo-solace-autocomplete",disabledItems:!0,options:SELECT_OPTIONS_FOR_SECONDARY_ACTION},play:async _ref23=>{let{canvasElement}=_ref23;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(await canvas.findByRole("combobox"))}},IconMenuItemShowingSecondaryActionIconInInput={render:DefaultSelectionTemplate,args:{value:SELECT_OPTIONS_FOR_SECONDARY_ACTION[0],showSupplementalTextOrSecondaryAction:!0,options:SELECT_OPTIONS_FOR_SECONDARY_ACTION}},IconMenuItemShowingSupplementalTextInInput={render:DefaultSelectionTemplate,args:{value:SELECT_OPTIONS_FOR_SECONDARY_ACTION[1],showSupplementalTextOrSecondaryAction:!0,options:SELECT_OPTIONS_FOR_SECONDARY_ACTION}},SELECT_OPTIONS_FOR_LEFT_ICON=[{name:"Option 1",value:"option1",subText:SUBTEXT,supplementalText:"Supplemental text",icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.DeleteIcon,null)},{name:"Option 2",value:"option2",subText:SUBTEXT,supplementalText:"Supplemental text",icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.DeleteIcon,null)},{name:"Option 3",value:"option3",subText:SUBTEXT,supplementalText:"Supplemental text",icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.DeleteIcon,null)},{name:"Option 4",value:"option4",subText:SUBTEXT,supplementalText:"Supplemental text",icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.DeleteIcon,null)}],IconMenuItemOnLeft={render:DefaultSelectionTemplate,args:{disabledItems:!0,showSupplementalTextOrSecondaryAction:!0,options:SELECT_OPTIONS_FOR_LEFT_ICON},play:async _ref24=>{let{canvasElement}=_ref24;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_test__WEBPACK_IMPORTED_MODULE_1__.mV.click(canvas.getByRole("button"))}},ShowIconMenuItemOnLeftShowingLeftIconInInput={render:DefaultSelectionTemplate,args:{showLeftIcon:!0,value:SELECT_OPTIONS_FOR_LEFT_ICON[0],options:SELECT_OPTIONS_FOR_LEFT_ICON}},ShowIconMenuItemOnLeftShowingLeftIconAndSupplementaryTextInInput={render:DefaultSelectionTemplate,args:{showLeftIcon:!0,showSupplementalTextOrSecondaryAction:!0,value:SELECT_OPTIONS_FOR_LEFT_ICON[0],options:SELECT_OPTIONS_FOR_LEFT_ICON}},WithEllipsisAtStart={render:DefaultSelectionTemplate,args:{label:"Ellipsis at Start",value:{name:"This is a very long option name that will be truncated with an ellipsis at the start instead of the end, very very long text so that it can show the ellipsis at the start",value:"long-option"},textEllipsisPosition:"start"}};DefaultAutocomplete.parameters={...DefaultAutocomplete.parameters,docs:{...DefaultAutocomplete.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    value: SELECT_OPTIONS[0],\n    options: SELECT_OPTIONS\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...DefaultAutocomplete.parameters?.docs?.source}}},WithDividers.parameters={...WithDividers.parameters,docs:{...WithDividers.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    value: SELECT_OPTIONS[0],\n    withDividers: true,\n    options: SELECT_OPTIONS\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...WithDividers.parameters?.docs?.source}}},StackedLabelFormat.parameters={...StackedLabelFormat.parameters,docs:{...StackedLabelFormat.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label"\n  }\n}',...StackedLabelFormat.parameters?.docs?.source}}},StackedLabelFormatWithCustomWidth.parameters={...StackedLabelFormatWithCustomWidth.parameters,docs:{...StackedLabelFormatWithCustomWidth.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    width: "50%",\n    longLabel: true\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...StackedLabelFormatWithCustomWidth.parameters?.docs?.source}}},InlineLabelFormat.parameters={...InlineLabelFormat.parameters,docs:{...InlineLabelFormat.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    inlineLabel: true\n  }\n}',...InlineLabelFormat.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    helperText: "Some helper text"\n  }\n}',...HelperText.parameters?.docs?.source}}},WithErrors.parameters={...WithErrors.parameters,docs:{...WithErrors.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    helperText: "The text you entered was invalid",\n    hasErrors: true\n  }\n}',...WithErrors.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    required: true\n  }\n}',...Required.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    disabled: true,\n    value: SELECT_OPTIONS[1]\n  }\n}',...Disabled.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    readOnly: true,\n    value: SELECT_OPTIONS[1]\n  }\n}',...ReadOnly.parameters?.docs?.source}}},WithDisabledItems.parameters={...WithDisabledItems.parameters,docs:{...WithDisabledItems.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    disabledItems: true\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...WithDisabledItems.parameters?.docs?.source}}},CustomHeight.parameters={...CustomHeight.parameters,docs:{...CustomHeight.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    maxHeight: "150px"\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...CustomHeight.parameters?.docs?.source}}},MultipleSelection.parameters={...MultipleSelection.parameters,docs:{...MultipleSelection.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    multiple: true,\n    value: [SELECT_OPTIONS[0], SELECT_OPTIONS[1], SELECT_OPTIONS[2]]\n  }\n}',...MultipleSelection.parameters?.docs?.source}}},MultipleSelectionWithLimitedTag.parameters={...MultipleSelectionWithLimitedTag.parameters,docs:{...MultipleSelectionWithLimitedTag.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    multiple: true,\n    value: [SELECT_OPTIONS[0], SELECT_OPTIONS[1], SELECT_OPTIONS[2]],\n    limitTags: 2\n  }\n}',...MultipleSelectionWithLimitedTag.parameters?.docs?.source}}},MultipleSelectionWithLongLabel.parameters={...MultipleSelectionWithLongLabel.parameters,docs:{...MultipleSelectionWithLongLabel.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    multiple: true,\n    value: [],\n    width: "50%",\n    longLabel: true\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...MultipleSelectionWithLongLabel.parameters?.docs?.source}}},MultipleSelectionWithLongLabelAndNullMaxTagWidth.parameters={...MultipleSelectionWithLongLabelAndNullMaxTagWidth.parameters,docs:{...MultipleSelectionWithLongLabelAndNullMaxTagWidth.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    multiple: true,\n    value: [],\n    width: "50%",\n    longLabel: true,\n    tagMaxWidth: null\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...MultipleSelectionWithLongLabelAndNullMaxTagWidth.parameters?.docs?.source}}},MultipleSelectionWithCloseOnSelect.parameters={...MultipleSelectionWithCloseOnSelect.parameters,docs:{...MultipleSelectionWithCloseOnSelect.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    multiple: true,\n    value: [],\n    disableCloseOnSelect: false\n  }\n}',...MultipleSelectionWithCloseOnSelect.parameters?.docs?.source}}},MultipleSelectionWithClearSearchOnSelect.parameters={...MultipleSelectionWithClearSearchOnSelect.parameters,docs:{...MultipleSelectionWithClearSearchOnSelect.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    multiple: true,\n    value: [],\n    clearSearchOnSelect: true\n  }\n}',...MultipleSelectionWithClearSearchOnSelect.parameters?.docs?.source}}},MultiSelectionDisabled.parameters={...MultiSelectionDisabled.parameters,docs:{...MultiSelectionDisabled.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    multiple: true,\n    disabled: true,\n    value: [SELECT_OPTIONS[0], SELECT_OPTIONS[2]]\n  }\n}',...MultiSelectionDisabled.parameters?.docs?.source}}},MultiSelectionReadOnly.parameters={...MultiSelectionReadOnly.parameters,docs:{...MultiSelectionReadOnly.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    multiple: true,\n    readOnly: true,\n    longLabel: true,\n    value: [SELECT_OPTIONS[0], {\n      ...SELECT_OPTIONS[3],\n      name: getLongLabel(SELECT_OPTIONS[3])\n    }]\n  }\n}',...MultiSelectionReadOnly.parameters?.docs?.source}}},MultiSelectionWithErrors.parameters={...MultiSelectionWithErrors.parameters,docs:{...MultiSelectionWithErrors.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Some Label",\n    multiple: true,\n    helperText: "More than one values have errors. Hover on the values to see errors.",\n    hasErrors: true,\n    longLabel: true,\n    getOptionValidationErrorCallback: (option: SolaceSelectAutocompleteItemProps) => {\n      if (option.value === "option1") {\n        return "Invalid characters. Enter only alphanumeric characters, dashes and underscores.";\n      } else if (option.value === "option4") {\n        return "Exceeds limit. Enter a value under 100 characters";\n      }\n    },\n    value: [SELECT_OPTIONS[0], {\n      ...SELECT_OPTIONS[3],\n      name: getLongLabel(SELECT_OPTIONS[3])\n    }, SELECT_OPTIONS[2]]\n  }\n}',...MultiSelectionWithErrors.parameters?.docs?.source}}},MultiSelectionWithDisabledItems.parameters={...MultiSelectionWithDisabledItems.parameters,docs:{...MultiSelectionWithDisabledItems.parameters?.docs,source:{originalSource:'({\n  multiple = true,\n  readOnly = false,\n  required = true,\n  disabled = false,\n  label = "Modeled Event Mesh",\n  inlineLabel = false,\n  width,\n  placeholder,\n  helperText,\n  hasErrors,\n  limitTags,\n  disableCloseOnSelect,\n  clearSearchOnSelect,\n  maxHeight,\n  tagMaxWidth,\n  minWidth,\n  getOptionValidationErrorCallback\n}: {\n  // props of component\n  multiple?: boolean;\n  readOnly?: boolean;\n  required?: boolean;\n  disabled?: boolean;\n  label?: string;\n  inlineLabel?: boolean;\n  width?: string;\n  placeholder?: string;\n  helperText?: string;\n  hasErrors?: boolean;\n  limitTags?: number;\n  disableCloseOnSelect?: boolean;\n  clearSearchOnSelect?: boolean;\n  maxHeight?: string;\n  tagMaxWidth?: string;\n  minWidth?: string;\n  getOptionValidationErrorCallback?: ((option: SolaceSelectAutocompleteItemProps) => string | JSX.Element) | undefined;\n}): JSX.Element => {\n  const [values, setValues] = useState([SAMPLE_EVENT_MESHES[1], SAMPLE_EVENT_MESHES[2]]);\n  const [matchingValues, setMatchingValues] = useState<SolaceSelectAutocompleteItemProps[]>([]);\n  const handleChange = evt => {\n    setValues(evt.value);\n  };\n  const handleFetchOptionsCallback = useCallback((searchTerm: string) => {\n    if (searchTerm) {\n      setMatchingValues(SAMPLE_EVENT_MESHES.filter(option => option["name"].toLowerCase().includes(searchTerm.toLowerCase())));\n    } else {\n      setMatchingValues(SAMPLE_EVENT_MESHES);\n    }\n  }, []);\n  const handleOptionDisabled = option => {\n    return option["supplementalText"] === "Already added";\n  };\n  return <div>\n            <SolaceSelectAutocomplete name="modeledEventMesh" label={label} required={required} clearSearchOnSelect={clearSearchOnSelect} disabled={disabled} hasErrors={hasErrors} helperText={helperText} inlineLabel={inlineLabel} limitTags={limitTags} multiple={multiple} readOnly={readOnly} width={width} placeholder={placeholder} disableCloseOnSelect={disableCloseOnSelect} maxHeight={maxHeight} minWidth={minWidth} tagMaxWidth={tagMaxWidth} getOptionValidationErrorCallback={getOptionValidationErrorCallback} value={values} options={matchingValues} itemComponent={SolaceSelectAutocompleteItem} itemMappingCallback={option => option} optionsLabelCallback={getSolaceSelectAutocompleteOptionLabel} isOptionEqualToValueCallback={isSolaceSelectAutocompleteOptionEqual} onChange={handleChange} fetchOptionsCallback={handleFetchOptionsCallback} getOptionDisabledCallback={handleOptionDisabled}></SolaceSelectAutocomplete>\n        </div>;\n}',...MultiSelectionWithDisabledItems.parameters?.docs?.source}}},MultiSelectionWithCreateNewAndClearSearchWhenSelectNew.parameters={...MultiSelectionWithCreateNewAndClearSearchWhenSelectNew.parameters,docs:{...MultiSelectionWithCreateNewAndClearSearchWhenSelectNew.parameters?.docs,source:{originalSource:"{\n  render: MultiSelectionWithCreateNewTemplate,\n  args: {\n    clearSearchOnSelect: true,\n    options: []\n  }\n}",...MultiSelectionWithCreateNewAndClearSearchWhenSelectNew.parameters?.docs?.source}}},MultiSelectionWithInitialValueCreateNewAndClearSearchWhenSelectNew.parameters={...MultiSelectionWithInitialValueCreateNewAndClearSearchWhenSelectNew.parameters,docs:{...MultiSelectionWithInitialValueCreateNewAndClearSearchWhenSelectNew.parameters?.docs,source:{originalSource:"{\n  render: MultiSelectionWithCreateNewTemplate,\n  args: {\n    value: [SELECT_OPTIONS[0], SELECT_OPTIONS[1]],\n    clearSearchOnSelect: true,\n    options: SELECT_OPTIONS\n  }\n}",...MultiSelectionWithInitialValueCreateNewAndClearSearchWhenSelectNew.parameters?.docs?.source}}},MultiSelectionWithInitialValueCreateNewAndValidateInputAndClearSearchWhenSelectNew.parameters={...MultiSelectionWithInitialValueCreateNewAndValidateInputAndClearSearchWhenSelectNew.parameters,docs:{...MultiSelectionWithInitialValueCreateNewAndValidateInputAndClearSearchWhenSelectNew.parameters?.docs,source:{originalSource:"{\n  render: MultiSelectionWithCreateNewTemplate,\n  args: {\n    value: [SELECT_OPTIONS[0], SELECT_OPTIONS[1]],\n    clearSearchOnSelect: true,\n    options: SELECT_OPTIONS,\n    validateInput: true\n  }\n}",...MultiSelectionWithInitialValueCreateNewAndValidateInputAndClearSearchWhenSelectNew.parameters?.docs?.source}}},MultiSelectionWithCreateNewAndNotClearSearchWhenSelectNew.parameters={...MultiSelectionWithCreateNewAndNotClearSearchWhenSelectNew.parameters,docs:{...MultiSelectionWithCreateNewAndNotClearSearchWhenSelectNew.parameters?.docs,source:{originalSource:"{\n  render: MultiSelectionWithCreateNewTemplate,\n  args: {\n    clearSearchOnSelect: false,\n    options: SELECT_OPTIONS\n  }\n}",...MultiSelectionWithCreateNewAndNotClearSearchWhenSelectNew.parameters?.docs?.source}}},MultiSelectionWithHeading.parameters={...MultiSelectionWithHeading.parameters,docs:{...MultiSelectionWithHeading.parameters?.docs,source:{originalSource:'{\n  render: MultiSelectionWithHeadingTemplate,\n  args: {},\n  play: async ({\n    canvasElement\n  }) => {\n    // Starts querying the component from it\'s root element\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...MultiSelectionWithHeading.parameters?.docs?.source}}},MultiSelectionWithHeadingWithCustomHeight.parameters={...MultiSelectionWithHeadingWithCustomHeight.parameters,docs:{...MultiSelectionWithHeadingWithCustomHeight.parameters?.docs,source:{originalSource:'{\n  render: MultiSelectionWithHeadingTemplate,\n  args: {\n    maxHeight: "205px"\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    // Starts querying the component from it\'s root element\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...MultiSelectionWithHeadingWithCustomHeight.parameters?.docs?.source}}},MultiSelectionWithHeadingAndDisabledItems.parameters={...MultiSelectionWithHeadingAndDisabledItems.parameters,docs:{...MultiSelectionWithHeadingAndDisabledItems.parameters?.docs,source:{originalSource:'{\n  render: MultiSelectionWithHeadingTemplate,\n  args: {\n    disabledItems: true\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    // Starts querying the component from it\'s root element\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...MultiSelectionWithHeadingAndDisabledItems.parameters?.docs?.source}}},MultiSelectionWithHeadingWithDividers.parameters={...MultiSelectionWithHeadingWithDividers.parameters,docs:{...MultiSelectionWithHeadingWithDividers.parameters?.docs,source:{originalSource:'{\n  render: MultiSelectionWithHeadingTemplate,\n  args: {\n    showGroupDivider: true\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    // Starts querying the component from it\'s root element\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...MultiSelectionWithHeadingWithDividers.parameters?.docs?.source}}},MultiSelectionWithHeadingWithDividersAndDisabledItems.parameters={...MultiSelectionWithHeadingWithDividersAndDisabledItems.parameters,docs:{...MultiSelectionWithHeadingWithDividersAndDisabledItems.parameters?.docs,source:{originalSource:'{\n  render: MultiSelectionWithHeadingTemplate,\n  args: {\n    disabledItems: true,\n    showGroupDivider: true\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    // Starts querying the component from it\'s root element\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...MultiSelectionWithHeadingWithDividersAndDisabledItems.parameters?.docs?.source}}},MultiSelectionWithCustomTagRenderer.parameters={...MultiSelectionWithCustomTagRenderer.parameters,docs:{...MultiSelectionWithCustomTagRenderer.parameters?.docs,source:{originalSource:'({\n  label,\n  disabled,\n  readOnly,\n  showGroupDivider = false,\n  clearSearchOnSelect = false,\n  hasErrors,\n  disableCloseOnSelect,\n  helperText,\n  inlineLabel,\n  maxHeight,\n  minWidth,\n  options = [],\n  required,\n  tagMaxWidth,\n  width\n}: {\n  label?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  value?: Array<SolaceSelectAutocompleteItemProps>;\n  showGroupDivider?: boolean;\n  clearSearchOnSelect?: boolean;\n  disableCloseOnSelect?: boolean;\n  hasErrors?: boolean;\n  helperText?: string;\n  inlineLabel?: boolean;\n  maxHeight?: string;\n  minWidth?: string;\n  multiple?: boolean;\n  placeholder?: string;\n  required?: boolean;\n  tagMaxWidth?: string;\n  width?: string;\n  options?: SolaceSelectAutocompleteItemProps[];\n}): JSX.Element => {\n  const [values, setValues] = useState<SolaceSelectAutocompleteItemProps[]>([SAMPLE_APPLICATION_DOMAINS[0], SAMPLE_APPLICATION_DOMAINS[2]]);\n  const [matchingValues, setMatchingValues] = useState<SolaceSelectAutocompleteItemProps[]>(options);\n  const handleChange = evt => {\n    setValues(evt.value);\n  };\n  const handleDelete = item => {\n    setValues(prevValues => {\n      return prevValues.filter(value => value.value !== item);\n    });\n  };\n  const handleFetchOptionsCallback = useCallback((searchTerm: string) => {\n    if (searchTerm) {\n      setMatchingValues(SAMPLE_APPLICATION_DOMAINS.filter(option => option["name"].toLowerCase().includes(searchTerm.toLowerCase())));\n    } else {\n      setMatchingValues(SAMPLE_APPLICATION_DOMAINS);\n    }\n  }, []);\n  return <div>\n            <SolaceSelectAutocomplete name="applicationDomain" placeholder={values.length ? "" : "Application Domain"} multiple={true} value={values} options={matchingValues} itemComponent={SolaceSelectAutocompleteItem} itemMappingCallback={option => option} optionsLabelCallback={getSolaceSelectAutocompleteOptionLabel} isOptionEqualToValueCallback={isSolaceSelectAutocompleteOptionEqual} onChange={handleChange} fetchOptionsCallback={handleFetchOptionsCallback} label={label} disabled={disabled} readOnly={readOnly} showGroupDivider={showGroupDivider} clearSearchOnSelect={clearSearchOnSelect} hasErrors={hasErrors} disableCloseOnSelect={disableCloseOnSelect} helperText={helperText} inlineLabel={inlineLabel} maxHeight={maxHeight} minWidth={minWidth} required={required} tagMaxWidth={tagMaxWidth} width={width} renderTags={() => <div style={{\n      display: "flex",\n      alignItems: "center",\n      gap: "4px",\n      paddingRight: "8px"\n    }}>\n                        <span>Application Domain: </span>\n                        <span style={{\n        display: "inline-block",\n        backgroundColor: "rgba(0, 0, 0, 0.1)",\n        borderRadius: "50%",\n        lineHeight: "0px"\n      }}>\n                            <span style={{\n          display: "inline-block",\n          paddingBottom: "50%",\n          paddingTop: "50%",\n          marginLeft: "5px",\n          marginRight: "5px",\n          textAlign: "center"\n        }}>\n                                {values.length}\n                            </span>\n                        </span>\n                    </div>}></SolaceSelectAutocomplete>\n            <div style={{\n      marginBlock: "24px",\n      display: "flex",\n      flexWrap: "wrap",\n      width: width === null ? undefined : width\n    }}>\n                {values.map(value => {\n        return <div style={{\n          marginRight: "8px",\n          marginBottom: "8px"\n        }} key={value.value}>\n                            <SolaceChip clickable label={`Application Domain: ${value.name}`} maxWidth={tagMaxWidth === null ? undefined : tagMaxWidth} onDelete={!disabled && !readOnly ? () => handleDelete(value.value) : undefined} // Conditionally render onDelete\n          />\n                        </div>;\n      })}\n            </div>\n        </div>;\n}',...MultiSelectionWithCustomTagRenderer.parameters?.docs?.source}}},MultiSelectionWithResponsiveTagRenderer.parameters={...MultiSelectionWithResponsiveTagRenderer.parameters,docs:{...MultiSelectionWithResponsiveTagRenderer.parameters?.docs,source:{originalSource:'({\n  label = "Application Label",\n  disabled,\n  readOnly,\n  showGroupDivider = false,\n  clearSearchOnSelect = false,\n  hasErrors,\n  disableCloseOnSelect,\n  helperText,\n  inlineLabel,\n  maxHeight,\n  minWidth = "500px",\n  options = [],\n  required,\n  tagMaxWidth,\n  width,\n  limitTags\n}: {\n  label?: string;\n  disabled?: boolean;\n  readOnly?: boolean;\n  value?: Array<SolaceSelectAutocompleteItemProps>;\n  showGroupDivider?: boolean;\n  clearSearchOnSelect?: boolean;\n  disableCloseOnSelect?: boolean;\n  hasErrors?: boolean;\n  helperText?: string;\n  inlineLabel?: boolean;\n  maxHeight?: string;\n  minWidth?: string;\n  multiple?: boolean;\n  placeholder?: string;\n  required?: boolean;\n  tagMaxWidth?: string;\n  width?: string;\n  options?: SolaceSelectAutocompleteItemProps[];\n  limitTags?: number | null | undefined;\n  getLimitTagsText?: (limit: number) => string;\n}): JSX.Element => {\n  const [values, setValues] = useState<SolaceSelectAutocompleteItemProps[]>(SAMPLE_APPLICATION_DOMAINS.slice(1));\n  const [matchingValues, setMatchingValues] = useState<SolaceSelectAutocompleteItemProps[]>(options);\n  const [selectedTags, setSelectedTags] = useState<{\n    id: string;\n    label: string;\n  }[]>([]);\n  const handleChange = evt => {\n    setValues(evt.value);\n  };\n\n  // eslint-disable-next-line sonarjs/no-identical-functions\n  const handleDelete = item => {\n    setValues(prevValues => {\n      return prevValues.filter(value => value.value !== item);\n    });\n  };\n  const handleFetchOptionsCallback = useCallback((searchTerm: string) => {\n    if (searchTerm) {\n      setMatchingValues(SAMPLE_APPLICATION_DOMAINS.filter(option => option["name"].toLowerCase().includes(searchTerm.toLowerCase())));\n    } else {\n      setMatchingValues(SAMPLE_APPLICATION_DOMAINS);\n    }\n  }, []);\n  useEffect(() => {\n    const tags = values?.map(selectedItemValue => {\n      return {\n        id: selectedItemValue.value,\n        label: selectedItemValue.name\n      };\n    });\n    setSelectedTags(tags);\n  }, [values]);\n  return <Container>\n            <SolaceSelectAutocomplete name="applicationDomain" placeholder={values.length ? "" : "Application Domain"} multiple={true} value={values} options={matchingValues} itemComponent={SolaceSelectAutocompleteItem} itemMappingCallback={option => option} optionsLabelCallback={getSolaceSelectAutocompleteOptionLabel} isOptionEqualToValueCallback={isSolaceSelectAutocompleteOptionEqual} onChange={handleChange} fetchOptionsCallback={handleFetchOptionsCallback} label={label} disabled={disabled} readOnly={readOnly} showGroupDivider={showGroupDivider} clearSearchOnSelect={clearSearchOnSelect} hasErrors={hasErrors} disableCloseOnSelect={disableCloseOnSelect} helperText={helperText} inlineLabel={inlineLabel} maxHeight={maxHeight} minWidth={minWidth} required={required} tagMaxWidth={tagMaxWidth} width={width} {...typeof limitTags === "number" && {\n      limitTags\n    }} getLimitTagsText={limit => `+${limit} more`} renderTags={() => <>\n                        {values && values.length > 0 && <SolaceSelectAutocompleteResponsiveTags containerWidth={500} tags={selectedTags} tagMaxWidth={tagMaxWidth} overflowIndicatorLabel={"Filters"} overflowIndicatorLabelSingular={"Filter"} onDelete={handleDelete} dataQa={"applicationDomainSelect-tags"} disabled={disabled} />}\n                    </>}></SolaceSelectAutocomplete>\n            <div style={{\n      marginBlock: "24px",\n      display: "flex",\n      flexWrap: "wrap",\n      width: width === null ? undefined : width\n    }}>\n                {values.length > 0 && (() => {\n        const count = values.length;\n        return <div style={{\n          marginRight: "8px",\n          marginBottom: "8px"\n        }} key="selected-tags">\n                                <SolaceChip clickable label={`${label}: ${count}`} onDelete={!disabled && !readOnly ? () => setValues([]) : undefined} />\n                            </div>;\n      })()}\n            </div>\n        </Container>;\n}',...MultiSelectionWithResponsiveTagRenderer.parameters?.docs?.source}}},MultiSelectionWithResponsiveTagRendererDisabled.parameters={...MultiSelectionWithResponsiveTagRendererDisabled.parameters,docs:{...MultiSelectionWithResponsiveTagRendererDisabled.parameters?.docs,source:{originalSource:"{\n  render: MultiSelectionWithResponsiveTagRenderer,\n  args: {\n    disabled: true\n  }\n}",...MultiSelectionWithResponsiveTagRendererDisabled.parameters?.docs?.source}}},MultiSelectionWithResponsiveTagRendererReadOnly.parameters={...MultiSelectionWithResponsiveTagRendererReadOnly.parameters,docs:{...MultiSelectionWithResponsiveTagRendererReadOnly.parameters?.docs,source:{originalSource:"{\n  render: MultiSelectionWithResponsiveTagRenderer,\n  args: {\n    readOnly: true\n  }\n}",...MultiSelectionWithResponsiveTagRendererReadOnly.parameters?.docs?.source}}},OpenDropDownOnButtonClick.parameters={...OpenDropDownOnButtonClick.parameters,docs:{...OpenDropDownOnButtonClick.parameters?.docs,source:{originalSource:'() => {\n  const [values, setValues] = useState([]);\n  const [matchingValues, setMatchingValues] = useState<SolaceSelectAutocompleteItemProps[]>([]);\n  const demoInputRef = useRef<HTMLInputElement>();\n  const handleChange = evt => {\n    setValues(evt.value);\n  };\n  const handleFetchOptionsCallback = useCallback((searchTerm: string) => {\n    if (searchTerm) {\n      setMatchingValues(SELECT_OPTIONS.filter(option => option["name"].toLowerCase().includes(searchTerm.toLowerCase())));\n    } else {\n      setMatchingValues(SELECT_OPTIONS);\n    }\n  }, []);\n  const handleOptionDisabled = option => {\n    return option["supplementalText"] === "Already added";\n  };\n  return <div style={{\n    display: "flex",\n    columnGap: "10px",\n    alignItems: "end"\n  }}>\n            <SolaceSelectAutocomplete name="demoOptions" label="Demo Select Options" multiple={true} value={values} options={matchingValues} itemComponent={SolaceSelectAutocompleteItem} itemMappingCallback={option => option} optionsLabelCallback={getSolaceSelectAutocompleteOptionLabel} isOptionEqualToValueCallback={isSolaceSelectAutocompleteOptionEqual} onChange={handleChange} fetchOptionsCallback={handleFetchOptionsCallback} getOptionDisabledCallback={handleOptionDisabled} inputRef={input => {\n      demoInputRef.current = input;\n    }} openOnFocus width="500px"></SolaceSelectAutocomplete>\n            <SolaceButton variant="outline" onClick={() => {\n      demoInputRef.current?.focus();\n    }}>\n                open the dropdown\n            </SolaceButton>\n        </div>;\n}',...OpenDropDownOnButtonClick.parameters?.docs?.source}}},SecondaryActionSolaceMenu.parameters={...SecondaryActionSolaceMenu.parameters,docs:{...SecondaryActionSolaceMenu.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    options: [{\n      name: "Option 1",\n      value: "option1",\n      secondaryAction: <SolaceButton href="http://www.cnn.com" variant="link" />,\n      onMenuItemClick: action("callback")\n    }, {\n      name: "Option 2",\n      value: "option2",\n      secondaryAction: <SolaceButton href="http://www.cnn.com" variant="link" />,\n      onMenuItemClick: action("callback")\n    }, {\n      name: "Option 3",\n      value: "option3",\n      secondaryAction: <SolaceButton href="http://www.cnn.com" variant="link" />,\n      onMenuItemClick: action("callback")\n    }]\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByRole("button"));\n  }\n}',...SecondaryActionSolaceMenu.parameters?.docs?.source}}},SecondaryActionSolaceMenuWithSubtext.parameters={...SecondaryActionSolaceMenuWithSubtext.parameters,docs:{...SecondaryActionSolaceMenuWithSubtext.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    options: [{\n      name: "Option 1",\n      value: "option1",\n      secondaryAction: <SolaceButton href="http://www.cnn.com" variant="link" />,\n      onMenuItemClick: action("callback"),\n      subText: SUBTEXT\n    }, {\n      name: "Option 2",\n      value: "option2",\n      secondaryAction: <SolaceButton href="http://www.cnn.com" variant="link" />,\n      onMenuItemClick: action("callback")\n    }, {\n      name: "Option 3",\n      value: "option3",\n      secondaryAction: <SolaceButton href="http://www.cnn.com" variant="link" />,\n      onMenuItemClick: action("callback"),\n      subText: SUBTEXT\n    }]\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByRole("button"));\n  }\n}',...SecondaryActionSolaceMenuWithSubtext.parameters?.docs?.source}}},IconOnRight.parameters={...IconOnRight.parameters,docs:{...IconOnRight.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    id: "demo-solace-autocomplete",\n    options: [{\n      name: "Option 1",\n      value: "option1",\n      secondaryAction: <SolaceTooltip title="Help">\n                        <HelpOutlineOutlinedIcon />\n                    </SolaceTooltip>,\n      onMenuItemClick: action("callback"),\n      subText: SUBTEXT\n    }, {\n      name: "Option 2",\n      value: "option2",\n      secondaryAction: <SolaceTooltip title="Help">\n                        <HelpOutlineOutlinedIcon />\n                    </SolaceTooltip>,\n      onMenuItemClick: action("callback")\n    }, {\n      name: "Option 3",\n      value: "option3",\n      secondaryAction: <SolaceTooltip title="Help">\n                        <HelpOutlineOutlinedIcon />\n                    </SolaceTooltip>,\n      onMenuItemClick: action("callback"),\n      subText: SUBTEXT\n    }]\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...IconOnRight.parameters?.docs?.source}}},IconAndTextOnRight.parameters={...IconAndTextOnRight.parameters,docs:{...IconAndTextOnRight.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    id: "demo-solace-autocomplete",\n    disabledItems: true,\n    options: SELECT_OPTIONS_FOR_SECONDARY_ACTION\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(await canvas.findByRole("combobox"));\n  }\n}',...IconAndTextOnRight.parameters?.docs?.source}}},IconMenuItemShowingSecondaryActionIconInInput.parameters={...IconMenuItemShowingSecondaryActionIconInInput.parameters,docs:{...IconMenuItemShowingSecondaryActionIconInInput.parameters?.docs,source:{originalSource:"{\n  render: DefaultSelectionTemplate,\n  args: {\n    value: SELECT_OPTIONS_FOR_SECONDARY_ACTION[0],\n    showSupplementalTextOrSecondaryAction: true,\n    options: SELECT_OPTIONS_FOR_SECONDARY_ACTION\n  }\n}",...IconMenuItemShowingSecondaryActionIconInInput.parameters?.docs?.source}}},IconMenuItemShowingSupplementalTextInInput.parameters={...IconMenuItemShowingSupplementalTextInInput.parameters,docs:{...IconMenuItemShowingSupplementalTextInInput.parameters?.docs,source:{originalSource:"{\n  render: DefaultSelectionTemplate,\n  args: {\n    value: SELECT_OPTIONS_FOR_SECONDARY_ACTION[1],\n    showSupplementalTextOrSecondaryAction: true,\n    options: SELECT_OPTIONS_FOR_SECONDARY_ACTION\n  }\n}",...IconMenuItemShowingSupplementalTextInInput.parameters?.docs?.source}}},IconMenuItemOnLeft.parameters={...IconMenuItemOnLeft.parameters,docs:{...IconMenuItemOnLeft.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    disabledItems: true,\n    showSupplementalTextOrSecondaryAction: true,\n    options: SELECT_OPTIONS_FOR_LEFT_ICON\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.click(canvas.getByRole("button"));\n  }\n}',...IconMenuItemOnLeft.parameters?.docs?.source}}},ShowIconMenuItemOnLeftShowingLeftIconInInput.parameters={...ShowIconMenuItemOnLeftShowingLeftIconInInput.parameters,docs:{...ShowIconMenuItemOnLeftShowingLeftIconInInput.parameters?.docs,source:{originalSource:"{\n  render: DefaultSelectionTemplate,\n  args: {\n    showLeftIcon: true,\n    value: SELECT_OPTIONS_FOR_LEFT_ICON[0],\n    options: SELECT_OPTIONS_FOR_LEFT_ICON\n  }\n}",...ShowIconMenuItemOnLeftShowingLeftIconInInput.parameters?.docs?.source}}},ShowIconMenuItemOnLeftShowingLeftIconAndSupplementaryTextInInput.parameters={...ShowIconMenuItemOnLeftShowingLeftIconAndSupplementaryTextInInput.parameters,docs:{...ShowIconMenuItemOnLeftShowingLeftIconAndSupplementaryTextInInput.parameters?.docs,source:{originalSource:"{\n  render: DefaultSelectionTemplate,\n  args: {\n    showLeftIcon: true,\n    showSupplementalTextOrSecondaryAction: true,\n    value: SELECT_OPTIONS_FOR_LEFT_ICON[0],\n    options: SELECT_OPTIONS_FOR_LEFT_ICON\n  }\n}",...ShowIconMenuItemOnLeftShowingLeftIconAndSupplementaryTextInInput.parameters?.docs?.source}}},WithEllipsisAtStart.parameters={...WithEllipsisAtStart.parameters,docs:{...WithEllipsisAtStart.parameters?.docs,source:{originalSource:'{\n  render: DefaultSelectionTemplate,\n  args: {\n    label: "Ellipsis at Start",\n    value: {\n      name: "This is a very long option name that will be truncated with an ellipsis at the start instead of the end, very very long text so that it can show the ellipsis at the start",\n      value: "long-option"\n    },\n    textEllipsisPosition: "start"\n  }\n}',...WithEllipsisAtStart.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultAutocomplete","WithDividers","StackedLabelFormat","StackedLabelFormatWithCustomWidth","InlineLabelFormat","HelperText","WithErrors","Required","Disabled","ReadOnly","WithDisabledItems","CustomHeight","MultipleSelection","MultipleSelectionWithLimitedTag","MultipleSelectionWithLongLabel","MultipleSelectionWithLongLabelAndNullMaxTagWidth","MultipleSelectionWithCloseOnSelect","MultipleSelectionWithClearSearchOnSelect","MultiSelectionDisabled","MultiSelectionReadOnly","MultiSelectionWithErrors","MultiSelectionWithDisabledItems","MultiSelectionWithCreateNewAndClearSearchWhenSelectNew","MultiSelectionWithInitialValueCreateNewAndClearSearchWhenSelectNew","MultiSelectionWithInitialValueCreateNewAndValidateInputAndClearSearchWhenSelectNew","MultiSelectionWithCreateNewAndNotClearSearchWhenSelectNew","MultiSelectionWithHeading","MultiSelectionWithHeadingWithCustomHeight","MultiSelectionWithHeadingAndDisabledItems","MultiSelectionWithHeadingWithDividers","MultiSelectionWithHeadingWithDividersAndDisabledItems","MultiSelectionWithCustomTagRenderer","MultiSelectionWithResponsiveTagRenderer","MultiSelectionWithResponsiveTagRendererDisabled","MultiSelectionWithResponsiveTagRendererReadOnly","OpenDropDownOnButtonClick","SecondaryActionSolaceMenu","SecondaryActionSolaceMenuWithSubtext","IconOnRight","IconAndTextOnRight","IconMenuItemShowingSecondaryActionIconInInput","IconMenuItemShowingSupplementalTextInInput","IconMenuItemOnLeft","ShowIconMenuItemOnLeftShowingLeftIconInInput","ShowIconMenuItemOnLeftShowingLeftIconAndSupplementaryTextInInput","WithEllipsisAtStart"]},"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext}}]);