[
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/SolacePageHeaderWithProgress/SolacePageHeaderWithProgress.tsx",
    "props": [
      {
        "name": "...",
        "type": "spread",
        "value": "overrideProps"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/SolacePageHeaderWithProgress/SolacePageHeaderWithProgress.tsx",
    "props": [
      {
        "name": "...",
        "type": "spread",
        "value": "props"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/home/Home.tsx",
    "props": [
      {
        "name": "title",
        "type": "string",
        "value": "Event Portal"
      },
      {
        "name": "breadcrumbs",
        "type": "variable",
        "value": "screenPath"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "solace-header"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/aiWizard/AIWizard.tsx",
    "props": [
      {
        "name": "title",
        "type": "string",
        "value": "Event Portal AI Designer"
      },
      {
        "name": "breadcrumbs",
        "type": "array",
        "value": "[\n\t\t\t\t\t{ title: \"Designer\", link: \"/ep/designer\" },\n\t\t\t\t\t{ title: messages.aiWizardButton.action, link: \"/ep/designer/wizard\", current: true }\n\t\t\t\t]"
      },
      {
        "name": "release",
        "type": "string",
        "value": "EXPERIMENTAL"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/IntegrationEnvironmentWrapper.tsx",
    "props": [
      {
        "name": "title",
        "type": "variable",
        "value": "title"
      },
      {
        "name": "environment",
        "type": "expression",
        "value": "environment && (\n\t\t\t\t\t\t<SolaceEnvironmentChip\n\t\t\t\t\t\t\tbgColor={environment.bgColor}\n\t\t\t\t\t\t\tfgColor={environment.fgColor}\n\t\t\t\t\t\t\ticon={environment.icon}\n\t\t\t\t\t\t\tlabel={environment.label}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)"
      },
      {
        "name": "borderTop",
        "type": "expression",
        "value": "selectedEnvironment ? getEnvironmentColor(environmentOptions, selectedEnvironment.environmentId) : undefined"
      },
      {
        "name": "breadcrumbs",
        "type": "jsx",
        "value": "<SolaceBreadcrumb paths={breadcrumbs} />"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/pages/connectors/ViewConnectorV2.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "connectorDetails?.name ?? \"\""
      },
      {
        "name": "environment",
        "type": "expression",
        "value": "miEnvironment && (\n\t\t\t\t\t\t\t<SolaceEnvironmentChip\n\t\t\t\t\t\t\t\tbgColor={miEnvironment.bgColor}\n\t\t\t\t\t\t\t\tfgColor={miEnvironment.fgColor}\n\t\t\t\t\t\t\t\ticon={miEnvironment.icon}\n\t\t\t\t\t\t\t\tlabel={miEnvironment.label}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)"
      },
      {
        "name": "borderTop",
        "type": "expression",
        "value": "selectedEnvironment ? getEnvironmentColor(environmentOptions, selectedEnvironment.environmentId) : undefined"
      },
      {
        "name": "breadcrumbs",
        "type": "jsx",
        "value": "<SolaceBreadcrumb\n\t\t\t\t\t\t\tpaths={[\n\t\t\t\t\t\t\t\t{ title: \"Micro-Integrations\", link: CONNECTOR },\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttitle: connectorDetails?.name ?? \"\",\n\t\t\t\t\t\t\t\t\tlink: `/${id}`,\n\t\t\t\t\t\t\t\t\tcurrent: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>"
      },
      {
        "name": "actions",
        "type": "expression",
        "value": "(connectorDetails?.state === ConnectorState.notdeployed ||\n\t\t\t\t\t\t\tconnectorDetails?.state === ConnectorState.error) &&\n\t\t\t\t\t\thasAdminMiAccess\n\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t<SolaceButton key=\"editButton\" variant=\"text\" onClick={handleEditButton}>\n\t\t\t\t\t\t\t\t\t\t{en.connectors.labels.editConnectorFlow}\n\t\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t: !hasAdminMiAccess\n\t\t\t\t\t\t\t? [<RoleIconWrapper key=\"roleIconWrapper\" resourceRole={\"viewer\"} withLabel />]\n\t\t\t\t\t\t\t: undefined"
      },
      {
        "name": "actionMenu",
        "type": "jsx",
        "value": "<SolaceMenu\n\t\t\t\t\t\t\tkey=\"actionitems\"\n\t\t\t\t\t\t\tbuttonProps={{\n\t\t\t\t\t\t\t\tchildren: <MoreHorizOutlinedIcon />,\n\t\t\t\t\t\t\t\ttitle: \"Actions\",\n\t\t\t\t\t\t\t\tvariant: \"icon\",\n\t\t\t\t\t\t\t\tdataQa: \"connectors_additional_actions\"\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tanchorOrigin={{ horizontal: \"right\", vertical: \"bottom\" }}\n\t\t\t\t\t\t\ttransformOrigin={{ horizontal: \"right\", vertical: \"top\" }}\n\t\t\t\t\t\t\tid={\"connectors_additional_actions\"}\n\t\t\t\t\t\t\titems={menuItems}\n\t\t\t\t\t\t/>"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/pages/connectors/CloneConnector.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "`Clone ${connectorTypeDetails.name} ${connectorTypeDetails.direction} Micro-Integration: ${connectorDetails.name}`"
      },
      {
        "name": "breadcrumbs",
        "type": "jsx",
        "value": "<SolaceBreadcrumb paths={breadcrumbsPaths2()} />"
      },
      {
        "name": "environment",
        "type": "expression",
        "value": "miEnvironment && (\n\t\t\t\t\t\t\t\t<SolaceEnvironmentChip\n\t\t\t\t\t\t\t\t\tbgColor={miEnvironment.bgColor}\n\t\t\t\t\t\t\t\t\tfgColor={miEnvironment.fgColor}\n\t\t\t\t\t\t\t\t\ticon={miEnvironment.icon}\n\t\t\t\t\t\t\t\t\tlabel={miEnvironment.label}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)"
      },
      {
        "name": "borderTop",
        "type": "expression",
        "value": "selectedEnvironment\n\t\t\t\t\t\t\t\t? getEnvironmentColor(environmentOptions, selectedEnvironment.environmentId)\n\t\t\t\t\t\t\t\t: undefined"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/pages/connectors/Connectors.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "en.connectors.connectorFlows"
      },
      {
        "name": "environment",
        "type": "expression",
        "value": "selectedEnvironment ? (\n\t\t\t\t\t\t\t\t\t\t<SolaceEnvironmentSelectChip\n\t\t\t\t\t\t\t\t\t\t\tname=\"environment\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={selectedEnvironment.environmentId}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleSetEnvironment}\n\t\t\t\t\t\t\t\t\t\t\toptions={environmentOptions}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<ToggleWrapper>\n\t\t\t\t\t\t\t\t\t\t\t\t<SolaceToggle\n\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"show_all\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tisOn={selectedEnvironment.showAllResources}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleShowAllEnvs}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"show_all_envs\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={t({ id: \"id_show_all_environments\", message: \"Show resources in all environments\" })}\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText={t({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid: \"id_show_all_environments_help\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: \"Enable to manage resources across environments\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</ToggleWrapper>\n\t\t\t\t\t\t\t\t\t\t</SolaceEnvironmentSelectChip>\n\t\t\t\t\t\t\t\t\t) : undefined"
      },
      {
        "name": "borderTop",
        "type": "expression",
        "value": "selectedEnvironment\n\t\t\t\t\t\t\t\t\t\t? getEnvironmentColor(environmentOptions, selectedEnvironment.environmentId)\n\t\t\t\t\t\t\t\t\t\t: undefined"
      },
      {
        "name": "actions",
        "type": "expression",
        "value": "[\n\t\t\t\t\t\t\t\t\thasAdminMiAccess ? (\n\t\t\t\t\t\t\t\t\t\t<SolaceButton\n\t\t\t\t\t\t\t\t\t\t\tkey=\"createconnector\"\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\thistory.push(\"/micro-integrations/availableMicroIntegrations\");\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tdataQa={`solace-header-action-${getDataQaValue(en.connectors.labels.createConnectorFlow)}`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{en.connectors.labels.createConnectorFlow}\n\t\t\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<RoleIconWrapper resourceRole={\"viewer\"} withLabel />\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t].filter(Boolean)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/pages/connectors/EditConnectorV2.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "connectorDetails?.name ?? \"\""
      },
      {
        "name": "environment",
        "type": "expression",
        "value": "miEnvironment && (\n\t\t\t\t\t\t\t<SolaceEnvironmentChip\n\t\t\t\t\t\t\t\tbgColor={miEnvironment.bgColor}\n\t\t\t\t\t\t\t\tfgColor={miEnvironment.fgColor}\n\t\t\t\t\t\t\t\ticon={miEnvironment.icon}\n\t\t\t\t\t\t\t\tlabel={miEnvironment.label}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)"
      },
      {
        "name": "borderTop",
        "type": "expression",
        "value": "selectedEnvironment ? getEnvironmentColor(environmentOptions, selectedEnvironment.environmentId) : undefined"
      },
      {
        "name": "breadcrumbs",
        "type": "jsx",
        "value": "<SolaceBreadcrumb\n\t\t\t\t\t\t\tpaths={[\n\t\t\t\t\t\t\t\t{ title: en.connectors.connectorFlows, link: CONNECTOR },\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttitle: connectorDetails?.name ?? \"\",\n\t\t\t\t\t\t\t\t\tlink: \"editV2\",\n\t\t\t\t\t\t\t\t\tcurrent: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/pages/agents/Agents.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "en.agents.agents"
      },
      {
        "name": "environment",
        "type": "expression",
        "value": "selectedEnvironment ? (\n\t\t\t\t\t\t\t\t<SolaceEnvironmentSelectChip\n\t\t\t\t\t\t\t\t\tname=\"environment\"\n\t\t\t\t\t\t\t\t\tvalue={selectedEnvironment.environmentId}\n\t\t\t\t\t\t\t\t\tonChange={handleSetEnvironment}\n\t\t\t\t\t\t\t\t\toptions={environmentOptions}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ToggleWrapper>\n\t\t\t\t\t\t\t\t\t\t<SolaceToggle\n\t\t\t\t\t\t\t\t\t\t\tid=\"show_all\"\n\t\t\t\t\t\t\t\t\t\t\tisOn={selectedEnvironment.showAllResources}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleShowAllEnvs}\n\t\t\t\t\t\t\t\t\t\t\tname=\"show_all_envs\"\n\t\t\t\t\t\t\t\t\t\t\tlabel={t({ id: \"id_show_all_environments\", message: \"Show resources in all environments\" })}\n\t\t\t\t\t\t\t\t\t\t\thelperText={t({\n\t\t\t\t\t\t\t\t\t\t\t\tid: \"id_show_all_environments_help\",\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: \"Enable to manage resources across environments\"\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</ToggleWrapper>\n\t\t\t\t\t\t\t\t</SolaceEnvironmentSelectChip>\n\t\t\t\t\t\t\t) : undefined"
      },
      {
        "name": "borderTop",
        "type": "expression",
        "value": "selectedEnvironment\n\t\t\t\t\t\t\t\t? getEnvironmentColor(environmentOptions, selectedEnvironment.environmentId)\n\t\t\t\t\t\t\t\t: undefined"
      },
      {
        "name": "actions",
        "type": "expression",
        "value": "[\n\t\t\t\t\t\t\thasAdminMiAccess ? (\n\t\t\t\t\t\t\t\t<SolaceButton\n\t\t\t\t\t\t\t\t\tkey=\"createAgent\"\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{en.agents.buttons.createAgent}\n\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<RoleIconWrapper resourceRole={\"viewer\"} withLabel />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t].filter(Boolean)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/meshes/list/Meshes.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "t({ id: \"id_mesh_manager\", message: \"Mesh Manager\" })"
      },
      {
        "name": "subTitle",
        "type": "expression",
        "value": "t({ id: \"id_event_meshes\", message: \"Event Meshes\" })"
      },
      {
        "name": "release",
        "type": "expression",
        "value": "t({ id: \"id_beta\", message: \"BETA\" })"
      },
      {
        "name": "breadcrumbs",
        "type": "array",
        "value": "[{ title: t({ id: \"id_mesh_manager\", message: \"Mesh Manager\" }), link: \"/mc/meshes\", current: true }]"
      },
      {
        "name": "actions",
        "type": "expression",
        "value": "hasWriteAccess\n\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t<SolaceButton key=\"create_event_mesh\" variant=\"text\" onClick={handleCreateMesh}>\n\t\t\t\t\t\t\t\t\t\t<Trans id=\"id_create_event_mesh\">Create Event Mesh</Trans>\n\t\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t: undefined"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/ServiceDetails.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "t({ id: \"id_service_details\", message: \"Service Details\" })"
      },
      {
        "name": "subTitle",
        "type": "expression",
        "value": "service?.name ?? \"...\""
      },
      {
        "name": "environment",
        "type": "expression",
        "value": "environment ? <SolaceEnvironmentChip {...environment} /> : undefined"
      },
      {
        "name": "borderTop",
        "type": "expression",
        "value": "environment?.bgColor"
      },
      {
        "name": "breadcrumbs",
        "type": "array",
        "value": "[\n\t\t\t\t\t{ title: t({ id: \"id_cluster_manager\", message: \"Cluster Manager\" }), link: ROUTER_SERVICES },\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: t({ id: \"id_service_details\", message: \"Service Details\" }),\n\t\t\t\t\t\tlink: routeSetParams(ROUTER_SERVICES_DETAILS, { serviceId: service?.id as string, tab }),\n\t\t\t\t\t\tcurrent: true,\n\t\t\t\t\t\tprogress: hasOngoingOperation,\n\t\t\t\t\t\tprogressTooltip: t({ id: \"id_broker_progress\", message: \"The broker is busy with an update. Please wait.\" })\n\t\t\t\t\t}\n\t\t\t\t]"
      },
      {
        "name": "actionMenu",
        "type": "expression",
        "value": "service && (\n\t\t\t\t\t\t<ServiceMenu\n\t\t\t\t\t\t\tservice={service}\n\t\t\t\t\t\t\tview=\"details\"\n\t\t\t\t\t\t\tsetRenamingService={setRenamingService}\n\t\t\t\t\t\t\tsetDeletingService={setDeletingService}\n\t\t\t\t\t\t\tsetUserAccessService={setUserAccessService}\n\t\t\t\t\t\t\tmeshId={servicesInMeshes.get(serviceId)?.id}\n\t\t\t\t\t\t\thideOpenService\n\t\t\t\t\t\t/>\n\t\t\t\t\t)"
      },
      {
        "name": "actions",
        "type": "expression",
        "value": "service && [\n\t\t\t\t\t\t<SolaceButton\n\t\t\t\t\t\t\tkey=\"open-broker-manager\"\n\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\tdataQa=\"launchBrokerManager\"\n\t\t\t\t\t\t\tisDisabled={!allowBrokerRequests}\n\t\t\t\t\t\t\thref={(allowBrokerRequests && getBrokerWebUI()) || \"\"}\n\t\t\t\t\t\t\tonClick={openBrokerManager}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Trans id=\"id_open_broker_manager\">Open Broker Manager</Trans>\n\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t]"
      },
      {
        "name": "tabs",
        "type": "jsx",
        "value": "<SolaceTabs\n\t\t\t\t\t\tactiveTabValue={tab}\n\t\t\t\t\t\ttabs={[\n\t\t\t\t\t\t\t{ label: t({ id: \"id_status\", message: \"Status\" }), value: \"status\" },\n\t\t\t\t\t\t\t{ label: t({ id: \"id_connect\", message: \"Connect\" }), value: \"connect\", disabled: areTabsDisabled },\n\t\t\t\t\t\t\t{ label: t({ id: \"id_manage\", message: \"Manage\" }), value: \"manage\", disabled: areTabsDisabled },\n\t\t\t\t\t\t\t{ label: t({ id: \"id_monitoring\", message: \"Monitoring\" }), value: \"monitoring\", disabled: areTabsDisabled },\n\t\t\t\t\t\t\t{ label: t({ id: \"id_configuration\", message: \"Configuration\" }), value: \"configuration\", disabled: isInProgress },\n\t\t\t\t\t\t\t{ label: t({ id: \"id_tryme\", message: \"Try Me!\" }), value: \"tryme\", disabled: areTabsDisabled }\n\t\t\t\t\t\t]}\n\t\t\t\t\t\tonTabClick={(value) => {\n\t\t\t\t\t\t\tif (value === \"manage\") {\n\t\t\t\t\t\t\t\tif (missionControl?.manageUI) {\n\t\t\t\t\t\t\t\t\thistory.push(routeSetParams(ROUTER_SERVICES_DETAILS_MANAGE, { serviceId, category: \"security\" }));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\thistory.push(routeSetParams(ROUTER_SERVICES_DETAILS_MANAGE_LEGACY, { serviceId }));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\thistory.push(routeSetParams(ROUTER_SERVICES_DETAILS, { serviceId: service?.id as string, tab: value }));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t></SolaceTabs>"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/list/Services.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "t({ id: \"id_cluster_manager\", message: \"Cluster Manager\" })"
      },
      {
        "name": "subTitle",
        "type": "expression",
        "value": "t({ id: \"id_services\", message: \"Services\" })"
      },
      {
        "name": "environment",
        "type": "expression",
        "value": "selectedEnvironment ? (\n\t\t\t\t\t\t\t<SolaceEnvironmentSelectChip name=\"environment\" value={selectedEnvironment.environmentId} onChange={handleSetEnvironment} options={environmentOptions}>\n\t\t\t\t\t\t\t\t<ToggleWrapper>\n\t\t\t\t\t\t\t\t\t<SolaceToggle\n\t\t\t\t\t\t\t\t\t\tid=\"show_all\"\n\t\t\t\t\t\t\t\t\t\tisOn={selectedEnvironment.showAllResources}\n\t\t\t\t\t\t\t\t\t\tonChange={handleShowAllEnvs}\n\t\t\t\t\t\t\t\t\t\tname=\"show_all_envs\"\n\t\t\t\t\t\t\t\t\t\tlabel={t({ id: \"id_show_all_environments\", message: \"Show resources in all environments\" })}\n\t\t\t\t\t\t\t\t\t\thelperText={t({ id: \"id_show_all_environments_help\", message: \"Enable to manage resources across environments\" })}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ToggleWrapper>\n\t\t\t\t\t\t\t</SolaceEnvironmentSelectChip>\n\t\t\t\t\t\t) : undefined"
      },
      {
        "name": "borderTop",
        "type": "expression",
        "value": "selectedEnvironment ? getEnvironmentColor(environmentOptions, selectedEnvironment.environmentId) : undefined"
      },
      {
        "name": "breadcrumbs",
        "type": "array",
        "value": "[{ title: t({ id: \"id_cluster_manager\", message: \"Cluster Manager\" }), link: ROUTER_SERVICES, current: true }]"
      },
      {
        "name": "actions",
        "type": "expression",
        "value": "hasWriteAccess\n\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t<SolaceButton key=\"create_service\" variant=\"text\" dataQa=\"solace-header-action\" onClick={handleCreateService}>\n\t\t\t\t\t\t\t\t\t\t<Trans id=\"id_create_service\">Create Service</Trans>\n\t\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t: undefined"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/compare/CompareServices.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "t({ id: \"id_compare_services\", message: \"Compare Services\" })"
      },
      {
        "name": "release",
        "type": "expression",
        "value": "t({ id: \"id_beta\", message: \"BETA\" })"
      },
      {
        "name": "breadcrumbs",
        "type": "array",
        "value": "[\n\t\t\t\t\t{ title: t({ id: \"id_cluster_manager\", message: \"Cluster Manager\" }), link: ROUTER_SERVICES },\n\t\t\t\t\t{ title: t({ id: \"id_compare_services\", message: \"Compare Services\" }), link: ROUTER_SERVICES_COMPARE, current: true }\n\t\t\t\t]"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/CreateService.tsx",
    "props": [
      {
        "name": "title",
        "type": "variable",
        "value": "title"
      },
      {
        "name": "subTitle",
        "type": "variable",
        "value": "subTitle"
      },
      {
        "name": "environment",
        "type": "expression",
        "value": "environment ? <SolaceEnvironmentChip {...environment} /> : undefined"
      },
      {
        "name": "borderTop",
        "type": "expression",
        "value": "environment?.bgColor"
      },
      {
        "name": "breadcrumbs",
        "type": "array",
        "value": "[\n\t\t\t\t\t{ title: t({ id: \"id_cluster_manager\", message: \"Cluster Manager\" }), link: servicesPath },\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: title,\n\t\t\t\t\t\tlink: missionControl?.createUI ? ROUTER_SERVICES_CREATE : ROUTER_SERVICES_CREATE_LEGACY,\n\t\t\t\t\t\tcurrent: true\n\t\t\t\t\t}\n\t\t\t\t]"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/environments/components/EnvironmentsDialog.tsx",
    "props": [
      {
        "name": "title",
        "type": "string",
        "value": "Page Title"
      },
      {
        "name": "environment",
        "type": "jsx",
        "value": "<SolaceEnvironmentChip\n\t\t\t\t\t\t\t\t\t\t\tlabel={dialogState.name || \"Environment Name\"}\n\t\t\t\t\t\t\t\t\t\t\tfgColor={fgColor}\n\t\t\t\t\t\t\t\t\t\t\tbgColor={bgColor}\n\t\t\t\t\t\t\t\t\t\t\ticon={Icons16[dialogState.icon as SolaceEnvironmentIcons]}\n\t\t\t\t\t\t\t\t\t\t/>"
      },
      {
        "name": "borderTop",
        "type": "variable",
        "value": "bgColor"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/userSettingsShell/UserSettingsShell.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "en.accountDetails.userSettings.settings"
      },
      {
        "name": "tabs",
        "type": "jsx",
        "value": "<SolaceTabs\n\t\t\t\t\t\tactiveTabValue={activeTab}\n\t\t\t\t\t\tvariant=\"scrollable\"\n\t\t\t\t\t\ttabs={TABS}\n\t\t\t\t\t\tsize=\"md\"\n\t\t\t\t\t\tonTabClick={handleTabClick}\n\t\t\t\t\t></SolaceTabs>"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/infra/src/pages/clusters/clusterDetails/ClusterDetails.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "\"Cluster\""
      },
      {
        "name": "subTitle",
        "type": "expression",
        "value": "isPending ? \"...\" : cluster?.name"
      },
      {
        "name": "breadcrumbs",
        "type": "array",
        "value": "[\n                    { title: \"Clusters\", link: \"/clusters\" },\n                    { title: \"Cluster Details\", link: `/clusters/${clusterId}/status`, current: true, progress: isPending },\n                ]"
      },
      {
        "name": "actionMenu",
        "type": "expression",
        "value": "!!actionMenuItems && (\n                        <SolaceMenu\n                            items={actionMenuItems()}\n                            buttonProps={{\n                                variant: \"icon\",\n                                title: \"Actions\",\n                                dataQa: \"clusterDetailsActionMenuButton\",\n                                children: <MoreHorizOutlinedIcon />,\n                            }}\n                            key=\"cloudProviderLink\" >\n                        </SolaceMenu>\n                    )"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/plans/components/PlansHeader.tsx",
    "props": [
      {
        "name": "title",
        "type": "string",
        "value": "Manage Upgrade Plans"
      },
      {
        "name": "breadcrumbs",
        "type": "variable",
        "value": "breadcrumbs"
      },
      {
        "name": "actions",
        "type": "array",
        "value": "[\n\t\t\t\t<SolaceButton key=\"create-plan\" variant=\"text\" onClick={() => handleModal()}>\n\t\t\t\t\tCreate Plan\n\t\t\t\t</SolaceButton>\n\t\t\t]"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/run/components/RunHeader.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "`Upgrade Run${runId ? `: ${runId}` : \"\"}`"
      },
      {
        "name": "breadcrumbs",
        "type": "variable",
        "value": "breadcrumbs"
      },
      {
        "name": "actions",
        "type": "array",
        "value": "[\n\t\t\t\t\t<div key=\"run-controls\" style={{ display: \"flex\", gap: \"10px\" }}>\n\t\t\t\t\t\t{renderButton(\"Resume\", () => handleAction(resumeUpgradeRun), \"text\", status === \"PAUSED\")}\n\t\t\t\t\t\t{renderButton(\"Pause\", () => openModal(\"pause\"), \"text\", status !== \"PAUSED\")}\n\t\t\t\t\t\t{renderButton(\"Cancel\", () => openModal(\"cancel\"), \"outline\", true)}\n\t\t\t\t\t</div>\n\t\t\t\t]"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/runs/components/RunsHeader.tsx",
    "props": [
      {
        "name": "title",
        "type": "string",
        "value": "Upgrades"
      },
      {
        "name": "breadcrumbs",
        "type": "variable",
        "value": "breadcrumbs"
      },
      {
        "name": "actions",
        "type": "array",
        "value": "[\n\t\t\t\t<SolaceButton key=\"manage-upgrade-button\" onClick={() => handlePlanRoute()} variant=\"text\" dataQa=\"create\">\n\t\t\t\t\tManage Upgrade Plans\n\t\t\t\t</SolaceButton>,\n\t\t\t\t<SystemControls key=\"system-controls\" />\n\t\t\t]"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/integrationDashboard/IntegrationDashboard.tsx",
    "props": [
      {
        "name": "title",
        "type": "expression",
        "value": "integrationStrings.mainPage.pageTitle"
      },
      {
        "name": "breadcrumbs",
        "type": "jsx",
        "value": "<SolaceBreadcrumb paths={breadcrumbs} />"
      },
      {
        "name": "tabs",
        "type": "jsx",
        "value": "<SolaceTabs tabs={tabs} activeTabValue={activeTab} onTabClick={handleTabChange} />"
      }
    ]
  }
]