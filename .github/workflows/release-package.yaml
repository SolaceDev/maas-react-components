name: Publish package to GitHub Packages
on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write
  id-token: write
  pull-requests: write
  actions: read
  statuses: write
  checks: write
  repository-projects: read
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"
          registry-url: https://npm.pkg.github.com/
          # Defaults to the user or organization that owns the workflow file
          scope: "@SolaceDev"
      - run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PACKAGES_ADMIN_TOKEN }}" > .npmrc
          echo "@SolaceDev:registry=https://npm.pkg.github.com/" >> .npmrc
          echo "legacy-peer-deps=true" >> .npmrc
          npm ci
          npm publish
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGES_ADMIN_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_ADMIN_TOKEN }}

  update-release-manifest:
    name: "Update Release Manifest"
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout SolaceDev/maas-build-actions
        uses: actions/checkout@v4
        with:
          repository: SolaceDev/maas-build-actions
          ref: refs/heads/master
          path: maas-build-actions
          token: ${{ secrets.PACKAGES_ADMIN_TOKEN }}

      - name: Get Version
        id: get_version
        run: |
          echo "version=$(node -e "console.log(require('./package.json').version)")" >> $GITHUB_OUTPUT

      - name: Update DynamoDb Release Manifest
        uses: ./maas-build-actions/.github/actions/update-dynamodb-release-manifest
        with:
          sha: "${{ github.sha }}"
          version: "${{ steps.get_version.outputs.version }}"
          squad: "ui"
          repository: "${{ github.event.repository.name }}"
          release_tag: "dev"
