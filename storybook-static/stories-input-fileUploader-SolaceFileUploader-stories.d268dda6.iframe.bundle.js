"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[4572],{"./src/stories/input/fileUploader/SolaceFileUploader.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EditMode:()=>EditMode,Error:()=>Error,MaxSize:()=>MaxSize,MaxThreeFiles:()=>MaxThreeFiles,PDFOnly:()=>PDFOnly,ReadOnlyMode:()=>ReadOnlyMode,Simple:()=>Simple,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../dist/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Input/File Uploader",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.SolaceFileUploader,parameters:{docs:{description:{component:"Code component name: SolaceFileUploader"}}},argTypes:{maxFiles:{control:{type:"number"},description:"Maximum number of files that can be uploaded. Use this to limit file selection and prevent users from uploading too many files at once.",table:{type:{summary:"number | undefined"},defaultValue:{summary:"1"}}},maxSize:{control:{type:"number"},description:"Maximum file size in bytes. Use this to prevent large file uploads that could impact performance or exceed server limits. For example, 250000 for 250KB limit.",table:{type:{summary:"number | undefined"},defaultValue:{summary:"undefined"}}},accept:{control:{type:"object"},description:'File type restrictions using MIME types and extensions. Format: {"mime/type": [".ext1", ".ext2"]}. For example, {"application/pdf": [".pdf"]} for PDF only.',table:{type:{summary:"Record<string, string[]> | undefined"},defaultValue:{summary:"undefined"}}},fileNames:{control:{type:"object"},description:"Array of existing file names to display. Use this to show previously uploaded files or default files in the uploader component.",table:{type:{summary:"string[] | undefined"},defaultValue:{summary:"[]"}}},readOnly:{control:{type:"boolean"},description:"If true, displays the file uploader in read-only mode. Users can see uploaded files but cannot add or remove files. Use this for displaying file information without editing capability.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},errorText:{control:{type:"text"},description:"Error message to display below the file uploader. Use this to show validation errors, upload failures, or file requirement issues.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}},onFileChange:{description:"Callback function fired when files are added or removed. Receives an array of File objects. Essential for handling file upload state and processing uploaded files."},dataQa:{control:{type:"text"},description:"Data attribute for QA testing. Use this to identify the file uploader during automated testing.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}},dataTags:{control:{type:"text"},description:"Data attribute for additional tagging. Use this for analytics, tracking, or additional metadata.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}}}},Simple={args:{}},MaxThreeFiles={args:{maxFiles:3}},Error={args:{errorText:"This is an error message"}},ReadOnlyMode={args:{readOnly:!0,fileNames:["file1.txt","file2.txt"]}},EditMode={args:{onFileChange:files=>{window.alert(`Files changed: ${files.length}`)},fileNames:["file1.txt","file2.txt"]}},MaxSize={args:{maxSize:25e4}},PDFOnly={args:{accept:{"application/pdf":[".pdf"]}}};Simple.parameters={...Simple.parameters,docs:{...Simple.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...Simple.parameters?.docs?.source}}},MaxThreeFiles.parameters={...MaxThreeFiles.parameters,docs:{...MaxThreeFiles.parameters?.docs,source:{originalSource:"{\n  args: {\n    maxFiles: 3\n  }\n}",...MaxThreeFiles.parameters?.docs?.source}}},Error.parameters={...Error.parameters,docs:{...Error.parameters?.docs,source:{originalSource:'{\n  args: {\n    errorText: "This is an error message"\n  }\n}',...Error.parameters?.docs?.source}}},ReadOnlyMode.parameters={...ReadOnlyMode.parameters,docs:{...ReadOnlyMode.parameters?.docs,source:{originalSource:'{\n  args: {\n    readOnly: true,\n    fileNames: ["file1.txt", "file2.txt"]\n  }\n}',...ReadOnlyMode.parameters?.docs?.source}}},EditMode.parameters={...EditMode.parameters,docs:{...EditMode.parameters?.docs,source:{originalSource:'{\n  args: {\n    onFileChange: (files: File[]) => {\n      window.alert(`Files changed: ${files.length}`);\n    },\n    fileNames: ["file1.txt", "file2.txt"]\n  }\n}',...EditMode.parameters?.docs?.source}}},MaxSize.parameters={...MaxSize.parameters,docs:{...MaxSize.parameters?.docs,source:{originalSource:"{\n  args: {\n    maxSize: 250000\n  }\n}",...MaxSize.parameters?.docs?.source}}},PDFOnly.parameters={...PDFOnly.parameters,docs:{...PDFOnly.parameters?.docs,source:{originalSource:'{\n  args: {\n    accept: {\n      "application/pdf": [".pdf"]\n    }\n  }\n}',...PDFOnly.parameters?.docs?.source}}};const __namedExportsOrder=["Simple","MaxThreeFiles","Error","ReadOnlyMode","EditMode","MaxSize","PDFOnly"]}}]);