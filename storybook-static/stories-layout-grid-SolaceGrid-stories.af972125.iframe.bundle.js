"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[1351],{"./src/stories/layout/grid/SolaceGrid.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoLayoutGrid:()=>AutoLayoutGrid,TextGrid:()=>TextGrid,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../dist/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceGrid.displayName="SolaceGrid",_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.Paper.displayName="Paper";const __WEBPACK_DEFAULT_EXPORT__={title:"Layout/Grid",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceGrid,args:{id:"",hasWarnings:!1,spacing:2,container:!1,item:!1,columns:12,direction:"row",xs:void 0,sm:void 0,md:void 0,lg:void 0,xl:void 0,justifyContent:void 0,alignItems:void 0,wrap:"wrap",sx:void 0,children:void 0},argTypes:{id:{control:{type:"text"},description:"Unique identifier for the grid component. Used for accessibility and programmatic access.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}},hasWarnings:{control:{type:"boolean"},description:"If true, displays the grid in a warning state with amber styling. Use this to indicate potential issues or cautionary information about the grid content.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},spacing:{control:{type:"range",min:1,max:10,step:1},description:"Defines the space between the type item components. It can only be used on a type container component. Use this to control the spacing between grid items consistently across your layout.",table:{type:{summary:"Array<number| string>| number| object|string | undefined"},defaultValue:{summary:"2"}}},container:{control:{type:"boolean"},description:"If true, the component will have the flex container behavior. You should be wrapping items with a container. Use this to create a grid container that holds grid items.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},item:{control:{type:"boolean"},description:"If true, the component will have the flex item behavior. You should be wrapping items with a container. Use this for grid items that are contained within a grid container.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},columns:{control:{type:"text"},description:"The number of columns in the grid system. Controls how many columns are available for item placement. The default grid system uses 12 columns for maximum flexibility.",table:{type:{summary:"Array<number>| number| object | undefined"},defaultValue:{summary:"12"}}},direction:{options:["column-reverse","column","row-reverse","row"],control:{type:"select"},description:"Defines the flex-direction style property. It is applied for all screen sizes. Use this to control whether grid items flow in rows or columns and their direction.",table:{type:{summary:"'column-reverse'| 'column'| 'row-reverse'| 'row'| Array<'column-reverse'| 'column'| 'row-reverse'| 'row'>| object | undefined"},defaultValue:{summary:"row"}}},xs:{control:{type:"number"},description:"Number of columns the grid item should span on extra-small screens (0px and up). Use this to control responsive behavior on mobile devices.",table:{type:{summary:"number | 'auto' | boolean | undefined"},defaultValue:{summary:"undefined"}}},sm:{control:{type:"number"},description:"Number of columns the grid item should span on small screens (600px and up). Use this to control responsive behavior on tablets.",table:{type:{summary:"number | 'auto' | boolean | undefined"},defaultValue:{summary:"undefined"}}},md:{control:{type:"number"},description:"Number of columns the grid item should span on medium screens (900px and up). Use this to control responsive behavior on desktop displays.",table:{type:{summary:"number | 'auto' | boolean | undefined"},defaultValue:{summary:"undefined"}}},lg:{control:{type:"number"},description:"Number of columns the grid item should span on large screens (1200px and up). Use this to control responsive behavior on large desktop displays.",table:{type:{summary:"number | 'auto' | boolean | undefined"},defaultValue:{summary:"undefined"}}},xl:{control:{type:"number"},description:"Number of columns the grid item should span on extra-large screens (1536px and up). Use this to control responsive behavior on very large displays.",table:{type:{summary:"number | 'auto' | boolean | undefined"},defaultValue:{summary:"undefined"}}},justifyContent:{options:["flex-start","center","flex-end","space-between","space-around","space-evenly"],control:{type:"select"},description:"Defines how grid items are aligned along the main axis. Use this to control horizontal alignment of items within the container.",table:{type:{summary:"'flex-start' | 'center' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly' | undefined"},defaultValue:{summary:"undefined"}}},alignItems:{options:["flex-start","center","flex-end","stretch","baseline"],control:{type:"select"},description:"Defines how grid items are aligned along the cross axis. Use this to control vertical alignment of items within the container.",table:{type:{summary:"'flex-start' | 'center' | 'flex-end' | 'stretch' | 'baseline' | undefined"},defaultValue:{summary:"undefined"}}},wrap:{options:["nowrap","wrap","wrap-reverse"],control:{type:"select"},description:"Defines whether grid items should wrap to new lines when they exceed the container width. Use 'wrap' for responsive layouts that adapt to different screen sizes.",table:{type:{summary:"'nowrap' | 'wrap' | 'wrap-reverse' | undefined"},defaultValue:{summary:"wrap"}}},sx:{control:{type:"object"},description:"System prop for custom styling using the theme. Use this to apply custom styles, spacing, colors, or other theme-aware properties to the grid component.",table:{type:{summary:"object | undefined"},defaultValue:{summary:"undefined"}}},children:{control:{type:"object"},description:"The content of the grid component. Should contain SolaceGrid items when used as a container. Use this to nest grid items or other components within the grid.",table:{type:{summary:"React.ReactNode | undefined"},defaultValue:{summary:"undefined"}}}},parameters:{}},Template=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceGrid,_extends({container:!0},args)),defaultStyle={backgroundColor:"lightgrey",padding:1,textAlign:"center"},AutoLayoutGrid={render:Template,args:{children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceGrid,{item:!0,xs:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.Paper,{sx:defaultStyle},"xs")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceGrid,{item:!0,xs:6},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.Paper,{sx:defaultStyle},"xs=6")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceGrid,{item:!0,xs:!0},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.Paper,{sx:defaultStyle},"xs")))}},TextGrid={render:Template,args:{children:react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceGrid,{item:!0},"Item 1"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceGrid,{item:!0},"Item 2"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceGrid,{item:!0},"Item 3"))}};AutoLayoutGrid.parameters={...AutoLayoutGrid.parameters,docs:{...AutoLayoutGrid.parameters?.docs,source:{originalSource:"{\n  render: Template,\n  args: {\n    children: defaultContent\n  }\n}",...AutoLayoutGrid.parameters?.docs?.source}}},TextGrid.parameters={...TextGrid.parameters,docs:{...TextGrid.parameters?.docs,source:{originalSource:'{\n  render: Template,\n  args: {\n    children: <>\n                <SolaceGrid item>{"Item 1"}</SolaceGrid>\n                <SolaceGrid item>{"Item 2"}</SolaceGrid>\n                <SolaceGrid item>{"Item 3"}</SolaceGrid>\n            </>\n  }\n}',...TextGrid.parameters?.docs?.source}}};const __namedExportsOrder=["AutoLayoutGrid","TextGrid"]}}]);