"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[8563],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/stories/input/textarea/SolaceTextArea.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoFocus:()=>AutoFocus,Controlled:()=>Controlled,CustomWidth:()=>CustomWidth,DefaultTextfield:()=>DefaultTextfield,Disabled:()=>Disabled,HelperText:()=>HelperText,InlineLabeleFormat:()=>InlineLabeleFormat,PlaceholderText:()=>PlaceholderText,ReadOnly:()=>ReadOnly,Required:()=>Required,ResizableBoth:()=>ResizableBoth,ResizableHorizontal:()=>ResizableHorizontal,ResizableVertically:()=>ResizableVertically,StackedLabeleFormat:()=>StackedLabeleFormat,WithErrors:()=>WithErrors,WithOnBlurOnFocus:()=>WithOnBlurOnFocus,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../dist/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTextArea.displayName="SolaceTextArea";const __WEBPACK_DEFAULT_EXPORT__={title:"Input/Textfield/Text Area",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTextArea,args:{id:"",name:"",title:"",label:"",placeholder:"",helperText:"",value:"",hasErrors:!1,hasWarnings:!1,autoFocus:!1,inlineLabel:!1,required:!1,disabled:!1,readOnly:!1,type:"text",rows:4,maxRows:void 0,minRows:void 0,size:void 0,width:void 0,resizable:"both",dataQa:"",dataTags:""},parameters:{design:{type:"figma",url:"https://www.figma.com/file/P5XeF1KE6z2MKyzlEyInrH/Core-Component-Specs-(Copy)?node-id=430%3A548"},docs:{description:{component:"Text area component for reuse in all Solace based applications. Code component name: SolaceTextArea"}}},argTypes:{label:{control:{type:"text"},description:"The label text displayed above or inline with the text area. Use this to clearly describe what information the user should enter. Labels should be concise and descriptive.",table:{defaultValue:{summary:""}}},helperText:{control:{type:"text"},description:"Additional text displayed below the text area to provide guidance or error messages. Use this to give users context about expected input format or validation requirements.",table:{defaultValue:{summary:""}}},hasErrors:{control:{type:"boolean"},description:"If true, displays the text area in an error state with red styling. Use this to indicate validation failures or input errors. Often paired with error text in helperText.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},hasWarnings:{control:{type:"boolean"},description:"If true, displays the text area in a warning state with amber styling. Use this to indicate potential issues or cautionary information about the textarea content.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},autoFocus:{control:{type:"boolean"},description:"If true, automatically focuses the text area when the component mounts. Use sparingly as it can disrupt user navigation and accessibility. Best for primary input areas on forms.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},inlineLabel:{control:{type:"boolean"},description:"If true, displays the label inline with the text area rather than above it. Use this for compact layouts or when you need to save vertical space.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},required:{control:{type:"boolean"},description:"If true, marks the field as required and displays an asterisk (*) next to the label. Use this to indicate mandatory fields in forms and ensure proper validation.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},disabled:{control:{type:"boolean"},description:"If true, disables the text area preventing user interaction. Use this when the field is not applicable based on current form state or user permissions.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},readOnly:{control:{type:"boolean"},description:"If true, makes the text area read-only. Users can see and select the text but cannot edit it. Use this for displaying computed values or information that shouldn't be modified.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},value:{control:{type:"text"},description:"The current value of the text area. Use this for controlled components where you manage the field state externally. Should be paired with an onChange handler.",table:{defaultValue:{summary:""}}},placeholder:{control:{type:"text"},description:"Placeholder text displayed when the field is empty. Use this to provide examples of expected input format or additional guidance. Should not replace proper labels.",table:{defaultValue:{summary:""}}},type:{options:["text","number","password","email","url"],control:{type:"select"},description:"The input type which affects validation and browser auto-completion. Choose the most appropriate type for your data to improve user experience.",table:{type:{summary:'"text" | "number" | "password" | "email" | "url"'},defaultValue:{summary:'"text"'}}},rows:{control:{type:"number"},description:"The number of visible text lines for the text area. Use this to control the initial height of the text area. Users can still resize if resizable is enabled.",table:{type:{summary:"number"},defaultValue:{summary:"4"}}},maxRows:{control:{type:"number"},description:"Maximum number of rows to display before scrolling. Use this with multiline text areas to limit the maximum height while allowing content expansion.",table:{type:{summary:"number"},defaultValue:{summary:"undefined"}}},minRows:{control:{type:"number"},description:"Minimum number of rows to display. Use this to ensure the text area maintains a minimum height even when empty or with little content.",table:{type:{summary:"number"},defaultValue:{summary:"undefined"}}},size:{control:{type:"number"},description:"The size attribute for the text area, affecting the visible character width. Use this to hint at the expected input length, but don't rely on it for validation.",table:{type:{summary:"number"},defaultValue:{summary:"undefined"}}},width:{control:{type:"text"},description:"The width of the text area. Can be a number (pixels), percentage, or CSS width value. Use this to control the field width within your layout constraints.",table:{defaultValue:{summary:"undefined"}}},resizable:{options:["both","horizontal","vertical","none"],control:{type:"select"},description:"Controls whether and how the text area can be resized by the user. Use 'both' for maximum flexibility, 'vertical' for content that expands downward, or 'none' for fixed-size areas.",table:{type:{summary:"'both' | 'horizontal' | 'vertical' | 'none'"},defaultValue:{summary:"'both'"}}},name:{control:{type:"text"},description:"The name attribute for the text area, used for form submission and accessibility. Essential for proper form handling and assistive technology support.",table:{defaultValue:{summary:""}}},id:{control:{type:"text"},description:"Unique identifier for the textarea component. Used for accessibility and programmatic access.",table:{defaultValue:{summary:""}}},title:{control:{type:"text"},description:"The title attribute for the text area, displayed as a tooltip on hover. Use this for additional context or instructions that don't fit in the label or helper text.",table:{defaultValue:{summary:""}}},onChange:{description:"Callback function fired when the text area value changes. Receives an event object with the new value. Essential for controlled components and form state management."},onBlur:{description:"Callback function fired when the text area loses focus. Use this for validation, formatting, or other actions that should occur when the user finishes editing."},onKeyDown:{description:"Callback function fired when a key is pressed down in the text area. Use this for custom keyboard shortcuts, input validation, or navigation controls."},onKeyUp:{description:"Callback function fired when a key is released in the text area. Use this for delayed validation, auto-save functionality, or character counting."},onFocus:{description:"Callback function fired when the text area gains focus. Use this for tracking user interaction, showing additional UI elements, or preparing the field for input."},dataQa:{control:{type:"text"},description:"Data attribute for QA testing. Use this to identify the text area during automated testing.",table:{defaultValue:{summary:""}}},dataTags:{control:{type:"text"},description:"Data attribute for additional tagging. Use this for analytics, tracking, or additional metadata.",table:{defaultValue:{summary:""}}}}},DEMO_TITLE="Demo Text Field",DefaultTextfield={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),title:DEMO_TITLE,id:"demoTextFieldId",name:"demoTextField"}},CustomWidth={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),title:DEMO_TITLE,id:"demoTextFieldId",name:"demoTextField",width:"40%"}},StackedLabeleFormat={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),title:DEMO_TITLE,name:"demoTextField",label:"Some Label"}},InlineLabeleFormat={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("text-changed"),name:"demoTextField",title:DEMO_TITLE,label:"Some Label",inlineLabel:!0}},PlaceholderText={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:"Some Label",placeholder:"Some placeholder text"}},HelperText={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:"Some Label",helperText:"Some helper text"}},WithErrors={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:"Some Label",helperText:"The text you entered was invalid",hasErrors:!0}},AutoFocus={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:"Some Label",autoFocus:!0}},WithOnBlurOnFocus={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),onBlur:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("blur"),onFocus:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("focus"),title:DEMO_TITLE,id:"demoTextFieldId",name:"demoTextField"}},Required={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:"Some Label",required:!0}},Disabled={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:"Some Label",value:"Some value",disabled:!0}},ReadOnly={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:"Some Label",value:"Some value",readOnly:!0}},Controlled={render:_ref=>{let{value:initialValue,name,...args}=_ref;const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialValue);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTextArea,_extends({value,name,onChange:e=>{setValue(e.value)}},args))},args:{name:"controlledTextArea",label:"Controlled Text Area",value:"Initial value",helperText:"The value of the text area is controlled by the change handler in the story."}},ResizableBoth={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),title:DEMO_TITLE,id:"demoTextFieldId",name:"demoTextField",width:"40%",resizable:"both"}},ResizableVertically={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),title:DEMO_TITLE,id:"demoTextFieldId",name:"demoTextField",width:"40%",resizable:"vertical"}},ResizableHorizontal={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),title:DEMO_TITLE,id:"demoTextFieldId",name:"demoTextField",width:"40%",resizable:"horizontal"}};DefaultTextfield.parameters={...DefaultTextfield.parameters,docs:{...DefaultTextfield.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: DEMO_TITLE,\n    id: "demoTextFieldId",\n    name: "demoTextField"\n  }\n}',...DefaultTextfield.parameters?.docs?.source}}},CustomWidth.parameters={...CustomWidth.parameters,docs:{...CustomWidth.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: DEMO_TITLE,\n    id: "demoTextFieldId",\n    name: "demoTextField",\n    width: "40%"\n  }\n}',...CustomWidth.parameters?.docs?.source}}},StackedLabeleFormat.parameters={...StackedLabeleFormat.parameters,docs:{...StackedLabeleFormat.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: DEMO_TITLE,\n    name: "demoTextField",\n    label: DEMO_LABEL\n  }\n}',...StackedLabeleFormat.parameters?.docs?.source}}},InlineLabeleFormat.parameters={...InlineLabeleFormat.parameters,docs:{...InlineLabeleFormat.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("text-changed"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    inlineLabel: true\n  }\n}',...InlineLabeleFormat.parameters?.docs?.source}}},PlaceholderText.parameters={...PlaceholderText.parameters,docs:{...PlaceholderText.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    placeholder: "Some placeholder text"\n  }\n}',...PlaceholderText.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    helperText: "Some helper text"\n  }\n}',...HelperText.parameters?.docs?.source}}},WithErrors.parameters={...WithErrors.parameters,docs:{...WithErrors.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    helperText: "The text you entered was invalid",\n    hasErrors: true\n  }\n}',...WithErrors.parameters?.docs?.source}}},AutoFocus.parameters={...AutoFocus.parameters,docs:{...AutoFocus.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    autoFocus: true\n  }\n}',...AutoFocus.parameters?.docs?.source}}},WithOnBlurOnFocus.parameters={...WithOnBlurOnFocus.parameters,docs:{...WithOnBlurOnFocus.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    onBlur: action("blur"),\n    onFocus: action("focus"),\n    title: DEMO_TITLE,\n    id: "demoTextFieldId",\n    name: "demoTextField"\n  }\n}',...WithOnBlurOnFocus.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    required: true\n  }\n}',...Required.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    value: "Some value",\n    disabled: true\n  }\n}',...Disabled.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    value: "Some value",\n    readOnly: true\n  }\n}',...ReadOnly.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:'{\n  render: ControlledComponent,\n  args: {\n    name: "controlledTextArea",\n    label: "Controlled Text Area",\n    value: "Initial value",\n    helperText: "The value of the text area is controlled by the change handler in the story."\n  }\n}',...Controlled.parameters?.docs?.source}}},ResizableBoth.parameters={...ResizableBoth.parameters,docs:{...ResizableBoth.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: DEMO_TITLE,\n    id: "demoTextFieldId",\n    name: "demoTextField",\n    width: "40%",\n    resizable: "both"\n  }\n}',...ResizableBoth.parameters?.docs?.source}}},ResizableVertically.parameters={...ResizableVertically.parameters,docs:{...ResizableVertically.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: DEMO_TITLE,\n    id: "demoTextFieldId",\n    name: "demoTextField",\n    width: "40%",\n    resizable: "vertical"\n  }\n}',...ResizableVertically.parameters?.docs?.source}}},ResizableHorizontal.parameters={...ResizableHorizontal.parameters,docs:{...ResizableHorizontal.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: DEMO_TITLE,\n    id: "demoTextFieldId",\n    name: "demoTextField",\n    width: "40%",\n    resizable: "horizontal"\n  }\n}',...ResizableHorizontal.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultTextfield","CustomWidth","StackedLabeleFormat","InlineLabeleFormat","PlaceholderText","HelperText","WithErrors","AutoFocus","WithOnBlurOnFocus","Required","Disabled","ReadOnly","Controlled","ResizableBoth","ResizableVertically","ResizableHorizontal"]}}]);