{"keyMap":{"filePath":"a","name":"b","props":"c","type":"d","value":"e"},"data":[{"a":"https://github.com/SolaceDev/maas-ui/blob/develop/micro-frontends/intg/src/components/connectors/ConnectorSidePanel.tsx","c":[{"b":"summary","d":"expression","e":"connectorTypeDetails\n\t\t\t\t\t\t? featureType === FeatureType.microIntegration\n\t\t\t\t\t\t\t? connectorTypeDetails.name\n\t\t\t\t\t\t\t: `${connectorTypeDetails.name} and Solace Destination`\n\t\t\t\t\t\t: \"\""},{"b":"border","d":"boolean","e":"false"},{"b":"details","d":"jsx","e":"<SolaceStack>{renderVendorConfigurationDetails()}</SolaceStack>"},{"b":"expanded","d":"variable","e":"showSourceDetails"},{"b":"onChange","d":"function","e":"() => setShowSourceDetails(!showSourceDetails)"}]},{"a":"https://github.com/SolaceDev/maas-ui/blob/develop/micro-frontends/intg/src/components/connectors/ConnectorSidePanel.tsx","c":[{"b":"summary","d":"expression","e":"!isSap\n\t\t\t\t\t\t? featureType === FeatureType.microIntegration\n\t\t\t\t\t\t\t? \"Solace\"\n\t\t\t\t\t\t\t: \"Solace Source Connection\"\n\t\t\t\t\t\t: \"Advanced Event Mesh\""},{"b":"border","d":"boolean","e":"false"},{"b":"details","d":"jsx","e":"<SolaceStack>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<SolaceLabel id={\"connector_sidepanel_eventBrokerService\"}>\n\t\t\t\t\t\t\t\t{en.connectors.labels.eventBrokerService}\n\t\t\t\t\t\t\t</SolaceLabel>\n\t\t\t\t\t\t\t{serviceDetails?.name ? (\n\t\t\t\t\t\t\t\t(featureType === FeatureType.microIntegration ? hasAdminMiAccess : hasAdminAccess) ? (\n\t\t\t\t\t\t\t\t\t<SolaceButton variant=\"link\" href={`/services/${serviceDetails?.id}`}>\n\t\t\t\t\t\t\t\t\t\t{serviceDetails.name}\n\t\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<SolaceTypography>{serviceDetails.name}</SolaceTypography>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<SolaceTypography>{\"-\"}</SolaceTypography>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<SolaceLabel id={\"connector_sidepanel_bindingDestination\"}>\n\t\t\t\t\t\t\t\t{en.connectors.labels.bindingDestination}\n\t\t\t\t\t\t\t</SolaceLabel>\n\t\t\t\t\t\t\t<SolaceTypography>{getConnectorSummaryValue(solaceDestination)}</SolaceTypography>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</SolaceStack>"},{"b":"expanded","d":"variable","e":"showTargetDetails"},{"b":"onChange","d":"function","e":"() => setShowTargetDetails(!showTargetDetails)"}]},{"a":"https://github.com/SolaceDev/maas-ui/blob/develop/micro-frontends/intg/src/components/connectors/authentication/OAuthDetails.tsx","c":[{"b":"summary","d":"expression","e":"en.connectors.labels.advancedAuthenticationProperties"},{"b":"dataQa","d":"string","e":"advancedAuthenticationPropsAccordion"},{"b":"border","d":"boolean","e":"false"},{"b":"expanded","d":"variable","e":"expanded"},{"b":"onChange","d":"function","e":"() => setExpanded(!expanded)"},{"b":"details","d":"jsx","e":"<SolaceStack>\n\t\t\t\t\t\t<SolaceTextField\n\t\t\t\t\t\t\tname=\"scopes\"\n\t\t\t\t\t\t\tvalue={readOnly ? getConnectorSummaryValue(oauthValues.scopes) : oauthValues.scopes}\n\t\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\t\tlabel={en.connectors.labels.scopes}\n\t\t\t\t\t\t\tdataQa=\"scopesTextField\"\n\t\t\t\t\t\t\tonChange={({ value: scopes }) => {\n\t\t\t\t\t\t\t\tsetOauthValues({\n\t\t\t\t\t\t\t\t\t...oauthValues,\n\t\t\t\t\t\t\t\t\tscopes: scopes\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SolaceTextField\n\t\t\t\t\t\t\tname=\"clientName\"\n\t\t\t\t\t\t\tvalue={readOnly ? getConnectorSummaryValue(oauthValues.clientName) : oauthValues.clientName}\n\t\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\t\tlabel={en.connectors.labels.clientName}\n\t\t\t\t\t\t\tdataQa=\"clientNameTextField\"\n\t\t\t\t\t\t\tonChange={({ value: clientName }) => {\n\t\t\t\t\t\t\t\tsetOauthValues({\n\t\t\t\t\t\t\t\t\t...oauthValues,\n\t\t\t\t\t\t\t\t\tclientName: clientName\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</SolaceStack>"}]},{"a":"https://github.com/SolaceDev/maas-ui/blob/develop/micro-frontends/intg/src/components/connectors/authentication/ClientCertAuthenticationDetails.tsx","c":[{"b":"summary","d":"expression","e":"en.connectors.labels.advancedAuthenticationProperties"},{"b":"dataQa","d":"string","e":"advancedAuthenticationPropsAccordion"},{"b":"border","d":"boolean","e":"false"},{"b":"expanded","d":"variable","e":"expanded"},{"b":"onChange","d":"function","e":"() => setExpanded(!expanded)"},{"b":"details","d":"jsx","e":"<SolaceStack>\n\t\t\t\t\t\t<SolaceSelect\n\t\t\t\t\t\t\tdataQa=\"sslKeyStoreFormatTypeField\"\n\t\t\t\t\t\t\tid=\"sslKeyStoreFormatType\"\n\t\t\t\t\t\t\tlabel={en.connectors.labels.sslKeyStoreFormat}\n\t\t\t\t\t\t\tname={\"sslKeyStoreFormat\"}\n\t\t\t\t\t\t\tonChange={({ value: sslKeyStoreFormat }) => {\n\t\t\t\t\t\t\t\tsetClientCertValues({\n\t\t\t\t\t\t\t\t\t...clientCertValues,\n\t\t\t\t\t\t\t\t\tsslKeyStoreFormat: sslKeyStoreFormat as SslKeyStoreFormatType\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalue={clientCertValues.sslKeyStoreFormat}\n\t\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{sslKeyStoreFormatTypes.map((option, index) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem key={`${index}-${option}`} value={option}>\n\t\t\t\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</SolaceSelect>\n\t\t\t\t\t\t<SolaceTextField\n\t\t\t\t\t\t\tname=\"sslKeyStorePassword\"\n\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\t\t? getConnectorSummaryValue(clientCertValues.sslKeyStorePassword)\n\t\t\t\t\t\t\t\t\t: clientCertValues.sslKeyStorePassword\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\t\tlabel={en.connectors.labels.sslKeyStorePassword}\n\t\t\t\t\t\t\tdataQa=\"sslKeyStorePasswordTextField\"\n\t\t\t\t\t\t\tonChange={({ value: sslKeyStorePassword }) => {\n\t\t\t\t\t\t\t\tsetClientCertValues({\n\t\t\t\t\t\t\t\t\t...clientCertValues,\n\t\t\t\t\t\t\t\t\tsslKeyStorePassword: sslKeyStorePassword\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype={showSslKeyStorePassword ? \"text\" : \"password\"}\n\t\t\t\t\t\t\tendAdornment={[\n\t\t\t\t\t\t\t\t<SolaceButton\n\t\t\t\t\t\t\t\t\tkey={showSslKeyStorePassword ? \"eyeIcon\" : \"hideEyeIcon\"}\n\t\t\t\t\t\t\t\t\tdataQa={showSslKeyStorePassword ? \"showPasswordButton\" : \"hidePasswordButton\"}\n\t\t\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t\t\t\tonClick={() => setShowSslKeyStorePassword(!showSslKeyStorePassword)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{showSslKeyStorePassword ? <VisibilityShow24Icon /> : <VisibilityHide24Icon />}\n\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SolaceTextField\n\t\t\t\t\t\t\tname=\"sslPrivateKeyAliasName\"\n\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\t\t? getConnectorSummaryValue(clientCertValues.sslPrivateKeyAliasName)\n\t\t\t\t\t\t\t\t\t: clientCertValues.sslPrivateKeyAliasName\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\t\tlabel={en.connectors.labels.sslPrivateKeyAliasName}\n\t\t\t\t\t\t\tdataQa=\"sslPrivateKeyAliasNameTextField\"\n\t\t\t\t\t\t\tonChange={({ value: sslPrivateKeyAliasName }) => {\n\t\t\t\t\t\t\t\tsetClientCertValues({\n\t\t\t\t\t\t\t\t\t...clientCertValues,\n\t\t\t\t\t\t\t\t\tsslPrivateKeyAliasName: sslPrivateKeyAliasName\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SolaceTextField\n\t\t\t\t\t\t\tname=\"sslPrivateKeyPassword\"\n\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\t\t\t? getConnectorSummaryValue(clientCertValues.sslPrivateKeyPassword)\n\t\t\t\t\t\t\t\t\t: clientCertValues.sslPrivateKeyPassword\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\t\tlabel={en.connectors.labels.sslPrivateKeyPassword}\n\t\t\t\t\t\t\tdataQa=\"sslPrivateKeyPasswordTextField\"\n\t\t\t\t\t\t\tonChange={({ value: sslPrivateKeyPassword }) => {\n\t\t\t\t\t\t\t\tsetClientCertValues({\n\t\t\t\t\t\t\t\t\t...clientCertValues,\n\t\t\t\t\t\t\t\t\tsslPrivateKeyPassword: sslPrivateKeyPassword\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype={showSslPrivateKeyPassword ? \"text\" : \"password\"}\n\t\t\t\t\t\t\tendAdornment={[\n\t\t\t\t\t\t\t\t<SolaceButton\n\t\t\t\t\t\t\t\t\tkey={showSslPrivateKeyPassword ? \"eyeIcon\" : \"hideEyeIcon\"}\n\t\t\t\t\t\t\t\t\tdataQa={showSslPrivateKeyPassword ? \"showPasswordButton\" : \"hidePasswordButton\"}\n\t\t\t\t\t\t\t\t\tvariant=\"icon\"\n\t\t\t\t\t\t\t\t\tonClick={() => setShowSslPrivateKeyPassword(!showSslPrivateKeyPassword)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{showSslPrivateKeyPassword ? <VisibilityShow24Icon /> : <VisibilityHide24Icon />}\n\t\t\t\t\t\t\t\t</SolaceButton>\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SolaceTextField\n\t\t\t\t\t\t\tname=\"clientUsername\"\n\t\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t\treadOnly ? getConnectorSummaryValue(clientCertValues.clientUsername) : clientCertValues.clientUsername\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\t\tlabel={en.connectors.labels.clientUsername}\n\t\t\t\t\t\t\tdataQa=\"clientUsernameClientCertAuthTextField\"\n\t\t\t\t\t\t\tonChange={({ value: clientUsername }) => {\n\t\t\t\t\t\t\t\tsetClientCertValues({\n\t\t\t\t\t\t\t\t\t...clientCertValues,\n\t\t\t\t\t\t\t\t\tclientUsername: clientUsername\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonBlur={() => {\n\t\t\t\t\t\t\t\tif (isEmpty(clientCertValues.clientUsername)) {\n\t\t\t\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\t\t\t\tclientCertUsername: en.connectors.labels.validationErrors.missingRequiredField(\n\t\t\t\t\t\t\t\t\t\t\ten.connectors.labels.clientUsername\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsetSolaceValidationErrors({\n\t\t\t\t\t\t\t\t\t\t...solaceValidationErrors,\n\t\t\t\t\t\t\t\t\t\tclientCertUsername: \"\"\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thasErrors={!readOnly && !!solaceValidationErrors.clientCertUsername}\n\t\t\t\t\t\t\thelperText={\n\t\t\t\t\t\t\t\t!readOnly\n\t\t\t\t\t\t\t\t\t? solaceValidationErrors.clientCertUsername && validationEnabled\n\t\t\t\t\t\t\t\t\t\t? solaceValidationErrors.clientCertUsername\n\t\t\t\t\t\t\t\t\t\t: en.connectors.helperText.clientUsername\n\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</SolaceStack>"}]}]}