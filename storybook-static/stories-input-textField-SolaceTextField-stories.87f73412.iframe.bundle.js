(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[4789],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{aD:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/stories/input/textField/SolaceTextField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AutoFocus:()=>AutoFocus,Controlled:()=>Controlled,CustomWidth:()=>CustomWidth,DefaultTextfield:()=>DefaultTextfield,Disabled:()=>Disabled,HelperText:()=>HelperText,InlineLabelFormat:()=>InlineLabelFormat,Interaction:()=>Interaction,PlaceholderText:()=>PlaceholderText,ReadOnly:()=>ReadOnly,ReadOnlyInlineLabelLongTextOverflowWithTooltip:()=>ReadOnlyInlineLabelLongTextOverflowWithTooltip,ReadOnlyLongTextOverflowWithTooltip:()=>ReadOnlyLongTextOverflowWithTooltip,Required:()=>Required,StackedLabelFormat:()=>StackedLabelFormat,WithClearButton:()=>WithClearButton,WithErrors:()=>WithErrors,WithIcon:()=>WithIcon,WithOnBlurOnFocus:()=>WithOnBlurOnFocus,WithWarning:()=>WithWarning,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/testing-library/dist/index.mjs"),_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../node_modules/@mui/icons-material/esm/Search.js"),_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../dist/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),_storybook_test__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTextField.displayName="SolaceTextField",_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton.displayName="SolaceButton";const __WEBPACK_DEFAULT_EXPORT__={title:"Input/Textfield/Standard",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTextField,args:{id:"",name:"",title:"",label:"",placeholder:"",helperText:"",value:"",hasErrors:!1,hasWarnings:!1,autoFocus:!1,inlineLabel:!1,required:!1,disabled:!1,readOnly:!1,type:"text",size:void 0,width:void 0,minWidth:void 0,customIcon:void 0,endAdornment:void 0,dataQa:"",dataTags:"",onFocus:(0,_storybook_test__WEBPACK_IMPORTED_MODULE_4__.fn)()},parameters:{design:{type:"figma",url:"https://www.figma.com/file/P5XeF1KE6z2MKyzlEyInrH/Core-Component-Specs-(Copy)?node-id=430%3A548"}},argTypes:{label:{control:{type:"text"},description:"The label text displayed above or inline with the text field. Use this to clearly describe what information the user should enter. Labels should be concise and descriptive.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},helperText:{control:{type:"text"},description:"Additional text displayed below the input field to provide guidance or error messages. Use this to give users context about expected input format or validation requirements.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},hasErrors:{control:{type:"boolean"},description:"If true, displays the text field in an error state with red styling. Use this to indicate validation failures or input errors. Often paired with error text in helperText.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},hasWarnings:{control:{type:"boolean"},description:"If true, displays the textfield in a warning state with amber styling. Use this to indicate potential issues or cautionary information about the textfield content.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},autoFocus:{control:{type:"boolean"},description:"If true, automatically focuses the text field when the component mounts. Use sparingly as it can disrupt user navigation and accessibility. Best for primary input fields on forms.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},inlineLabel:{control:{type:"boolean"},description:"If true, displays the label inline with the input field rather than above it. Use this for compact layouts or when you need to save vertical space.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},required:{control:{type:"boolean"},description:"If true, marks the field as required and displays an asterisk (*) next to the label. Use this to indicate mandatory fields in forms and ensure proper validation.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},disabled:{control:{type:"boolean"},description:"If true, disables the text field preventing user interaction. Use this when the field is not applicable based on current form state or user permissions.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},readOnly:{control:{type:"boolean"},description:"If true, makes the text field read-only. Users can see and select the text but cannot edit it. Use this for displaying computed values or information that shouldn't be modified.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},value:{control:{type:"text"},description:"The current value of the text field. Use this for controlled components where you manage the field state externally. Should be paired with an onChange handler.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},placeholder:{control:{type:"text"},description:"Placeholder text displayed when the field is empty. Use this to provide examples of expected input format or additional guidance. Should not replace proper labels.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},type:{options:["text","number","password","email","url"],control:{type:"select"},description:"The input type which affects validation, keyboard behavior on mobile devices, and browser auto-completion. Choose the most appropriate type for your data to improve user experience.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},size:{control:{type:"number"},description:"The size attribute for the input field, affecting the visible character width. Use this to hint at the expected input length, but don't rely on it for validation.",table:{type:{summary:"number"},defaultValue:{summary:"undefined"}}},width:{control:{type:"text"},description:"The width of the text field. Can be a number (pixels), percentage, or CSS width value. Use this to control the field width within your layout constraints.",table:{type:{summary:"string | number"},defaultValue:{summary:"undefined"}}},minWidth:{control:{type:"text"},description:"The minimum width of the text field. Prevents the field from becoming too narrow in responsive layouts. Useful for ensuring readability of input content.",table:{type:{summary:"string | number"},defaultValue:{summary:"undefined"}}},name:{control:{type:"text"},description:"The name attribute for the input field, used for form submission and accessibility. Essential for proper form handling and assistive technology support.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},id:{control:{type:"text"},description:"Unique identifier for the textfield component. Used for accessibility and programmatic access.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},title:{control:{type:"text"},description:"The title attribute for the input field, displayed as a tooltip on hover. Use this for additional context or instructions that don't fit in the label or helper text.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},onChange:{description:"Callback function fired when the input value changes. Receives an event object with the new value. Essential for controlled components and form state management.",table:{defaultValue:{summary:"undefined"}}},onBlur:{description:"Callback function fired when the input loses focus. Use this for validation, formatting, or other actions that should occur when the user finishes editing.",table:{defaultValue:{summary:"undefined"}}},onFocus:{description:"Callback function fired when the input gains focus. Use this for tracking user interaction, showing additional UI elements, or preparing the field for input.",table:{defaultValue:{summary:"undefined"}}},customIcon:{control:{type:"object"},description:"Custom icon configuration object with position ('start' or 'end') and icon element. Use this to add visual cues or actions like search, clear, or validation indicators.",table:{type:{summary:"{position: 'start' | 'end', icon: React.ReactElement}"},defaultValue:{summary:"undefined"}}},endAdornment:{control:{type:"object"},description:"Array of React elements to display at the end of the input field. Use this for action buttons, status indicators, or additional interactive elements.",table:{type:{summary:"React.ReactElement[]"},defaultValue:{summary:"undefined"}}},dataQa:{control:{type:"text"},description:"Data attribute for QA testing. Use this to identify the text field during automated testing.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},dataTags:{control:{type:"text"},description:"Data attribute for additional tagging. Use this for analytics, tracking, or additional metadata.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}}}},DEMO_TITLE="Demo Text Field",DEMO_LABEL="Some Label",DefaultTextfield={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),title:DEMO_TITLE,id:"demoTextFieldId",name:"demoTextField"}},CustomWidth={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),title:DEMO_TITLE,id:"demoTextFieldId",name:"demoTextField",width:"50%"}},StackedLabelFormat={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),title:DEMO_TITLE,name:"demoTextField",label:DEMO_LABEL}},InlineLabelFormat={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("text-changed"),name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,inlineLabel:!0}},HelperText={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,helperText:"Some helper text"}},PlaceholderText={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,placeholder:"Some placeholder text"}},WithErrors={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,helperText:"The text you entered was invalid",hasErrors:!0}},WithWarning={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,helperText:"The text you entered triggered a warning",hasWarnings:!0}},WithIcon={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,helperText:"Text field with search icon",customIcon:{position:"end",icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__.Z,null)}}},WithClearButton={render:()=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),handleClearInput=()=>{setValue("")},endAdornment=[value?react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{key:"closeIcon",dataQa:"clearButton",variant:"icon",onClick:handleClearInput},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.CloseIcon,null)):null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceButton,{key:"searchIcon",variant:"icon",onClick:handleClearInput},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__.Z,{key:"search"}))];return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTextField,{value,name:"demoTextField",onChange:e=>{setValue(e.value)},endAdornment,title:DEMO_TITLE,label:DEMO_LABEL,helperText:"Text field with clear button",dataQa:"textfieldWithClearButton"})},play:async _ref=>{let{canvasElement}=_ref;const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.mV.type(canvas.getByTestId("textfieldWithClearButton"),"This is a test ",{delay:100})},parameters:{chromatic:{delay:1e4}}},AutoFocus={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,autoFocus:!0}},WithOnBlurOnFocus={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),onBlur:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("blur"),onFocus:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("focus"),title:DEMO_TITLE,id:"demoTextFieldId",name:"demoTextField"}},Required={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,required:!0}},Disabled={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,value:"Some value",disabled:!0}},ReadOnly={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,value:"Some value",readOnly:!0}},ReadOnlyLongTextOverflowWithTooltip=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"400px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTextField,{name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,value:"Some long value that will be truncated by ellipsis along with a tooltip upon hover!",readOnly:!0})),ReadOnlyInlineLabelLongTextOverflowWithTooltip=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"400px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTextField,{name:"demoTextField",title:DEMO_TITLE,label:DEMO_LABEL,value:"Some long value that will be truncated by ellipsis along with a tooltip upon hover!",inlineLabel:!0,readOnly:!0})),Controlled={render:_ref2=>{let{value:initialValue,name,...args}=_ref2;const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialValue);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_2__.SolaceTextField,_extends({value,name,onChange:e=>{setValue(e.value)}},args))},args:{name:"controlledTextField",label:"Controlled Text Field",value:"Initial value",helperText:"The value of the text field is controlled by the change handler in the story."}},Interaction={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.aD)("callback"),id:"interactionTextField",title:DEMO_TITLE,label:DEMO_LABEL,dataQa:"interactionTextField"},play:async _ref3=>{let{canvasElement}=_ref3;const canvas=(0,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.uh)(canvasElement);await _storybook_testing_library__WEBPACK_IMPORTED_MODULE_1__.mV.type(canvas.getByTestId("interactionTextField"),"This is a test",{delay:100})},parameters:{chromatic:{delay:5e3}}};DefaultTextfield.parameters={...DefaultTextfield.parameters,docs:{...DefaultTextfield.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: DEMO_TITLE,\n    id: "demoTextFieldId",\n    name: "demoTextField"\n  }\n}',...DefaultTextfield.parameters?.docs?.source}}},CustomWidth.parameters={...CustomWidth.parameters,docs:{...CustomWidth.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: DEMO_TITLE,\n    id: "demoTextFieldId",\n    name: "demoTextField",\n    width: "50%"\n  }\n}',...CustomWidth.parameters?.docs?.source}}},StackedLabelFormat.parameters={...StackedLabelFormat.parameters,docs:{...StackedLabelFormat.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: DEMO_TITLE,\n    name: "demoTextField",\n    label: DEMO_LABEL\n  }\n}',...StackedLabelFormat.parameters?.docs?.source}}},InlineLabelFormat.parameters={...InlineLabelFormat.parameters,docs:{...InlineLabelFormat.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("text-changed"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    inlineLabel: true\n  }\n}',...InlineLabelFormat.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    helperText: "Some helper text"\n  }\n}',...HelperText.parameters?.docs?.source}}},PlaceholderText.parameters={...PlaceholderText.parameters,docs:{...PlaceholderText.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    placeholder: "Some placeholder text"\n  }\n}',...PlaceholderText.parameters?.docs?.source}}},WithErrors.parameters={...WithErrors.parameters,docs:{...WithErrors.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    helperText: "The text you entered was invalid",\n    hasErrors: true\n  }\n}',...WithErrors.parameters?.docs?.source}}},WithWarning.parameters={...WithWarning.parameters,docs:{...WithWarning.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    helperText: "The text you entered triggered a warning",\n    hasWarnings: true\n  }\n}',...WithWarning.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    helperText: "Text field with search icon",\n    customIcon: {\n      position: "end",\n      icon: <Search />\n    }\n  }\n}',...WithIcon.parameters?.docs?.source}}},WithClearButton.parameters={...WithClearButton.parameters,docs:{...WithClearButton.parameters?.docs,source:{originalSource:'{\n  render: WithClearButtonComponent,\n  play: async ({\n    canvasElement\n  }) => {\n    // Starts querying the component from it\'s root element\n    const canvas = within(canvasElement);\n    await userEvent.type(canvas.getByTestId("textfieldWithClearButton"), "This is a test ", {\n      delay: 100\n    });\n  },\n  parameters: {\n    // Delay snapshot 10 seconds until all interactions are done\n    chromatic: {\n      delay: 10000\n    }\n  }\n}',...WithClearButton.parameters?.docs?.source}}},AutoFocus.parameters={...AutoFocus.parameters,docs:{...AutoFocus.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    autoFocus: true\n  }\n}',...AutoFocus.parameters?.docs?.source}}},WithOnBlurOnFocus.parameters={...WithOnBlurOnFocus.parameters,docs:{...WithOnBlurOnFocus.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    onBlur: action("blur"),\n    onFocus: action("focus"),\n    title: DEMO_TITLE,\n    id: "demoTextFieldId",\n    name: "demoTextField"\n  }\n}',...WithOnBlurOnFocus.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    required: true\n  }\n}',...Required.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    value: "Some value",\n    disabled: true\n  }\n}',...Disabled.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    name: "demoTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    value: "Some value",\n    readOnly: true\n  }\n}',...ReadOnly.parameters?.docs?.source}}},ReadOnlyLongTextOverflowWithTooltip.parameters={...ReadOnlyLongTextOverflowWithTooltip.parameters,docs:{...ReadOnlyLongTextOverflowWithTooltip.parameters?.docs,source:{originalSource:'(): JSX.Element => {\n  return <div style={{\n    width: "400px"\n  }}>\n            <SolaceTextField name={"demoTextField"} title={DEMO_TITLE} label={DEMO_LABEL} value={"Some long value that will be truncated by ellipsis along with a tooltip upon hover!"} readOnly={true} />\n        </div>;\n}',...ReadOnlyLongTextOverflowWithTooltip.parameters?.docs?.source}}},ReadOnlyInlineLabelLongTextOverflowWithTooltip.parameters={...ReadOnlyInlineLabelLongTextOverflowWithTooltip.parameters,docs:{...ReadOnlyInlineLabelLongTextOverflowWithTooltip.parameters?.docs,source:{originalSource:'(): JSX.Element => {\n  return <div style={{\n    width: "400px"\n  }}>\n            <SolaceTextField name={"demoTextField"} title={DEMO_TITLE} label={DEMO_LABEL} value={"Some long value that will be truncated by ellipsis along with a tooltip upon hover!"} inlineLabel={true} readOnly={true} />\n        </div>;\n}',...ReadOnlyInlineLabelLongTextOverflowWithTooltip.parameters?.docs?.source}}},Controlled.parameters={...Controlled.parameters,docs:{...Controlled.parameters?.docs,source:{originalSource:'{\n  render: ControlledComponent,\n  args: {\n    name: "controlledTextField",\n    label: "Controlled Text Field",\n    value: "Initial value",\n    helperText: "The value of the text field is controlled by the change handler in the story."\n  }\n}',...Controlled.parameters?.docs?.source}}},Interaction.parameters={...Interaction.parameters,docs:{...Interaction.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    id: "interactionTextField",\n    title: DEMO_TITLE,\n    label: DEMO_LABEL,\n    dataQa: "interactionTextField"\n  },\n  play: async ({\n    canvasElement\n  }) => {\n    // Starts querying the component from it\'s root element\n    const canvas = within(canvasElement);\n    await userEvent.type(canvas.getByTestId("interactionTextField"), "This is a test", {\n      delay: 100\n    });\n  },\n  parameters: {\n    // Delay snapshot 5 seconds until all interactions are done\n    chromatic: {\n      delay: 5000\n    }\n  }\n}',...Interaction.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultTextfield","CustomWidth","StackedLabelFormat","InlineLabelFormat","HelperText","PlaceholderText","WithErrors","WithWarning","WithIcon","WithClearButton","AutoFocus","WithOnBlurOnFocus","Required","Disabled","ReadOnly","ReadOnlyLongTextOverflowWithTooltip","ReadOnlyInlineLabelLongTextOverflowWithTooltip","Controlled","Interaction"]},"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext},"?4f7e":()=>{}}]);