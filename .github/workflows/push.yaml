name: "On Push to Main"

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

permissions:
  contents: write
  packages: write
  id-token: write
  pull-requests: write
  actions: read
  statuses: write
  checks: write
  repository-projects: read

jobs:
  chromatic-deployment:
    name: "Deploy Storybook to Chromatic"
    # Operating System
    runs-on: ubuntu-latest
    # Job steps
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Checkout SolaceDev/maas-build-actions
        uses: actions/checkout@v4
        with:
          repository: SolaceDev/maas-build-actions
          ref: refs/heads/master
          path: maas-build-actions
          token:
            ${{ secrets.PACKAGES_ADMIN_TOKEN }}
            #Packages Github token is required to checkout the private repository
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
      - name: Install dependencies
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > .npmrc
          echo "@SolaceDev:registry=https://npm.pkg.github.com/" >> .npmrc
          echo "legacy-peer-deps=true" >> .npmrc
          npm ci && npm --prefix storybook i
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} #need this for npm package.
        # ðŸ‘‡ Adds Chromatic as a step in the workflow

      - name: Publish to Chromatic
        # publish
        uses: chromaui/action@latest
        # Chromatic GitHub Action options
        with:
          # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          # storybook directory
          workingDir: storybook
          exitZeroOnChanges: false

      - name: Run FOSSA Scan
        uses: fossas/fossa-action@v1.7.0 # Use a specific version if locking is preferred
        continue-on-error: true
        with:
          api-key: ${{secrets.FOSSA_API_KEY}}

      - name: Perform WhiteSource Scan
        id: whitesource_scan
        uses: ./maas-build-actions/.github/actions/whitesource-scan
        continue-on-error: true
        with:
          whitesource_api_key: ${{ secrets.WHITESOURCE_API_KEY }}
          whitesource_product_name: "maas_libraries"
          whitesource_project_name: ${{ github.event.repository.name }}
          target_directory: "."

      - name: Get Commit Message
        id: get_commit_message
        run: |
          echo "commit_message=$(git log --oneline -1)" >> $GITHUB_OUTPUT

      - name: Whitesource Alerts Report
        uses: ./maas-build-actions/.github/actions/whitesource-alerts-checker
        continue-on-error: true
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          ws_api_key: ${{ secrets.WHITESOURCE_API_KEY }}
          ws_project_token: ${{ secrets.WHITESOURCE_PROJECT_TOKEN }}
          build_url: "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
          branch: "${{ github.ref_name }}"
          commit_message: "${{ steps.get_commit_message.outputs.commit_message }}"
          ws_scan_duration: "${{ env.scan_duration }}"
          ws_product_name: "maas_libraries"
          ws_project_name: "${{ github.event.repository.name }}"
          ws_repo_name: "${{ github.event.repository.name }}"
          fail_if_policy_violations_found: "True"
          s3_log_path: "s3://solace-cloud-ci-logs/${{ github.event.repository.name }}/${{ github.event.repository.name }}-whitesource-scan-${{ github.sha }}.txt"

      - name: Whitesource Failure Notification
        if: failure() && steps.whitesource_scan.outcome == 'failure'
        uses: ./maas-build-actions/.github/actions/build-finish-notifier
        with:
          workflow_title: "${{ github.event.repository.name }} - Whitesource Scan Failure"
          run_url: "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
          notify_channel: "#whitesource-scans-updates,#devsecops-security-event-incident"
          auto_slack_channel: "False"

      - name: Build Notification
        if: failure()
        uses: ./maas-build-actions/.github/actions/build-finish-notifier
        with:
          workflow_title: "${{ github.event.repository.name }} ${{ github.workflow }}"
          run_url: "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"

  bump-version:
    needs: chromatic-deployment
    name: "Bump Version on main"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v4"
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.PACKAGES_ADMIN_TOKEN }}

      - name: "cat package.json"
        run: cat ./package.json

      - name: "Automated Version Bump"
        uses: "phips28/gh-action-bump-version@master"
        with:
          minor-wording: "solaceminor,SolaceMinor,SOLACEMINOR"
          major-wording: "solacemajor,SolaceMajor,SOLACEMAJOR"
          patch-wording: "solacepatch,SolacePatch,SOLACEPATCH"
          tag-prefix: ""
          commit-message: "CI: bumps version to {{version}} [skip ci]" # Add skip ci tag
        env:
          #Required for version bumping and by-passing branch protection
          GITHUB_TOKEN: ${{ secrets.PACKAGES_ADMIN_TOKEN }}
      - name: "cat package.json"
        run: cat ./package.json
