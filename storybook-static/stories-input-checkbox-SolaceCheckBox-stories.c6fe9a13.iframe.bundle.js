"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[4916],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/stories/input/checkbox/SolaceCheckBox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{BoldLabel:()=>BoldLabel,DefaultCheckbox:()=>DefaultCheckbox,Disabled:()=>Disabled,HelperText:()=>HelperText,Indeterminate:()=>Indeterminate,IndeterminateAndReadOnly:()=>IndeterminateAndReadOnly,Labeled:()=>Labeled,LargeLabel:()=>LargeLabel,LightSubText:()=>LightSubText,ReadOnly:()=>ReadOnly,Required:()=>Required,SubText:()=>SubText,WithErrors:()=>WithErrors,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../dist/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.SolaceCheckBox.displayName="SolaceCheckBox";const LABEL="Some Label",TITLE="Demo Checkbox",__WEBPACK_DEFAULT_EXPORT__={title:"Input/Checkbox",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.SolaceCheckBox,parameters:{design:{type:"figma",url:"https://www.figma.com/file/4Y6nwn19uTNgpxzNAP5Vqe/Patterns?node-id=2932%3A22443"},docs:{description:{component:"Code component name: SolaceCheckBox"}}},argTypes:{label:{control:{type:"text"},description:"The label text displayed next to the checkbox. Use this to clearly describe what the checkbox represents. Labels should be concise and descriptive.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}},helperText:{control:{type:"text"},description:"Additional text displayed below the checkbox to provide guidance or error messages. Use this to give users context about the checkbox purpose or validation requirements.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}},hasErrors:{control:{type:"boolean"},description:"If true, displays the checkbox in an error state with red styling. Use this to indicate validation failures. Often paired with error text in helperText.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},required:{control:{type:"boolean"},description:"If true, marks the checkbox as required and displays an asterisk (*) next to the label. Use this to indicate mandatory checkboxes in forms and ensure proper validation.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},disabled:{control:{type:"boolean"},description:"If true, disables the checkbox preventing user interaction. Use this when the checkbox is not applicable based on current form state or user permissions.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},readOnly:{control:{type:"boolean"},description:"If true, makes the checkbox read-only. Users can see the checked state but cannot change it. Use this for displaying computed values or information that shouldn't be modified.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},checked:{control:{type:"boolean"},description:"Controls the checked state of the checkbox. Use this for controlled components where you manage the checkbox state externally. Should be paired with an onChange handler.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},defaultChecked:{control:{type:"boolean"},description:"The default checked state for uncontrolled components. Use this when you want to set an initial checked state but don't need to control it.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},indeterminate:{control:{type:"boolean"},description:"If true, displays the checkbox in an indeterminate state (partially checked). Use this for parent checkboxes when some but not all child items are selected.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},boldLabel:{control:{type:"boolean"},description:"If true, displays the label text in bold font weight. Use this to emphasize important checkboxes or primary options.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},largeLabel:{control:{type:"boolean"},description:"If true, displays the label text in a larger font size. Use this for prominent checkboxes or when you need better readability.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}},subTextProps:{control:{type:"object"},description:"Configuration object for displaying additional subtext below the main label. Should include 'label' (string) and optionally 'light' (boolean) properties.",table:{type:{summary:"{label: string, light?: boolean} | undefined"},defaultValue:{summary:"undefined"}}},name:{control:{type:"text"},description:"The name attribute for the checkbox, used for form submission and accessibility. Essential for proper form handling and assistive technology support.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}},id:{control:{type:"text"},description:"Unique identifier for the checkbox component. Used for accessibility and programmatic access.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}},title:{control:{type:"text"},description:"The title attribute for the checkbox, displayed as a tooltip on hover. Use this for additional context or instructions that don't fit in the label.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}},value:{control:{type:"text"},description:"The value attribute for the checkbox. This is the value that will be submitted when the checkbox is checked in a form.",table:{type:{summary:"string | number | undefined"},defaultValue:{summary:"undefined"}}},onChange:{description:"Callback function fired when the checkbox state changes. Receives an event object with the new checked state. Essential for controlled components and form state management."},dataQa:{control:{type:"text"},description:"Data attribute for QA testing. Use this to identify the checkbox during automated testing.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}},dataTags:{control:{type:"text"},description:"Data attribute for additional tagging. Use this for analytics, tracking, or additional metadata.",table:{type:{summary:"string | undefined"},defaultValue:{summary:"undefined"}}},hasWarnings:{control:{type:"boolean"},description:"If true, displays the checkbox in a warning state with amber styling. Use this to indicate potential issues or cautionary information about the checkbox selection.",table:{type:{summary:"boolean | undefined"},defaultValue:{summary:"false"}}}}},DefaultCheckbox={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,id:"demoCheckboxId",name:"demoCheckbox"}},Labeled={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,id:"demoCheckboxId",name:"demoCheckbox",label:LABEL}},BoldLabel={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,id:"demoCheckboxId",name:"demoCheckbox",label:LABEL,boldLabel:!0}},LargeLabel={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,id:"demoCheckboxId",name:"demoCheckbox",label:LABEL,largeLabel:!0}},SubText={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,id:"demoCheckboxId",name:"demoCheckbox",label:"Primary Label",subTextProps:{label:"Subtext subtext"}}},LightSubText={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,id:"demoCheckboxId",name:"demoCheckbox",label:"Primary Label",subTextProps:{label:"This is a light subtext",light:!0}}},HelperText={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,id:"demoCheckboxId",name:"demoCheckbox",label:LABEL,helperText:"Some helper text here"}},WithErrors={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,id:"demoCheckboxId",name:"demoCheckbox",label:LABEL,hasErrors:!0,helperText:"Some error occured"}},Required={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,name:"demoCheckbox",label:LABEL,required:!0}},Disabled={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,name:"demoCheckbox",label:LABEL,checked:!0,disabled:!0}},Indeterminate={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,name:"demoCheckbox",label:LABEL,checked:!0,indeterminate:!0,readOnly:!1}},ReadOnly={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,name:"demoCheckbox",label:LABEL,checked:!0,readOnly:!0}},IndeterminateAndReadOnly={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("callback"),title:TITLE,name:"demoCheckbox",label:LABEL,checked:!0,indeterminate:!0,readOnly:!0}};DefaultCheckbox.parameters={...DefaultCheckbox.parameters,docs:{...DefaultCheckbox.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    id: "demoCheckboxId",\n    name: "demoCheckbox"\n  }\n}',...DefaultCheckbox.parameters?.docs?.source}}},Labeled.parameters={...Labeled.parameters,docs:{...Labeled.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    id: "demoCheckboxId",\n    name: "demoCheckbox",\n    label: LABEL\n  }\n}',...Labeled.parameters?.docs?.source}}},BoldLabel.parameters={...BoldLabel.parameters,docs:{...BoldLabel.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    id: "demoCheckboxId",\n    name: "demoCheckbox",\n    label: LABEL,\n    boldLabel: true\n  }\n}',...BoldLabel.parameters?.docs?.source}}},LargeLabel.parameters={...LargeLabel.parameters,docs:{...LargeLabel.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    id: "demoCheckboxId",\n    name: "demoCheckbox",\n    label: LABEL,\n    largeLabel: true\n  }\n}',...LargeLabel.parameters?.docs?.source}}},SubText.parameters={...SubText.parameters,docs:{...SubText.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    id: "demoCheckboxId",\n    name: "demoCheckbox",\n    label: "Primary Label",\n    subTextProps: {\n      label: "Subtext subtext"\n    }\n  }\n}',...SubText.parameters?.docs?.source}}},LightSubText.parameters={...LightSubText.parameters,docs:{...LightSubText.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    id: "demoCheckboxId",\n    name: "demoCheckbox",\n    label: "Primary Label",\n    subTextProps: {\n      label: "This is a light subtext",\n      light: true\n    }\n  }\n}',...LightSubText.parameters?.docs?.source}}},HelperText.parameters={...HelperText.parameters,docs:{...HelperText.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    id: "demoCheckboxId",\n    name: "demoCheckbox",\n    label: LABEL,\n    helperText: "Some helper text here"\n  }\n}',...HelperText.parameters?.docs?.source}}},WithErrors.parameters={...WithErrors.parameters,docs:{...WithErrors.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    id: "demoCheckboxId",\n    name: "demoCheckbox",\n    label: LABEL,\n    hasErrors: true,\n    helperText: "Some error occured"\n  }\n}',...WithErrors.parameters?.docs?.source}}},Required.parameters={...Required.parameters,docs:{...Required.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    name: "demoCheckbox",\n    label: LABEL,\n    required: true\n  }\n}',...Required.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    name: "demoCheckbox",\n    label: LABEL,\n    checked: true,\n    disabled: true\n  }\n}',...Disabled.parameters?.docs?.source}}},Indeterminate.parameters={...Indeterminate.parameters,docs:{...Indeterminate.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    name: "demoCheckbox",\n    label: LABEL,\n    checked: true,\n    indeterminate: true,\n    readOnly: false\n  }\n}',...Indeterminate.parameters?.docs?.source}}},ReadOnly.parameters={...ReadOnly.parameters,docs:{...ReadOnly.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    name: "demoCheckbox",\n    label: LABEL,\n    checked: true,\n    readOnly: true\n  }\n}',...ReadOnly.parameters?.docs?.source}}},IndeterminateAndReadOnly.parameters={...IndeterminateAndReadOnly.parameters,docs:{...IndeterminateAndReadOnly.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    title: TITLE,\n    name: "demoCheckbox",\n    label: LABEL,\n    checked: true,\n    indeterminate: true,\n    readOnly: true\n  }\n}',...IndeterminateAndReadOnly.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultCheckbox","Labeled","BoldLabel","LargeLabel","SubText","LightSubText","HelperText","WithErrors","Required","Disabled","Indeterminate","ReadOnly","IndeterminateAndReadOnly"]}}]);