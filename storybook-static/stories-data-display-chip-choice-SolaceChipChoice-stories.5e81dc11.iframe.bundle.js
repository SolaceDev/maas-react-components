"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[9745],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/stories/data-display/chip-choice/SolaceChipChoice.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DarkActiveChoiceChip:()=>DarkActiveChoiceChip,DarkNotSelectedChoiceChip:()=>DarkNotSelectedChoiceChip,DefaultActiveChoiceChip:()=>DefaultActiveChoiceChip,DefaultNotSelectedChoiceChip:()=>DefaultNotSelectedChoiceChip,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../dist/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.SolaceChip.displayName="SolaceChip";const __WEBPACK_DEFAULT_EXPORT__={title:"Data Display/Chip/Choice",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.SolaceChip,parameters:{},argTypes:{label:{control:{type:"text"},description:"The content to be displayed in the choice chip. Can be a string or JSX element for more complex content. Choice chips are typically used for single or multiple selection scenarios.",table:{type:{summary:"string | React.ReactNode"},defaultValue:{summary:"undefined"}}},variant:{options:[_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.CHIP_VARIANT.FILLED,_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.CHIP_VARIANT.OUTLINED],control:{type:"radio"},description:"The visual style variant of the choice chip. 'filled' provides a solid background when selected, while 'outlined' provides a border-only style that's common for choice chips. https://github.com/SolaceDev/maas-react-components/blob/main/src/types/solaceChip.ts",table:{type:{summary:'"filled" | "outlined"'},defaultValue:{summary:'"outlined"'}}},disabled:{control:{type:"boolean"},description:"If true, the choice chip will be disabled and non-interactive. Use this when the choice is not available in the current context.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},clickable:{control:{type:"boolean"},description:"If true, the choice chip will be clickable and show hover effects. This should typically be true for choice chips to enable selection.",table:{type:{summary:"boolean"},defaultValue:{summary:"true"}}},mode:{options:[_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.MODES.LIGHT_MODE,_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.MODES.DARK_MODE],control:{type:"radio"},description:"The color mode for the choice chip. Controls the overall color scheme to match the application's theme. https://github.com/SolaceDev/maas-react-components/blob/main/src/types/modes.ts",table:{type:{summary:'"light" | "dark"'},defaultValue:{summary:'"light"'}}},state:{options:[_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.STATES.NOT_SELECTED,_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.STATES.ACTIVE],control:{type:"radio"},description:"The selection state of the choice chip. 'active' indicates the chip is selected, 'not-selected' indicates it's available but not chosen. https://github.com/SolaceDev/maas-react-components/blob/main/src/types/states.ts",table:{type:{summary:'"not-selected" | "active"'},defaultValue:{summary:'"not-selected"'}}},onClick:{control:!1,description:"Callback function that fires when the choice chip is clicked. Essential for handling selection state changes."},maxWidth:{control:{type:"number"},description:"Maximum width of the choice chip in pixels. When the content exceeds this width, it will be truncated with an ellipsis.",table:{type:{summary:"number"},defaultValue:{summary:"undefined"}}},dataQa:{control:{type:"text"},description:"Data attribute for QA testing. Use this to identify choice chips during automated testing.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},dataTags:{control:{type:"text"},description:"Data attribute for additional tagging. Use this for analytics, tracking, or additional metadata.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}}}},DefaultActiveChoiceChip={args:{label:"Default Choice Chip (Active)",variant:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.CHIP_VARIANT.OUTLINED,state:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.STATES.ACTIVE,clickable:!0,onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("Input button clicked")}},DarkActiveChoiceChip={args:{mode:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.MODES.DARK_MODE,label:"Dark Choice Chip (Active)",variant:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.CHIP_VARIANT.OUTLINED,state:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.STATES.ACTIVE,clickable:!0,onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("Input button clicked")}},DefaultNotSelectedChoiceChip={args:{label:"Default Choice Chip (Not Selected)",variant:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.CHIP_VARIANT.OUTLINED,clickable:!0,onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("Input button clicked")}},DarkNotSelectedChoiceChip={args:{mode:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.MODES.DARK_MODE,label:"Dark Choice Chip (Not Selected)",variant:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_0__.CHIP_VARIANT.OUTLINED,clickable:!0,onClick:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("Input button clicked")}};DefaultActiveChoiceChip.parameters={...DefaultActiveChoiceChip.parameters,docs:{...DefaultActiveChoiceChip.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Default Choice Chip (Active)",\n    variant: CHIP_VARIANT.OUTLINED,\n    state: STATES.ACTIVE,\n    clickable: true,\n    onClick: action(CLICK_ACTION_TEXT)\n  }\n}',...DefaultActiveChoiceChip.parameters?.docs?.source}}},DarkActiveChoiceChip.parameters={...DarkActiveChoiceChip.parameters,docs:{...DarkActiveChoiceChip.parameters?.docs,source:{originalSource:'{\n  args: {\n    mode: MODES.DARK_MODE,\n    label: "Dark Choice Chip (Active)",\n    variant: CHIP_VARIANT.OUTLINED,\n    state: STATES.ACTIVE,\n    clickable: true,\n    onClick: action(CLICK_ACTION_TEXT)\n  }\n}',...DarkActiveChoiceChip.parameters?.docs?.source}}},DefaultNotSelectedChoiceChip.parameters={...DefaultNotSelectedChoiceChip.parameters,docs:{...DefaultNotSelectedChoiceChip.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Default Choice Chip (Not Selected)",\n    variant: CHIP_VARIANT.OUTLINED,\n    clickable: true,\n    onClick: action(CLICK_ACTION_TEXT)\n  }\n}',...DefaultNotSelectedChoiceChip.parameters?.docs?.source}}},DarkNotSelectedChoiceChip.parameters={...DarkNotSelectedChoiceChip.parameters,docs:{...DarkNotSelectedChoiceChip.parameters?.docs,source:{originalSource:'{\n  args: {\n    mode: MODES.DARK_MODE,\n    label: "Dark Choice Chip (Not Selected)",\n    variant: CHIP_VARIANT.OUTLINED,\n    clickable: true,\n    onClick: action(CLICK_ACTION_TEXT)\n  }\n}',...DarkNotSelectedChoiceChip.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultActiveChoiceChip","DarkActiveChoiceChip","DefaultNotSelectedChoiceChip","DarkNotSelectedChoiceChip"]}}]);