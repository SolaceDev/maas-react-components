(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[2655],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{aD:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/stories/data-display/attributebadge/SolaceAttributeBadge.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ClickableAttributeBadge:()=>ClickableAttributeBadge,DefaultAttributeBadge:()=>DefaultAttributeBadge,EllipsisContentAttributeBadge:()=>EllipsisContentAttributeBadge,LargeFontSizeAttributeBadge:()=>LargeFontSizeAttributeBadge,NonBoldLabelAttributeBadge:()=>NonBoldLabelAttributeBadge,NonCompressedAttributeBadge:()=>NonCompressedAttributeBadge,OutlinedAttributeBadge:()=>OutlinedAttributeBadge,WithColorTextAttributeBadge:()=>WithColorTextAttributeBadge,WithDashedBorderAttributeBadge:()=>WithDashedBorderAttributeBadge,WithDeleteButtonAttributeBadge:()=>WithDeleteButtonAttributeBadge,WithFillColorAttributeBadge:()=>WithFillColorAttributeBadge,WithTooltipAttributeBadge:()=>WithTooltipAttributeBadge,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../dist/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),_storybook_test__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceAttributeBadge.displayName="SolaceAttributeBadge",_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTooltip.displayName="SolaceTooltip";const __WEBPACK_DEFAULT_EXPORT__={title:"Data Display/Badge/Attribute",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceAttributeBadge,parameters:{},argTypes:{label:{control:{type:"text"},description:"The content to be displayed in the attribute badge. Can be a string or JSX element for more complex content like tooltips or styled text. Attribute badges are typically used for displaying metadata or categorical information.",table:{type:{summary:"string | React.ReactNode"},defaultValue:{summary:"undefined"}}},variant:{options:["outlined","filled"],control:{type:"radio"},description:"The visual style variant of the attribute badge. 'filled' provides a solid background for high visibility, while 'outlined' provides a border-only style for subtle categorization without visual weight. https://github.com/SolaceDev/maas-react-components/blob/main/src/types/solaceChip.ts",table:{type:{summary:'"outlined" | "filled"'},defaultValue:{summary:'"filled"'}}},disabled:{control:{type:"boolean"},description:"If true, the attribute badge will be disabled and appear muted. Use this when the attribute represents information that is not currently applicable or actionable.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},size:{options:["xs","sm","md","lg","xl","xxl","huge"],control:{type:"select"},description:"The size of the attribute badge affecting both font size and padding. Use smaller sizes for dense layouts and larger sizes for emphasis or when the badge is a primary interface element. https://github.com/SolaceDev/maas-react-components/blob/main/src/types/sizing.ts",table:{type:{summary:'"xs" | "sm" | "md" | "lg" | "xl" | "xxl" | "huge"'},defaultValue:{summary:'"xs"'}}},borderColor:{options:Object.values(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.CHIP_COLORS),control:{type:"select"},description:"Custom border color for the attribute badge. Use this to create color-coded categorization systems or to match specific design requirements. Only applicable when variant is 'outlined'.",table:{type:{summary:"CHIP_COLORS"},defaultValue:{summary:"undefined"}}},borderRadius:{options:["sm","md","lg"],control:{type:"select"},description:"The border radius size of the attribute badge. Use 'sm' for sharp corners, 'md' for standard rounded corners, or 'lg' for pill-shaped badges. https://github.com/SolaceDev/maas-react-components/blob/main/src/types/sizing.ts",table:{type:{summary:'"sm" | "md" | "lg"'},defaultValue:{summary:'"md"'}}},dashedBorder:{control:{type:"boolean"},description:"If true, the border will be dashed instead of solid. Use this for badges representing temporary, pending, or draft states. Only applicable when variant is 'outlined'.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},fillColor:{options:Object.values(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.CHIP_COLORS),control:{type:"select"},description:"Custom background color for the attribute badge. Use this to create color-coded categorization systems or to match specific brand colors. Only applicable when variant is 'filled'.",table:{type:{summary:"CHIP_COLORS"},defaultValue:{summary:"undefined"}}},boldLabel:{control:{type:"boolean"},description:"If true, the label text will be bold (font-weight 600). Use this for emphasizing important attributes or when the badge needs to stand out more prominently.",table:{type:{summary:"boolean"},defaultValue:{summary:"true"}}},labelColor:{options:Object.values(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.CHIP_COLORS),control:{type:"select"},description:"Custom text color for the attribute badge label. Use this in conjunction with fillColor or borderColor to ensure proper contrast and readability.",table:{type:{summary:"CHIP_COLORS"},defaultValue:{summary:"undefined"}}},height:{options:["sm","md","lg"],control:{type:"select"},description:"The height of the attribute badge. Use this to control the vertical space the badge occupies, independent of the font size controlled by the 'size' prop. https://github.com/SolaceDev/maas-react-components/blob/main/src/types/sizing.ts",table:{type:{summary:'"sm" | "md" | "lg"'},defaultValue:{summary:'"md"'}}},compressed:{control:{type:"boolean"},description:"If true, reduces the horizontal padding of the badge for a more compact appearance. Use this in dense layouts where space is constrained.",table:{type:{summary:"boolean"},defaultValue:{summary:"true"}}},clickable:{control:{type:"boolean"},description:"If true, the attribute badge will be clickable and show hover effects. Use this when the badge should trigger an action such as filtering or navigation.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},maxWidth:{control:{type:"number"},description:"Maximum width of the attribute badge in pixels. When the content exceeds this width, it will be truncated with an ellipsis. Use this to maintain consistent layout.",table:{type:{summary:"number"},defaultValue:{summary:"undefined"}}},dataQa:{control:{type:"text"},description:"Data attribute for QA testing. Use this to identify attribute badges during automated testing.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},dataTags:{control:{type:"text"},description:"Data attribute for additional tagging. Use this for analytics, tracking, or additional metadata.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}}},args:{size:"xs"}},DefaultAttributeBadge={args:{label:"Filled Attribute Badge"}},OutlinedAttributeBadge={args:{label:"Outlined Attribute Badge",variant:"outlined"}},ClickableAttributeBadge={args:{label:"Clickable Attribute Badge",clickable:!0}},EllipsisContentAttributeBadge={args:{label:"Attribute Badge With Long Content",maxWidth:100}},LargeFontSizeAttributeBadge={args:{label:"Larger Text",size:"md"}},NonBoldLabelAttributeBadge={args:{label:"Regular (400) Font Weight",boldLabel:!1}},NonCompressedAttributeBadge={args:{label:"Non Compressed Attribute Badge",compressed:!1}},WithTooltipAttributeBadge={args:{label:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTooltip,{title:"Attribute Badge With Long Content"},"Attribute Badge With Long Content"),maxWidth:100},decorators:[Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{id:"snapshot",style:{position:"absolute",top:0,left:0,width:"100vw",height:"100vh"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{margin:"16px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null)))],play:async _ref=>{let{canvasElement}=_ref;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_3__.uh)(canvasElement),targetElement=await canvas.getByText("Attribute Badge With Long Content");await _storybook_test__WEBPACK_IMPORTED_MODULE_3__.mV.hover(targetElement)}},WithColorTextAttributeBadge={args:{label:react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{style:{color:"#FFFFFF"}},"White Text")}},WithDashedBorderAttributeBadge={args:{label:"Dashed Border Attribute Badge",variant:"outlined",dashedBorder:!0}},WithFillColorAttributeBadge={args:{label:"Fill Color Attribute Badge",fillColor:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.CHIP_COLORS.OPAQUE_BLUE}},WithDeleteButtonAttributeBadge={args:{label:"Attribute Badge Text",onDelete:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("delete button clicked")}};DefaultAttributeBadge.parameters={...DefaultAttributeBadge.parameters,docs:{...DefaultAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Filled Attribute Badge"\n  }\n}',...DefaultAttributeBadge.parameters?.docs?.source}}},OutlinedAttributeBadge.parameters={...OutlinedAttributeBadge.parameters,docs:{...OutlinedAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Outlined Attribute Badge",\n    variant: "outlined"\n  }\n}',...OutlinedAttributeBadge.parameters?.docs?.source}}},ClickableAttributeBadge.parameters={...ClickableAttributeBadge.parameters,docs:{...ClickableAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Clickable Attribute Badge",\n    clickable: true\n  }\n}',...ClickableAttributeBadge.parameters?.docs?.source}}},EllipsisContentAttributeBadge.parameters={...EllipsisContentAttributeBadge.parameters,docs:{...EllipsisContentAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Attribute Badge With Long Content",\n    maxWidth: 100\n  }\n}',...EllipsisContentAttributeBadge.parameters?.docs?.source}}},LargeFontSizeAttributeBadge.parameters={...LargeFontSizeAttributeBadge.parameters,docs:{...LargeFontSizeAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Larger Text",\n    size: "md"\n  }\n}',...LargeFontSizeAttributeBadge.parameters?.docs?.source}}},NonBoldLabelAttributeBadge.parameters={...NonBoldLabelAttributeBadge.parameters,docs:{...NonBoldLabelAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Regular (400) Font Weight",\n    boldLabel: false\n  }\n}',...NonBoldLabelAttributeBadge.parameters?.docs?.source}}},NonCompressedAttributeBadge.parameters={...NonCompressedAttributeBadge.parameters,docs:{...NonCompressedAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Non Compressed Attribute Badge",\n    compressed: false\n  }\n}',...NonCompressedAttributeBadge.parameters?.docs?.source}}},WithTooltipAttributeBadge.parameters={...WithTooltipAttributeBadge.parameters,docs:{...WithTooltipAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: <SolaceTooltip title="Attribute Badge With Long Content">Attribute Badge With Long Content</SolaceTooltip>,\n    maxWidth: 100\n  },\n  decorators: [withSnapshotContainer],\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    const targetElement = await canvas.getByText("Attribute Badge With Long Content");\n    await userEvent.hover(targetElement);\n  }\n}',...WithTooltipAttributeBadge.parameters?.docs?.source}}},WithColorTextAttributeBadge.parameters={...WithColorTextAttributeBadge.parameters,docs:{...WithColorTextAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: <span style={{\n      color: "#FFFFFF"\n    }}>White Text</span>\n  }\n}',...WithColorTextAttributeBadge.parameters?.docs?.source}}},WithDashedBorderAttributeBadge.parameters={...WithDashedBorderAttributeBadge.parameters,docs:{...WithDashedBorderAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Dashed Border Attribute Badge",\n    variant: "outlined",\n    dashedBorder: true\n  }\n}',...WithDashedBorderAttributeBadge.parameters?.docs?.source}}},WithFillColorAttributeBadge.parameters={...WithFillColorAttributeBadge.parameters,docs:{...WithFillColorAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Fill Color Attribute Badge",\n    fillColor: CHIP_COLORS.OPAQUE_BLUE\n  }\n}',...WithFillColorAttributeBadge.parameters?.docs?.source}}},WithDeleteButtonAttributeBadge.parameters={...WithDeleteButtonAttributeBadge.parameters,docs:{...WithDeleteButtonAttributeBadge.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Attribute Badge Text",\n    onDelete: action("delete button clicked")\n  }\n}',...WithDeleteButtonAttributeBadge.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultAttributeBadge","OutlinedAttributeBadge","ClickableAttributeBadge","EllipsisContentAttributeBadge","LargeFontSizeAttributeBadge","NonBoldLabelAttributeBadge","NonCompressedAttributeBadge","WithTooltipAttributeBadge","WithColorTextAttributeBadge","WithDashedBorderAttributeBadge","WithFillColorAttributeBadge","WithDeleteButtonAttributeBadge"]},"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext}}]);