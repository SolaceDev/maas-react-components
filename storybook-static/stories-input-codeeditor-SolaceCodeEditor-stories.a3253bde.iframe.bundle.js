"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[5182],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.Z)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/stories/input/codeeditor/SolaceCodeEditor.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ControlledEditor:()=>ControlledEditor,DefaultEditor:()=>DefaultEditor,EmptyEditor:()=>EmptyEditor,ExpandableEditor:()=>ExpandableEditor,FullScreenEditor:()=>FullScreenEditor,JSONEditor:()=>JSONEditor,ProtobufEditor:()=>ProtobufEditor,ReadOnlyEditor:()=>ReadOnlyEditor,UpdateData:()=>UpdateData,WithError:()=>WithError,WithHelperText:()=>WithHelperText,WithWarning:()=>WithWarning,XMLEditor:()=>XMLEditor,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../dist/index.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceCodeEditor.displayName="SolaceCodeEditor",_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceCheckBox.displayName="SolaceCheckBox";const __WEBPACK_DEFAULT_EXPORT__={title:"Input/Code/Editor",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceCodeEditor,parameters:{},argTypes:{id:{control:{type:"text"},description:"Unique identifier for the code editor component. Used for accessibility and programmatic access.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},name:{control:{type:"text"},description:"Name attribute for the code editor input. Used for form submission and identification.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},value:{control:{type:"text"},description:"The current code content in the editor. This is the controlled value of the editor.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},mode:{control:{type:"select"},options:["json","xml","protobuf","javascript","typescript","yaml"],description:"The syntax highlighting mode for the code editor. Determines the language parsing and highlighting.",table:{type:{summary:"string"},defaultValue:{summary:"json"}}},onChange:{description:"Callback function triggered when the code content changes. Receives (editor, data, value) parameters."},readOnly:{control:{type:"boolean"},description:"If true, the editor is read-only and cannot be modified by the user.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},expandable:{control:{type:"boolean"},description:"If true, shows an expand button that allows the editor to be opened in full-screen mode.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},fullScreen:{control:{type:"boolean"},description:"If true, the editor is displayed in full-screen mode covering the entire viewport.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},hasErrors:{control:{type:"boolean"},description:"If true, displays the editor in an error state with red styling to indicate validation issues.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},hasWarnings:{control:{type:"boolean"},description:"If true, displays the editor in a warning state with amber styling to indicate potential issues.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},helperText:{control:{type:"text"},description:"Helper text displayed below the editor. Can be used for instructions, error messages, or additional context.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},dataQa:{control:{type:"text"},description:"Data attribute for QA testing. Use this to identify the code editor during automated testing.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}}}},DEFAULT_JSON_VALUE={squadName:"Super hero squad",homeTown:"Metro City",formed:2016,secretBase:"Super tower",active:!0,members:[{name:"Molecule Man",age:29,secretIdentity:"Dan Jukes",powers:["Radiation resistance","Turning tiny","Radiation blast"]},{name:"Madame Uppercut",age:39,secretIdentity:"Jane Wilson",powers:["Million tonne punch","Damage resistance","Superhuman reflexes"]},{name:"Eternal Flame",age:1e6,secretIdentity:"Unknown",powers:["Immortality","Heat Immunity","Inferno","Teleportation","Interdimensional travel"]}]},DefaultEditor={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback")}},NAME="schemaVersion[content]",EmptyEditor={args:{id:NAME,name:NAME,value:"",hasErrors:void 0,helperText:null,onChange:(editor,data,value)=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)(value),dataQa:NAME}},JSONEditor={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),id:"demoCodeEditorId",value:JSON.stringify(DEFAULT_JSON_VALUE,null," "),mode:"json"}},XMLEditor={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),id:"demoCodeEditorId",value:'<part number="1976">\n<name>Windscreen Wiper</name>\n<description>The Windscreen wiper\n  automatically removes rain\n  from your windscreen, if it\n  should happen to splash there.\n  It has a rubber <ref part="1977">blade</ref>\n  which can be ordered separately\n  if you need to replace it.\n</description>\n</part>',mode:"xml"}},ProtobufEditor={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),id:"demoCodeEditorId",value:'syntax = "proto3";\npackage com.acme;\n\nimport "OtherRecord.proto";\n\nmessage MyRecord {\n  string f1 = 1;\n  OtherRecord f2 = 2;\n}',mode:"protobuf"}},ReadOnlyEditor={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),id:"demoCodeEditorId",value:JSON.stringify(DEFAULT_JSON_VALUE,null," "),mode:"json",readOnly:!0}},ExpandableEditor={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),id:"demoCodeEditorId",value:JSON.stringify(DEFAULT_JSON_VALUE,null," "),mode:"json",expandable:!0}},WithHelperText={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),id:"demoCodeEditorId",value:JSON.stringify(DEFAULT_JSON_VALUE,null," "),mode:"json",expandable:!0,helperText:"A sample helper text"}},WithError={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),id:"demoCodeEditorId",value:JSON.stringify(DEFAULT_JSON_VALUE,null," "),mode:"json",expandable:!0,helperText:"A sample error text",hasErrors:!0}},WithWarning={args:{onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback"),id:"demoCodeEditorId",value:JSON.stringify(DEFAULT_JSON_VALUE,null," "),mode:"json",expandable:!0,helperText:"A sample warning text",hasWarnings:!0}},FullScreenEditor=()=>{const[fullScreen,setFullScreen]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceCheckBox,{name:"fullScreenCheckbox",label:"Full Screen",checked:fullScreen,onChange:()=>{setFullScreen(!fullScreen)}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceCodeEditor,{id:"demoCodeEditorId",value:JSON.stringify(DEFAULT_JSON_VALUE,null," "),mode:"json",fullScreen,onChange:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.aD)("callback")}))},ControlledEditor=()=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("");return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceCodeEditor,{id:"controlledEditor",value,mode:"json",onChange:(_editor,_data,value)=>{setValue(value)}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Returned Data:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,JSON.stringify(value)))},DATA=['{\n\t"name": "jason",\n \t"address": "123 road"\n}','{\n\t"name": "peter",\n \t"address": "456 road"\n}','{\n\t"name": "jane",\n \t"address": "789 road"\n}',"{}",""],UpdateData=()=>{const[initValue,setInitValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("");return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceCodeEditor,{id:"controlledEditor",value:initValue,mode:"json",onChange:(_editor,_data,value)=>{setValue(value)}}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>{setInitValue(DATA[Math.floor(5*Math.random())])}},"Update data"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Returned Data:"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,JSON.stringify(value)))};DefaultEditor.parameters={...DefaultEditor.parameters,docs:{...DefaultEditor.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback")\n  }\n}',...DefaultEditor.parameters?.docs?.source}}},EmptyEditor.parameters={...EmptyEditor.parameters,docs:{...EmptyEditor.parameters?.docs,source:{originalSource:'{\n  args: {\n    id: NAME,\n    name: NAME,\n    value: "",\n    hasErrors: undefined,\n    helperText: null,\n    onChange: (editor, data, value) => action(value),\n    dataQa: NAME\n  }\n}',...EmptyEditor.parameters?.docs?.source}}},JSONEditor.parameters={...JSONEditor.parameters,docs:{...JSONEditor.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    id: "demoCodeEditorId",\n    value: JSON.stringify(DEFAULT_JSON_VALUE, null, " "),\n    mode: "json"\n  }\n}',...JSONEditor.parameters?.docs?.source}}},XMLEditor.parameters={...XMLEditor.parameters,docs:{...XMLEditor.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    id: "demoCodeEditorId",\n    value: DEFAULT_XML_CONTENT,\n    mode: "xml"\n  }\n}',...XMLEditor.parameters?.docs?.source}}},ProtobufEditor.parameters={...ProtobufEditor.parameters,docs:{...ProtobufEditor.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    id: "demoCodeEditorId",\n    value: DEFAULT_PROTOBUF_CONTENT,\n    mode: "protobuf"\n  }\n}',...ProtobufEditor.parameters?.docs?.source}}},ReadOnlyEditor.parameters={...ReadOnlyEditor.parameters,docs:{...ReadOnlyEditor.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    id: "demoCodeEditorId",\n    value: JSON.stringify(DEFAULT_JSON_VALUE, null, " "),\n    mode: "json",\n    readOnly: true\n  }\n}',...ReadOnlyEditor.parameters?.docs?.source}}},ExpandableEditor.parameters={...ExpandableEditor.parameters,docs:{...ExpandableEditor.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    id: "demoCodeEditorId",\n    value: JSON.stringify(DEFAULT_JSON_VALUE, null, " "),\n    mode: "json",\n    expandable: true\n  }\n}',...ExpandableEditor.parameters?.docs?.source}}},WithHelperText.parameters={...WithHelperText.parameters,docs:{...WithHelperText.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    id: "demoCodeEditorId",\n    value: JSON.stringify(DEFAULT_JSON_VALUE, null, " "),\n    mode: "json",\n    expandable: true,\n    helperText: "A sample helper text"\n  }\n}',...WithHelperText.parameters?.docs?.source}}},WithError.parameters={...WithError.parameters,docs:{...WithError.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    id: "demoCodeEditorId",\n    value: JSON.stringify(DEFAULT_JSON_VALUE, null, " "),\n    mode: "json",\n    expandable: true,\n    helperText: "A sample error text",\n    hasErrors: true\n  }\n}',...WithError.parameters?.docs?.source}}},WithWarning.parameters={...WithWarning.parameters,docs:{...WithWarning.parameters?.docs,source:{originalSource:'{\n  args: {\n    onChange: action("callback"),\n    id: "demoCodeEditorId",\n    value: JSON.stringify(DEFAULT_JSON_VALUE, null, " "),\n    mode: "json",\n    expandable: true,\n    helperText: "A sample warning text",\n    hasWarnings: true\n  }\n}',...WithWarning.parameters?.docs?.source}}},FullScreenEditor.parameters={...FullScreenEditor.parameters,docs:{...FullScreenEditor.parameters?.docs,source:{originalSource:'(): JSX.Element => {\n  const [fullScreen, setFullScreen] = useState(false);\n  const onToggleFullScreen = () => {\n    setFullScreen(!fullScreen);\n  };\n  return <>\n            <SolaceCheckBox name="fullScreenCheckbox" label="Full Screen" checked={fullScreen} onChange={() => onToggleFullScreen()} />\n            <SolaceCodeEditor id="demoCodeEditorId" value={JSON.stringify(DEFAULT_JSON_VALUE, null, " ")} mode="json" fullScreen={fullScreen} onChange={action("callback")} />\n        </>;\n}',...FullScreenEditor.parameters?.docs?.source}}},ControlledEditor.parameters={...ControlledEditor.parameters,docs:{...ControlledEditor.parameters?.docs,source:{originalSource:'(): JSX.Element => {\n  const [value, setValue] = useState("");\n  const handleChange = (_editor: unknown, _data: unknown, value: string) => {\n    setValue(value);\n  };\n  return <div>\n            <SolaceCodeEditor id="controlledEditor" value={value} mode="json" onChange={handleChange} />\n            <div>Returned Data:</div>\n            <div>{JSON.stringify(value)}</div>\n        </div>;\n}',...ControlledEditor.parameters?.docs?.source}}},UpdateData.parameters={...UpdateData.parameters,docs:{...UpdateData.parameters?.docs,source:{originalSource:'(): JSX.Element => {\n  const [initValue, setInitValue] = useState("");\n  const [value, setValue] = useState("");\n  const handleChange = (_editor: unknown, _data: unknown, value: string) => {\n    setValue(value);\n  };\n  return <div>\n            <SolaceCodeEditor id="controlledEditor" value={initValue} mode="json" onChange={handleChange} />\n            <button onClick={() => {\n      setInitValue(fetchRandomDataSet(DATA));\n    }}>\n                Update data\n            </button>\n            <div>Returned Data:</div>\n            <div>{JSON.stringify(value)}</div>\n        </div>;\n}',...UpdateData.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultEditor","EmptyEditor","JSONEditor","XMLEditor","ProtobufEditor","ReadOnlyEditor","ExpandableEditor","WithHelperText","WithError","WithWarning","FullScreenEditor","ControlledEditor","UpdateData"]}}]);