name: MRC Usage Report Generation

on:
  schedule:
    - cron: "0 12 * * *" # Daily at 8 AM EST
  workflow_dispatch: # Manual trigger
  push:
    branches:
      - iphadte/DATAGO-103052 # Trigger on pushes to the main branch
      # - feature/mrc-usage-report-data # Trigger on pushes to the main branch

jobs:
  generate-and-publish-report:
    runs-on: ubuntu-latest
    permissions:
      contents: write # For checking out repositories
      pages: write # For publishing to GitHub Pages
      id-token: write # For OIDC authentication with GitHub Pages

    steps:
      - name: Checkout maas-react-components (current repo)
        uses: actions/checkout@v4
        with:
          ref: feature/mrc-usage-report-data
          path: maas-react-components-repo

      - name: Clean up old report data
        run: rm -rf maas-react-components-repo/mrc-usage-report-data

      - name: Print directory structure (maas-react-components)
        run: |
          echo "==== DIRECTORY STRUCTURE INFORMATION ===="
          echo "Current working directory: $(pwd)"
          echo "maas-react-components-repo location: $(pwd)/maas-react-components-repo"
          ls -la maas-react-components-repo

      - name: Checkout maas-ui
        uses: actions/checkout@v4
        with:
          repository: SolaceDev/maas-ui
          ref: sthomas/mrc-usage-report
          path: maas-ui-repo
          token: ${{ secrets.PACKAGES_ADMIN_TOKEN }}

      - name: Print directory structure (maas-ui)
        run: |
          echo "==== MAAS-UI DIRECTORY STRUCTURE ===="
          echo "maas-ui-repo location: $(pwd)/maas-ui-repo"
          ls -la maas-ui-repo
          echo "maas-ui-repo/tools location: $(pwd)/maas-ui-repo/tools"
          ls -la maas-ui-repo/tools || echo "tools directory not found"
          echo "maas-ui-repo/tools/mrc-usage-report location: $(pwd)/maas-ui-repo/tools/mrc-usage-report"
          ls -la maas-ui-repo/tools/mrc-usage-report || echo "mrc-usage-report directory not found"

      - name: Checkout maas-ops-ui
        uses: actions/checkout@v4
        with:
          repository: SolaceDev/maas-ops-ui
          ref: iphadte/DATAGO-103044
          path: maas-ops-ui-repo
          token: ${{ secrets.PACKAGES_ADMIN_TOKEN }}

      - name: Print directory structure (maas-ops-ui)
        run: |
          echo "==== MAAS-OPS-UI DIRECTORY STRUCTURE ===="
          echo "maas-ops-ui-repo location: $(pwd)/maas-ops-ui-repo"
          ls -la maas-ops-ui-repo
          echo "maas-ops-ui-repo/tools location: $(pwd)/maas-ops-ui-repo/tools"
          ls -la maas-ops-ui-repo/tools || echo "tools directory not found"
          echo "maas-ops-ui-repo/tools/mrc-usage-report location: $(pwd)/maas-ops-ui-repo/tools/mrc-usage-report"
          ls -la maas-ops-ui-repo/tools/mrc-usage-report || echo "mrc-usage-report directory not found"
          echo "maas-ops-ui-repo/tools/mrc-report-merger location: $(pwd)/maas-ops-ui-repo/tools/mrc-report-merger"
          ls -la maas-ops-ui-repo/tools/mrc-report-merger || echo "mrc-report-merger directory not found"
          echo "maas-ops-ui-repo/tools/json-splitter location: $(pwd)/maas-ops-ui-repo/tools/json-splitter"
          ls -la maas-ops-ui-repo/tools/json-splitter || echo "json-splitter directory not found"

      - name: Checkout broker manager
        uses: actions/checkout@v4
        with:
          repository: SolaceDev/broker-manager
          ref: mrc-usage-report
          path: broker-manager-repo
          token: ${{ secrets.PACKAGES_ADMIN_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Generate all usage reports
        run: |
          npm i
          npm run build
          npm start -- --all --maas-ui-path ../../../maas-ui-repo --maas-ops-ui-path ../../../maas-ops-ui-repo --broker-manager-path ../../../broker-manager-repo --format json,html
        working-directory: maas-react-components-repo/tools/mrc-usage-report

      - name: Split merged JSON
        run: |
          echo "==== SPLIT MERGED JSON ===="
          echo "Current working directory: $(pwd)"
          ls -la
          echo "Checking for input file:"
          ls -la ../mrc-usage-report/reports/mrc-usage-report-all.json || echo "merged-report.json not found"
          echo "Creating reports directory if it doesn't exist..."
          echo "Installing dependencies..."
          npm install

          npm install
          npm run build

          echo "Running npm start with parameters..."
          npm start -- -i ../mrc-usage-report/reports/mrc-usage-report-all.json -o ../../../maas-react-components-repo/mrc-usage-report-data
          echo "--- Verifying contents of output directory ---"
          pwd
          ls -lR ../../../maas-react-components-repo/mrc-usage-report-data

          echo "Listing generated files:"
          find . -type f -name "*.json" | sort

          echo "Contents of first split file (if any):"
          find . -type f -name "*.json" | sort | head -n 1 | xargs cat || echo "No split files found"

        working-directory: maas-react-components-repo/tools/mrc-usage-report-json-splitter

      - name: Upload merged reports
        uses: actions/upload-artifact@v4
        with:
          name: merged-reports
          path: |
            maas-react-components-repo/tools/mrc-usage-report/reports/
            maas-react-components-repo/mrc-usage-report-data

      - name: Commit and push report data
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |

          cd maas-react-components-repo
          echo "--- Verifying directory before git add ---"
          echo "Current working directory: $(pwd)"
          echo "Listing contents of current directory:"
          ls -la
          echo "Checking mrc-usage-report-data directory:"
          ls -lR mrc-usage-report-data
          pwd

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          echo "--- Git status before add ---"
          git status
          git add .
          echo "--- Git status after add ---"
          git status

          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            set -e
            COMMIT_MESSAGE="feat: add mrc usage report data for $(date +'%Y-%m-%d %H:%M')"
            git commit --no-verify -m "$COMMIT_MESSAGE"
            git push
          fi
