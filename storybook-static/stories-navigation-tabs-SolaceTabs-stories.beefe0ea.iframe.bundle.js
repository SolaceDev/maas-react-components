"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[4240],{"./src/stories/navigation/tabs/SolaceTabs.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{DefaultTabs:()=>DefaultTabs,DisabledTabs:()=>DisabledTabs,FullWidthTabs:()=>FullWidthTabs,IncreaseFontTabs:()=>IncreaseFontTabs,ScrollableTabs:()=>ScrollableTabs,WithCallbackTabs:()=>WithCallbackTabs,WithIconTabs:()=>WithIconTabs,WithSingleTab:()=>WithSingleTab,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../dist/index.js");_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTabs.displayName="SolaceTabs",_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceNotificationCounter.displayName="SolaceNotificationCounter",_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceButton.displayName="SolaceButton";const __WEBPACK_DEFAULT_EXPORT__={title:"Navigation/Tabs/Standard",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTabs,parameters:{},argTypes:{id:{control:{type:"text"},description:"Optional ID of this component",table:{defaultValue:{summary:'""'}}},tabs:{control:{type:"object"},description:"Array of tab objects with label, value, and optional properties",table:{defaultValue:{summary:"[]"}}},activeTabValue:{control:{type:"text"},description:"The value of the active tab",table:{defaultValue:{summary:'""'}}},onTabClick:{action:"clicked",description:"Callback fired when a tab is clicked",table:{defaultValue:{summary:"undefined"}}},size:{control:{type:"select",options:["sm","md"]},description:"Size of the tab font. Uses TabSize enum from https://github.com/SolaceDev/maas-react-components/blob/main/src/types/solaceTabs.ts",table:{defaultValue:{summary:'"sm"'}}},variant:{control:{type:"select",options:["standard","fullWidth","scrollable"]},description:"The variant to use. Uses TabVariant enum from https://github.com/SolaceDev/maas-react-components/blob/main/src/types/solaceTabs.ts",table:{defaultValue:{summary:'"standard"'}}},dataQa:{control:{type:"text"},description:"Data QA attribute for testing",table:{defaultValue:{summary:'""'}}},dataTags:{control:{type:"text"},description:"Data tags attribute for additional metadata",table:{defaultValue:{summary:'""'}}}}},DefaultTabs={args:{tabs:[{label:"Tab One",value:"tab_one",href:"#"},{label:"Tab Two",value:"tab_two",href:"#"},{label:"Tab Three",value:"tab_three",href:"#"}],activeTabValue:"tab_one"}},IncreaseFontTabs={args:{tabs:[{label:"Tab One",value:"tab_one"},{label:"Tab Two",value:"tab_two"},{label:"Tab Three",value:"tab_three"}],activeTabValue:"tab_one",size:"md"}},DisabledTabs={args:{tabs:[{label:"Tab One",value:"tab_one",disabled:!0},{label:"Tab Two",value:"tab_two"},{label:"Tab Three",value:"tab_three"}],activeTabValue:"tab_two"}},WithCallbackTabs=()=>{const[activeTabValue,setActiveTabValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("tab_one");return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTabs,{activeTabValue,onTabClick:tabValue=>{setActiveTabValue(tabValue)},tabs:[{label:"Tab One",value:"tab_one"},{label:"Tab Two",value:"tab_two"},{label:"Tab Three",value:"tab_three"}]})},WithIconTabs=()=>{const[activeTabValue,setActiveTabValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("tab_one"),[count,setCount]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTabs,{activeTabValue,onTabClick:tabValue=>{setActiveTabValue(tabValue)},tabs:[{label:react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",gap:"4px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Subscribed"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceNotificationCounter,{value:count,show:0!==count,size:18,animationDuration:500,animationRepeatsInitialCount:1,animationRepeatsUpdateCount:1,title:`${count} new event${count>1?"s":""}`})),value:"tab_one"},{label:react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{display:"flex",gap:"4px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Published"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceNotificationCounter,{value:2,size:18,animationRepeatsInitialCount:1,animationRepeatsUpdateCount:1,title:"2 new events"})),value:"tab_two"},{label:"Tab Three",value:"tab_three"}]}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{marginTop:"24px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceButton,{variant:"call-to-action",onClick:()=>{setCount(count+1)}},"Increase")))},WithSingleTab={args:{tabs:[{label:"Tab One",value:"tab_one",href:"#"}],activeTabValue:"tab_one"}},FullWidthTabs={args:{tabs:[{label:"Tab One",value:"tab_one",href:"#"},{label:"Tab Two",value:"tab_two",href:"#"},{label:"Tab Three",value:"tab_three",href:"#"}],activeTabValue:"tab_one",variant:"fullWidth"}},ScrollableTabs=()=>{const[activeTabValue,setActiveTabValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("tab_one");return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"800px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTabs,{activeTabValue,onTabClick:tabValue=>{setActiveTabValue(tabValue)},variant:"scrollable",tabs:[{label:"Tab One with Long Name",value:"tab_one",href:"#"},{label:"Tab Two with Long Name",value:"tab_two",href:"#"},{label:"Tab Three with Long Name",value:"tab_three",href:"#"},{label:"Tab Four",value:"tab_four",href:"#"},{label:"Tab Five with Long Name",value:"tab_five",href:"#"},{label:"Tab Six",value:"tab_six",href:"#"}]}))};DefaultTabs.parameters={...DefaultTabs.parameters,docs:{...DefaultTabs.parameters?.docs,source:{originalSource:'{\n  args: {\n    tabs: [{\n      label: "Tab One",\n      value: "tab_one",\n      href: "#"\n    }, {\n      label: "Tab Two",\n      value: "tab_two",\n      href: "#"\n    }, {\n      label: "Tab Three",\n      value: "tab_three",\n      href: "#"\n    }],\n    activeTabValue: "tab_one"\n  }\n}',...DefaultTabs.parameters?.docs?.source}}},IncreaseFontTabs.parameters={...IncreaseFontTabs.parameters,docs:{...IncreaseFontTabs.parameters?.docs,source:{originalSource:'{\n  args: {\n    tabs: [{\n      label: "Tab One",\n      value: "tab_one"\n    }, {\n      label: "Tab Two",\n      value: "tab_two"\n    }, {\n      label: "Tab Three",\n      value: "tab_three"\n    }],\n    activeTabValue: "tab_one",\n    size: "md"\n  }\n}',...IncreaseFontTabs.parameters?.docs?.source}}},DisabledTabs.parameters={...DisabledTabs.parameters,docs:{...DisabledTabs.parameters?.docs,source:{originalSource:'{\n  args: {\n    tabs: [{\n      label: "Tab One",\n      value: "tab_one",\n      disabled: true\n    }, {\n      label: "Tab Two",\n      value: "tab_two"\n    }, {\n      label: "Tab Three",\n      value: "tab_three"\n    }],\n    activeTabValue: "tab_two"\n  }\n}',...DisabledTabs.parameters?.docs?.source}}},WithCallbackTabs.parameters={...WithCallbackTabs.parameters,docs:{...WithCallbackTabs.parameters?.docs,source:{originalSource:'(): ReactNode => {\n  const [activeTabValue, setActiveTabValue] = useState("tab_one");\n  const handleTabClick = (tabValue: string) => {\n    setActiveTabValue(tabValue);\n  };\n  return <SolaceTabs activeTabValue={activeTabValue} onTabClick={handleTabClick} tabs={[{\n    label: "Tab One",\n    value: "tab_one"\n  }, {\n    label: "Tab Two",\n    value: "tab_two"\n  }, {\n    label: "Tab Three",\n    value: "tab_three"\n  }]} />;\n}',...WithCallbackTabs.parameters?.docs?.source}}},WithIconTabs.parameters={...WithIconTabs.parameters,docs:{...WithIconTabs.parameters?.docs,source:{originalSource:'(): ReactNode => {\n  const [activeTabValue, setActiveTabValue] = useState("tab_one");\n  const [count, setCount] = useState(0);\n  const handleTabClick = (tabValue: string) => {\n    setActiveTabValue(tabValue);\n  };\n  const handleButtonClick = () => {\n    setCount(count + 1);\n  };\n  const renderStyledTab1 = () => <div style={{\n    display: "flex",\n    gap: "4px"\n  }}>\n            <div>Subscribed</div>\n            <SolaceNotificationCounter value={count} show={count !== 0} size={18} animationDuration={500} animationRepeatsInitialCount={1} animationRepeatsUpdateCount={1} title={`${count} new event${count > 1 ? "s" : ""}`} />\n        </div>;\n  const renderStyledTab2 = () => <div style={{\n    display: "flex",\n    gap: "4px"\n  }}>\n            <div>Published</div>\n            <SolaceNotificationCounter value={2} size={18} animationRepeatsInitialCount={1} animationRepeatsUpdateCount={1} title="2 new events" />\n        </div>;\n  return <>\n            <SolaceTabs activeTabValue={activeTabValue} onTabClick={handleTabClick} tabs={[{\n      label: renderStyledTab1(),\n      value: "tab_one"\n    }, {\n      label: renderStyledTab2(),\n      value: "tab_two"\n    }, {\n      label: "Tab Three",\n      value: "tab_three"\n    }]} />\n            <div style={{\n      marginTop: "24px"\n    }}>\n                <SolaceButton variant="call-to-action" onClick={handleButtonClick}>\n                    Increase\n                </SolaceButton>\n            </div>\n        </>;\n}',...WithIconTabs.parameters?.docs?.source}}},WithSingleTab.parameters={...WithSingleTab.parameters,docs:{...WithSingleTab.parameters?.docs,source:{originalSource:'{\n  args: {\n    tabs: [{\n      label: "Tab One",\n      value: "tab_one",\n      href: "#"\n    }],\n    activeTabValue: "tab_one"\n  }\n}',...WithSingleTab.parameters?.docs?.source}}},FullWidthTabs.parameters={...FullWidthTabs.parameters,docs:{...FullWidthTabs.parameters?.docs,source:{originalSource:'{\n  args: {\n    tabs: [{\n      label: "Tab One",\n      value: "tab_one",\n      href: "#"\n    }, {\n      label: "Tab Two",\n      value: "tab_two",\n      href: "#"\n    }, {\n      label: "Tab Three",\n      value: "tab_three",\n      href: "#"\n    }],\n    activeTabValue: "tab_one",\n    variant: "fullWidth"\n  }\n}',...FullWidthTabs.parameters?.docs?.source}}},ScrollableTabs.parameters={...ScrollableTabs.parameters,docs:{...ScrollableTabs.parameters?.docs,source:{originalSource:'(): ReactNode => {\n  const [activeTabValue, setActiveTabValue] = useState("tab_one");\n  const handleTabClick = (tabValue: string) => {\n    setActiveTabValue(tabValue);\n  };\n  return <div style={{\n    width: "800px"\n  }}>\n            <SolaceTabs activeTabValue={activeTabValue} onTabClick={handleTabClick} variant="scrollable" tabs={[{\n      label: "Tab One with Long Name",\n      value: "tab_one",\n      href: "#"\n    }, {\n      label: "Tab Two with Long Name",\n      value: "tab_two",\n      href: "#"\n    }, {\n      label: "Tab Three with Long Name",\n      value: "tab_three",\n      href: "#"\n    }, {\n      label: "Tab Four",\n      value: "tab_four",\n      href: "#"\n    }, {\n      label: "Tab Five with Long Name",\n      value: "tab_five",\n      href: "#"\n    }, {\n      label: "Tab Six",\n      value: "tab_six",\n      href: "#"\n    }]} />\n        </div>;\n}',...ScrollableTabs.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultTabs","IncreaseFontTabs","DisabledTabs","WithCallbackTabs","WithIconTabs","WithSingleTab","FullWidthTabs","ScrollableTabs"]}}]);