[
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/MEMDialog.tsx",
    "props": [
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleTypeChange"
      },
      {
        "name": "id",
        "type": "string",
        "value": "eventMesh[type]"
      },
      {
        "name": "name",
        "type": "string",
        "value": "eventMesh[type]"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "eventMesh[type]"
      },
      {
        "name": "label",
        "type": "variable",
        "value": "LABEL_TYPE"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "memContent.brokerType"
      },
      {
        "name": "required",
        "type": "expression",
        "value": "mode === \"create\""
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "mode !== \"create\""
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "isLoading"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SchemaRegistryConfigCard.tsx",
    "props": [
      {
        "name": "dataQa",
        "type": "string",
        "value": "schemaRegistry[type]"
      },
      {
        "name": "id",
        "type": "string",
        "value": "schemaRegistry[type]"
      },
      {
        "name": "label",
        "type": "string",
        "value": "Type"
      },
      {
        "name": "name",
        "type": "string",
        "value": "schemaRegistry[type]"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "() => undefined"
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "content.type"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SchemaRegistryAuthList.tsx",
    "props": [
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`eventBroker[kafka][schemaRegistry][${selectedAuthType}][${inputField}]`"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "disabled"
      },
      {
        "name": "id",
        "type": "expression",
        "value": "`eventBroker[kafka][schemaRegistry][${selectedAuthType}][${inputField}]`"
      },
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "eventBrokerFormFieldLabels[inputField]"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChange(e.value)"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "readOnly"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "onClose",
        "type": "variable",
        "value": "onBlur"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error?.message ? en.common.error.selectValueRequired : \"\""
      },
      {
        "name": "getOptionDisplayValue",
        "type": "function",
        "value": "(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst match = environmentVariableMenuOptions.find((props) => props.value === value);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn match ? match.name : \"\";\n\t\t\t\t\t\t\t\t\t\t\t\t}"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SchemaRegistryAuthList.tsx",
    "props": [
      {
        "name": "dataQa",
        "type": "string",
        "value": "eventBroker[kafka][schemaRegistry][authType]"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "disabled"
      },
      {
        "name": "id",
        "type": "string",
        "value": "eventBroker[kafka][schemaRegistry][authType]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "eventBrokerFormFieldLabels.authentication"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\tclearErrors(`kafka.schemaRegistry.${index}.${selectedAuthType}`);\n\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t}"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "readOnly"
      },
      {
        "name": "required",
        "type": "variable",
        "value": "required"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/KafkaAuthList.tsx",
    "props": [
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`eventBroker[kafka][authentication][${authKey}][${inputField}]`"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "kafkaDelimiterIsNotSet || loading"
      },
      {
        "name": "id",
        "type": "expression",
        "value": "`eventBroker[kafka][authentication][${KafkaAuthTypes[authKey]}][${inputField}]`"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "eventBrokerFormFieldLabels[inputField]"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChange(e.value)"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "isJaasConfigPassword || readOnly"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "onClose",
        "type": "variable",
        "value": "onBlur"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error?.message ? en.common.error.selectValueRequired : \"\""
      },
      {
        "name": "getOptionDisplayValue",
        "type": "function",
        "value": "(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst match = environmentVariableMenuOptions.find((props) => props.value === value);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn match ? match.name : \"\";\n\t\t\t\t\t\t\t\t\t\t\t\t}"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/KafkaAuthList.tsx",
    "props": [
      {
        "name": "dataQa",
        "type": "string",
        "value": "eventBroker[kafka][authentication][authType]"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "kafkaDelimiterIsNotSet || loading"
      },
      {
        "name": "id",
        "type": "string",
        "value": "eventBroker[kafka][authentication][authType]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "eventBrokerFormFieldLabels.authentication"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\tclearErrors(`kafka.authentication.auth.${selectedAuthType}`);\n\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t}"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "readOnly"
      },
      {
        "name": "required",
        "type": "variable",
        "value": "required"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/KafkaAuthList.tsx",
    "props": [
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`eventBroker[kafka][authentication][saslscram][saslMechanism]`"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "kafkaDelimiterIsNotSet || loading"
      },
      {
        "name": "id",
        "type": "string",
        "value": "eventBroker[kafka][authentication][saslscram][saslMechanism]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "eventBrokerFormFieldLabels.saslMechanism"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChange(e.value)"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "readOnly"
      },
      {
        "name": "required",
        "type": "variable",
        "value": "required"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SolaceMessagingServiceDialogCard.tsx",
    "props": [
      {
        "name": "dataQa",
        "type": "string",
        "value": "eventBroker[solace][messaging][type]"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "readOnly"
      },
      {
        "name": "id",
        "type": "string",
        "value": "eventBroker[type]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "eventBrokerFormFieldLabels.transport"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => handleTransportChange(e.value)"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "readOnly"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "width",
        "type": "string",
        "value": "100%"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/MessagingServiceDialog.tsx",
    "props": [
      {
        "name": "dataQa",
        "type": "string",
        "value": "eventBroker[type]"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "isLoading"
      },
      {
        "name": "id",
        "type": "string",
        "value": "eventBroker[type]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "eventBrokerFormFieldLabels.type"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChange(e.value)"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "readOnly || !!type || !!content.messagingServiceType || !!content.solaceCloudMessagingServiceId"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/entityList/MessagingServiceAssociationForm.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "id"
      },
      {
        "name": "name",
        "type": "string",
        "value": "name"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "environment[select]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "`Environment`"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "onEnvironmantChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedEnvironmentId"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!selectQueryError.environmentError || !!validationError.environmentError"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "selectQueryError.environmentError ?? validationError.environmentError"
      },
      {
        "name": "maxHeight",
        "type": "variable",
        "value": "DROPDOWN_LIST_MAX_HEIGHT"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/entityList/DeployToEnvironmentDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "memAssociation[environment]"
      },
      {
        "name": "name",
        "type": "string",
        "value": "memAssociation[environment]"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "memAssociation[environment]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.eventApiProduct.labels.environment"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleEnvironmentSelectChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedEnvironmentId"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!validationError.environmentError"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "validationError.environmentError"
      },
      {
        "name": "maxHeight",
        "type": "variable",
        "value": "dropdownListMaxHeight"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/entityList/DeployToEnvironmentDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "memAssociation[eventMesh]"
      },
      {
        "name": "name",
        "type": "string",
        "value": "memAssociation[eventMesh]"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "memAssociation[eventMesh]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.eventApiProduct.labels.mem"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleEventMeshSelectChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedEventMeshId"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "!selectedEnvironmentId"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!validationError.eventMeshError"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "validationError.eventMeshError"
      },
      {
        "name": "maxHeight",
        "type": "variable",
        "value": "dropdownListMaxHeight"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/entityList/DeployToEnvironmentDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "memAssociation[messagingService]"
      },
      {
        "name": "name",
        "type": "string",
        "value": "memAssociation[messagingService]"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "memAssociation[messagingService]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.eventApiProduct.labels.messagingService"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleMessagingServiceSelectChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedMessagingServiceId"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "!selectedEventMeshId"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!validationError.messagingServiceError"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "validationError.messagingServiceError"
      },
      {
        "name": "maxHeight",
        "type": "variable",
        "value": "dropdownListMaxHeight"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/entityList/environment/ApplicationVersionAssociationForm.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "id"
      },
      {
        "name": "name",
        "type": "string",
        "value": "name"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "applicationVersion[select]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "`Application version to add`"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "onApplicationVersionChange"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "selectedApplicationVersion?.id"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "maxHeight",
        "type": "variable",
        "value": "DROPDOWN_LIST_MAX_HEIGHT"
      },
      {
        "name": "helperText",
        "type": "variable",
        "value": "helperText"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/entityList/AddEventApiProductVersionDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "eapAssociation[domain]"
      },
      {
        "name": "name",
        "type": "string",
        "value": "eapAssociation[domain]"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "eapAssociation[domain]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.eventApiProduct.labels.applicationDomain"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleApplicationDomainChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedApplicationDomainId"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!validationError.applicationDomainError"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "validationError.applicationDomainError"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/entityList/AddEventApiProductVersionDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "eapAssociation[eventApiProduct]"
      },
      {
        "name": "name",
        "type": "string",
        "value": "eapAssociation[eventApiProduct]"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "eapAssociation[eventApiProduct]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.eventApiProduct.labels.eventApiProduct"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleEventApiProductSelectChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedEventApiProductId"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "!selectedApplicationDomainId"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!validationError.eventApiProductError"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "validationError.eventApiProductError"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/entityList/AddEventApiProductVersionDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "eapAssociation[eventApiProductVersion]"
      },
      {
        "name": "name",
        "type": "string",
        "value": "eapAssociation[eventApiProductVersion]"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "eapAssociation[eventApiProductVersion]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.eventApiProduct.labels.eventApiProductVersion"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleEventApiProductVersionSelectChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedEventApiProductVersionId"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "!selectedEventApiProductId"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!validationError.eventApiProductVersionError"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "validationError.eventApiProductVersionError"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/userAccess/rrbac/components/UserAccessDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "resourceRoleSelect"
      },
      {
        "name": "name",
        "type": "string",
        "value": "resourceRoleSelect"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "resourceRoleSelect"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "isDisabled"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "role"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => onResourceRoleChange(resourceAssignment, event.value)"
      },
      {
        "name": "getOptionDisplayValue",
        "type": "function",
        "value": "(value: string) => RESOURCE_LABEL_BY_ROLE[value]"
      },
      {
        "name": "menuAnchorOrigin",
        "type": "object",
        "value": "{ vertical: \"bottom\", horizontal: \"left\" }"
      },
      {
        "name": "menuTransformOrigin",
        "type": "object",
        "value": "{ vertical: \"top\", horizontal: \"left\" }"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/resources/SelectEnvironmentDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "envDialog-select-environment"
      },
      {
        "name": "name",
        "type": "string",
        "value": "envDialog-select-environment"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "envDialog-select-environment"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/EntityDetailModal/EntityDetailModal.tsx",
    "props": [
      {
        "name": "value",
        "type": "expression",
        "value": "version.id"
      },
      {
        "name": "name",
        "type": "string",
        "value": "Entity List"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "onChangeVersion"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "entityVersionSelect"
      },
      {
        "name": "width",
        "type": "string",
        "value": "100%"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/CustomAttributes/CustomAttributeDefinition.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleSelectUpdate(e.value, \"valueType\");\n\t\t\t\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "getOptionDisplayValue",
        "type": "function",
        "value": "(value) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst match = customAttributesValueTypeOptionsWithMultiValue.find((props) => props.value === value);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn match ? match.name : \"\";\n\t\t\t\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`${caKey}-value-type-select`"
      },
      {
        "name": "width",
        "type": "expression",
        "value": "\"100%\""
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!nameErrorMsg && !!attributeErrorMsg"
      },
      {
        "name": "menuAnchorOrigin",
        "type": "object",
        "value": "{ vertical: \"bottom\", horizontal: \"left\" }"
      },
      {
        "name": "menuTransformOrigin",
        "type": "object",
        "value": "{ vertical: \"top\", horizontal: \"left\" }"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/CustomAttributes/CustomAttributeDefinition.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleSelectUpdate(e.value, \"scope\");\n\t\t\t\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`${caKey}-scope-select`"
      },
      {
        "name": "width",
        "type": "expression",
        "value": "\"100%\""
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "isDomainManager"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!nameErrorMsg && !!attributeErrorMsg && !isDomainManager"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/VersionState/VersionStateDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "`${entityName}[versionState]`"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleStateSelectionChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "versionStateId"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "stateSelect"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/designer/topicAddress/ConfigVariableDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "enumerationVersion"
      },
      {
        "name": "label",
        "type": "string",
        "value": "Version"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "enumerationVersionName"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleVersionChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedEnumVersionId"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "!selectedEnumOption || getEnumVersions.isLoading"
      },
      {
        "name": "getOptionDisplayValue",
        "type": "function",
        "value": "(value) => valueToMenuItemMap.get(value) || \"\""
      },
      {
        "name": "width",
        "type": "string",
        "value": "35%"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useApplicationDomainSelect.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "applicationDomainSelect-readOnly"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "title ? title : \"Application Domain\""
      },
      {
        "name": "inlineLabel",
        "type": "variable",
        "value": "inlineLabel"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "selectedApplicationDomain?.value"
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "value": "true"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useCatalogEntityVersionSelect.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "`${entityTypeToLabel(entityType)} Version`"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedEntityVersionId"
      },
      {
        "name": "name",
        "type": "string",
        "value": "Entity List"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleEntityVersionChange"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "entityVersionSelect"
      },
      {
        "name": "width",
        "type": "string",
        "value": "100%"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useEntityVersionIncrementSelect.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "versionIncrementStrategySelect"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleStateSelectionChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedVersionIncrementStrategy"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "dataQa ?? \"versionIncrementStrategySelect\""
      },
      {
        "name": "label",
        "type": "string",
        "value": "Version Incrementing"
      },
      {
        "name": "width",
        "type": "expression",
        "value": "width ?? \"100%\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/components/SearchPanel/filters/DefaultFilterSingleSelect.tsx",
    "props": [
      {
        "name": "id",
        "type": "expression",
        "value": "`${filterType}Select`"
      },
      {
        "name": "name",
        "type": "expression",
        "value": "`${filterType}Select`"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`${filterType}Select`"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "FilterTypeLabel[filterType]"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleSharedTypeChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedValue"
      },
      {
        "name": "displayEmpty",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "onOpen",
        "type": "variable",
        "value": "handleOpen"
      },
      {
        "name": "onClose",
        "type": "variable",
        "value": "handleClose"
      },
      {
        "name": "open",
        "type": "variable",
        "value": "openDropdown"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/stories/components/ObjectRelationshipGraph.stories.tsx",
    "props": [
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleTypeChange"
      },
      {
        "name": "id",
        "type": "string",
        "value": "objectRelationship[type]"
      },
      {
        "name": "name",
        "type": "string",
        "value": "objectRelationship[type]"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "objectRelationship[type]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "\"Graph Type\""
      },
      {
        "name": "value",
        "type": "variable",
        "value": "layoutType"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/runtimeAgents/RuntimeAgentForm.tsx",
    "props": [
      {
        "name": "aria-label",
        "type": "string",
        "value": "Agent Mode"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "loading"
      },
      {
        "name": "getOptionDisplayValue",
        "type": "function",
        "value": "(value: string) => EMA_MODES_LABELS[value]"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!getRuntimeAgentModeErrorMessage"
      },
      {
        "name": "helperText",
        "type": "variable",
        "value": "getRuntimeAgentModeErrorMessage"
      },
      {
        "name": "name",
        "type": "string",
        "value": "agent mode"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleDiscoveryScanModeChange"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "!!agentId"
      },
      {
        "name": "width",
        "type": "string",
        "value": "620px"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "eventManagementAgent.runtimeAgentMode"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/runtimeAgents/ExistingMessagingServices.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "messagingServiceTypeSelect"
      },
      {
        "name": "name",
        "type": "string",
        "value": "messagingServiceTypeSelect"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "messagingServiceTypeSelect"
      },
      {
        "name": "label",
        "type": "string",
        "value": "Type"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleMessagingServiceTypeChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedMessagingServiceType"
      },
      {
        "name": "width",
        "type": "string",
        "value": "30%"
      },
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/architecture/objectRelationGraph/ObjectRelationshipGraphSettingsMenu.tsx",
    "props": [
      {
        "name": "id",
        "type": "expression",
        "value": "\"layoutOptions\""
      },
      {
        "name": "name",
        "type": "expression",
        "value": "\"layoutOptions\""
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "\"layoutOptions\""
      },
      {
        "name": "value",
        "type": "variable",
        "value": "layoutType"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleLayoutTypeChange"
      },
      {
        "name": "width",
        "type": "expression",
        "value": "\"90px\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/architecture/objectRelationGraph/ObjectRelationshipGraphSettingsMenu.tsx",
    "props": [
      {
        "name": "id",
        "type": "expression",
        "value": "\"levelDepthOptions\""
      },
      {
        "name": "name",
        "type": "expression",
        "value": "\"levelDepthOptions\""
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "\"levelDepthOptions\""
      },
      {
        "name": "value",
        "type": "variable",
        "value": "levelDepthString"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleLevelDepthChange"
      },
      {
        "name": "width",
        "type": "expression",
        "value": "\"55px\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/architecture/entityList/BulkAddDialog.tsx",
    "props": [
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleEnvironmentChange"
      },
      {
        "name": "id",
        "type": "string",
        "value": "addToAppVersions[environmentSelect]"
      },
      {
        "name": "name",
        "type": "string",
        "value": "addToAppVersions[environmentSelect]"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "addToAppVersionsBulkPromotion[environmentSelect]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "\"Environment\""
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedEnvironmentId"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "isLoading"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!validationError.environmentInputError"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "validationError.environmentInputError"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/architecture/entityList/BulkAddDialog.tsx",
    "props": [
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleEventMeshChange"
      },
      {
        "name": "id",
        "type": "string",
        "value": "addToAppVersions[eventMeshSelect]"
      },
      {
        "name": "name",
        "type": "string",
        "value": "addToAppVersions[eventMeshSelect]"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "addToAppVersionsBulkPromotion[eventMeshSelect]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "\"Modeled Event Mesh\""
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "isLoading || selectedEnvironmentId === \"\" || eventMeshSelectOptions.length === 0"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedEventMeshId"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!validationError.eventMeshInputError"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "validationError.eventMeshInputError"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/architecture/entityList/BulkAddDialog.tsx",
    "props": [
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleMessagingServiceChange"
      },
      {
        "name": "id",
        "type": "string",
        "value": "addToAppVersions[messagingServiceSelect]"
      },
      {
        "name": "name",
        "type": "string",
        "value": "addToAppVersions[messagingServiceSelect]"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "addToAppVersionsBulkPromotion[messagingServiceSelect]"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "\"Event Broker\""
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "isLoading || selectedEventMeshId === \"\" || messagingServiceOptions.length === 0"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedMessagingServiceId"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!validationError.messagingServiceInputError"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "validationError.messagingServiceInputError"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/architecture/ModeledEventMeshGraphPanel.tsx",
    "props": [
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleEventFlowFilterChange"
      },
      {
        "name": "id",
        "type": "string",
        "value": "eventFlowSelect"
      },
      {
        "name": "name",
        "type": "string",
        "value": "eventFlowSelect"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "eventFlowSelect"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "eventFlowOption"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "graphLoading || graphUpdating || drawInProgress || graphNodeExceeded"
      },
      {
        "name": "width",
        "type": "string",
        "value": "280px"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/CompareConfigurationDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "\"configurationVersionSelect\""
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleOnChange"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "audits[0].id"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "\"configurationVersionSelect\""
      },
      {
        "name": "width",
        "type": "expression",
        "value": "\"100%\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/filters/DefaultFilterSingleSelect.tsx",
    "props": [
      {
        "name": "id",
        "type": "expression",
        "value": "`${filterType}Select`"
      },
      {
        "name": "name",
        "type": "expression",
        "value": "`${filterType}Select`"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`${filterType}Select`"
      },
      {
        "name": "label",
        "type": "variable",
        "value": "filterLabel"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedValue"
      },
      {
        "name": "displayEmpty",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "onOpen",
        "type": "variable",
        "value": "handleOpen"
      },
      {
        "name": "onClose",
        "type": "variable",
        "value": "handleClose"
      },
      {
        "name": "open",
        "type": "variable",
        "value": "openDropdown"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/MultiSelectImportActionPanel.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "selectMessagingService"
      },
      {
        "name": "name",
        "type": "string",
        "value": "selectMessagingService"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "selectMessagingService"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleSelectMessagingServiceChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedMessagingServiceId"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "isLoading"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/ViewSchemaConfigurationDialog.tsx",
    "props": [
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleVersionChange"
      },
      {
        "name": "id",
        "type": "string",
        "value": "version-selector-runtime"
      },
      {
        "name": "name",
        "type": "string",
        "value": "version-selector-runtime"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "versionSelectorRuntime"
      },
      {
        "name": "label",
        "type": "string",
        "value": "Version"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedVersionId"
      },
      {
        "name": "width",
        "type": "string",
        "value": "350px"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/CompareSchemaConfigurationDialog.tsx",
    "props": [
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleVersionChange"
      },
      {
        "name": "id",
        "type": "string",
        "value": "version-selector-runtime"
      },
      {
        "name": "name",
        "type": "string",
        "value": "version-selector-runtime"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "versionSelectorRuntime"
      },
      {
        "name": "label",
        "type": "string",
        "value": "Version"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedVersionId"
      },
      {
        "name": "width",
        "type": "string",
        "value": "315px"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/CompareSchemaConfigurationDialog.tsx",
    "props": [
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleSecondVersionChange"
      },
      {
        "name": "id",
        "type": "string",
        "value": "version-selector-runtime"
      },
      {
        "name": "name",
        "type": "string",
        "value": "version-selector-runtime"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "versionSelectorRuntime"
      },
      {
        "name": "label",
        "type": "string",
        "value": "Version"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedSecondVersionId"
      },
      {
        "name": "width",
        "type": "string",
        "value": "315px"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RESTDeliveryPointQueueBinding.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "async (e) => {\n\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\ttrigger(`${configurationName}-postRequestTarget`);\n\t\t\t\t\t\t\t\t\t\tupdateConfiguration();\n\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "!getValues(`${configurationName}-postRequestTarget`)"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`${configurationName}-requestTargetEvaluation`"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RequestHeaderDialog.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "en.application.configuration.restDeliveryPoint.requestHeaderType"
      },
      {
        "name": "name",
        "type": "expression",
        "value": "`${configurationName}-request`"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "requestHeaderType"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => setRequestHeaderType(e.value)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/restDeliveryPoint/RESTDeliveryPointConfiguration.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || \"\""
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : \"\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\t\thandleUpdateConfigurationTypeId(e.value as RDPConfigurationTypeId);\n\t\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "restDeliveryPointConfigurationType-selector"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/configuration/RuntimeContextSelector.tsx",
    "props": [
      {
        "name": "value",
        "type": "expression",
        "value": "context.value"
      },
      {
        "name": "name",
        "type": "string",
        "value": "contextSelector"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "contextSelector"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleContextOptionChange"
      },
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "!!isDisabled"
      },
      {
        "name": "width",
        "type": "string",
        "value": "400px"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domains/KafkaPreferencesDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "kafkaDelimiter"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "kafkaDelimiter"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleDelimiterChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "delimiter"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "hasFetchError"
      },
      {
        "name": "width",
        "type": "string",
        "value": "150px"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/download/DownloadDialogHelper.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "\"AsyncAPI Version\""
      },
      {
        "name": "name",
        "type": "string",
        "value": "AsyncAPI Version"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "version"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\tsetVersion(e.value as EPSupportedAsyncApiVersion);\n\n\t\t\t\tif (localStorageKey) localStorage.setItem(localStorageKey, `${e.value}`);\n\t\t\t}"
      },
      {
        "name": "getOptionDisplayValue",
        "type": "function",
        "value": "(value) => ASYNCAPI_VERSION_OPTIONS.find((props) => props.value === value).name"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/download/DownloadDialogHelper.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "\"Document Extensions\""
      },
      {
        "name": "name",
        "type": "string",
        "value": "documentExtensions"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "extension"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\tsetExtension(e.value as SupportedAsyncApiExtensionOptions);\n\n\t\t\t\tif (localStorageKey) localStorage.setItem(localStorageKey, `${e.value}`);\n\t\t\t}"
      },
      {
        "name": "getOptionDisplayValue",
        "type": "function",
        "value": "(value) => {\n\t\t\t\tconst match = documentExtensionOptions.find((props) => props.value === value);\n\n\t\t\t\treturn match ? match.name : \"\";\n\t\t\t}"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/download/EventApiProductDownloadDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? en.eventApi.error.requiredPlan : null"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.eventApiProduct.labels.plan"
      },
      {
        "name": "width",
        "type": "string",
        "value": "621px"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/EventApiForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t// borkerType is used in the parent, pass the value back.\n\t\t\t\t\t\t\t\tonBrokerTypeChange?.(e.value);\n\t\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "isEdit"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "eventApi[brokerType]"
      },
      {
        "name": "width",
        "type": "expression",
        "value": "\"526px\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/Policies.tsx",
    "props": [
      {
        "name": "id",
        "type": "expression",
        "value": "`messagingSelect-${index}`"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "width",
        "type": "expression",
        "value": "\"556px\""
      },
      {
        "name": "value",
        "type": "expression",
        "value": "`${value}`"
      },
      {
        "name": "dataQa",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "mode === \"view\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/Policies.tsx",
    "props": [
      {
        "name": "id",
        "type": "expression",
        "value": "`accessTypeSelect-${index}`"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "width",
        "type": "expression",
        "value": "\"556px\""
      },
      {
        "name": "dataQa",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "mode === \"view\""
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/Policies.tsx",
    "props": [
      {
        "name": "id",
        "type": "expression",
        "value": "`queueTypeSelect-${index}`"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "width",
        "type": "expression",
        "value": "\"556px\""
      },
      {
        "name": "dataQa",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "mode === \"view\""
      },
      {
        "name": "value",
        "type": "expression",
        "value": "`${value}`"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/ApprovalType.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`${versionObjectName}[approvalType]`"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/EventApiProductForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || brokerTypes[0].value"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "isEdit"
      },
      {
        "name": "getOptionDisplayValue",
        "type": "function",
        "value": "(value) => brokerTypes.find((type) => type.value === value)?.name || \"\""
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "eventApiProduct[brokerType]"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/schemas/SchemaForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\tsetSelectedSchemaType(e.value);\n\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || schemaTypes[0]?.value"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "\"schema[schemaType]\""
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "isEdit"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/consumers/ConsumerItemForm.tsx",
    "props": [
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || \"\""
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "!isNew || consumerTypeMenuItems?.length === 1"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "consumerIdInSidepanel === id && sidePanelOpen"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\tconst consumerTypeSelection = e.value;\n\n\t\t\t\t\t\t\t\t\t\t// clear any configuration when changing consumer type\n\t\t\t\t\t\t\t\t\t\tsetValue(`applicationVersion[consumers].${index}.configuration`, undefined);\n\t\t\t\t\t\t\t\t\t\tsetValue(`applicationVersion[consumers].${index}.configurations`, []);\n\n\t\t\t\t\t\t\t\t\t\tonChange(consumerTypeSelection);\n\t\t\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "getOptionDisplayValue",
        "type": "variable",
        "value": "getOptionDisplayValue"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`applicationVersion[consumers].${index}.consumerType`"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/consumers/AttractedEvents.tsx",
    "props": [
      {
        "name": "id",
        "type": "expression",
        "value": "\"memSelect\""
      },
      {
        "name": "name",
        "type": "expression",
        "value": "\"memSelect\""
      },
      {
        "name": "label",
        "type": "expression",
        "value": "`Modeled Event Mesh`"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "onChangeHandler"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedEventMeshId"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "memSelect"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/TopicDomains.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "`brokerType-${topicDomain.id}`"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "brokerType"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => updateBrokerType(e.value, index)"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "topicDomain.brokerType"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/TopicDomains.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "`brokerType-${topicDomain.id}`"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "brokerType"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "topicDomain.brokerType"
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "value": "true"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/EventForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\thandleBrokerTypeChange(e.value);\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "\"event[brokerType]\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/EventForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChange(e.value)"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "\"event[requiresApproval]\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/schemaDrawer/SchemaVersionDetailsTitleContent.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "schemaVersionSelect"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChangeSchemaVersion"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "viewedSchemaVersion?.id"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "schemaVersionSelect"
      },
      {
        "name": "width",
        "type": "string",
        "value": "100%"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/schemaDrawer/QuickCreateSchema.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "\"Schema Type\""
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\tsetImpliedContentType(schemaTypeMapToCodeEditorMode[e.value]);\n\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || schemaTypes[0]?.value"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "\"schema[schemaType]\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/QuickCreateEvent.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "\"Access Approval\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChange(e.value)"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "\"event[accessApproval]\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/ApplicationForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\tonBrokerTypeChange?.(e.value);\n\t\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "isEdit || !onBrokerTypeChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/MemFilter.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "selectedMem"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "memIds?.length > 0 && eventMeshesById && selectedMemId ? selectedMemId : designedEventFlowOption.value"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\tconst memId = e.value === designedEventFlowOption.value ? \"\" : e.value;\n\n\t\t\t\t\t\tsetSelectedMemId(memId);\n\t\t\t\t\t}"
      },
      {
        "name": "getOptionDisplayValue",
        "type": "variable",
        "value": "getOptionDisplayValue"
      },
      {
        "name": "width",
        "type": "string",
        "value": "100%"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`appVersionDetailMemFilter`"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/AddSubscriptionFromEventTab/NewConsumerForm.tsx",
    "props": [
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.application.consumer.consumerType"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || \"\""
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\t\tconst consumerTypeSelection = e.value;\n\n\t\t\t\t\t\t\t\tonChange(consumerTypeSelection);\n\t\t\t\t\t\t\t\tonBlur();\n\t\t\t\t\t\t\t}"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`consumerType`"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/AddSubscriptionFromEventTab/ExistingConsumerForm.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "en.application.consumer.label"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => {\n\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\ttrigger(\"subscriptions\"); // trigger validation\n\t\t\t\t\t\t}"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error ? error.message : null"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "consumerSelect"
      },
      {
        "name": "width",
        "type": "string",
        "value": "100%"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/credentials/ManageCredentials.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "configurationTypeId"
      },
      {
        "name": "name",
        "type": "string",
        "value": "configurationTypeId"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "configurationTypeId"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "messages.credentials.configurationTypeId"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "onChangeConfigurationType"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "configuration.typeId"
      },
      {
        "name": "required",
        "type": "variable",
        "value": "isEditing"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "isLoading"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "!isEditing"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/components/filters/DefaultFilterSingleSelect.tsx",
    "props": [
      {
        "name": "id",
        "type": "expression",
        "value": "`${filterType}Select`"
      },
      {
        "name": "name",
        "type": "expression",
        "value": "`${filterType}Select`"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "`${filterType}Select`"
      },
      {
        "name": "label",
        "type": "variable",
        "value": "label"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleSharedTypeChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedValue"
      },
      {
        "name": "displayEmpty",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "onOpen",
        "type": "variable",
        "value": "handleOpen"
      },
      {
        "name": "onClose",
        "type": "variable",
        "value": "handleClose"
      },
      {
        "name": "open",
        "type": "variable",
        "value": "openDropdown"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/SolaceConnectionDetails.tsx",
    "props": [
      {
        "name": "dataQa",
        "type": "string",
        "value": "authenticationType"
      },
      {
        "name": "id",
        "type": "string",
        "value": "authenticationType"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.connectors.labels.authenticationType"
      },
      {
        "name": "name",
        "type": "expression",
        "value": "\"authenticationType\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "({ value: authType }) => {\n\t\t\t\t\t\t\t\t\t\tsetSolaceConnectionValues({\n\t\t\t\t\t\t\t\t\t\t\t...solaceConnectionValues,\n\t\t\t\t\t\t\t\t\t\t\tauthenticationType: authType as AuthenticationType\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "solaceConnectionValues.authenticationType"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/SolaceConnectionDetails.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "\"solaceDestinationType\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "({ value: destinationType }) =>\n\t\t\t\t\t\t\t\t\t\tsetSolaceConnectionValues({\n\t\t\t\t\t\t\t\t\t\t\t...solaceConnectionValues,\n\t\t\t\t\t\t\t\t\t\t\tbinding: {\n\t\t\t\t\t\t\t\t\t\t\t\t...solaceConnectionValues.binding,\n\t\t\t\t\t\t\t\t\t\t\t\tdestinationType: destinationType\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "solaceConnectionValues.binding.destinationType"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.connectors.labels.destinationType"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "isEqual(solaceDirection, ConnectorDirection.Source) ? true : false"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "solaceDestinationType"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/EditConstantDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "\"dataType\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "({ value: dataType }) => {\n\t\t\t\t\t\tsetConstantNameError(\"\");\n\t\t\t\t\t\tsetConstantField({\n\t\t\t\t\t\t\t...constantField,\n\t\t\t\t\t\t\tdataType: dataType,\n\t\t\t\t\t\t\tconstantValue: getDefaultConstantValue(dataType)\n\t\t\t\t\t\t});\n\t\t\t\t\t}"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.connectors.labels.dataType"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "constantField.dataType"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "constant-datatype-selection"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/EditHeaderDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "\"dataType\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "({ value: dataType }) => {\n\t\t\t\t\t\tsetCustomHeaderField({ ...customHeaderField, dataType: dataType });\n\t\t\t\t\t}"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.connectors.labels.dataType"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "customHeaderField.dataType"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "header-datatype-selection"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/AddHeaderDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "\"dataType\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "({ value: dataType }) => {\n\t\t\t\t\t\tsetHeaderDataType(dataType);\n\t\t\t\t\t}"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.connectors.labels.dataType"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "headerDataType"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "header-datatype-selection"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/transformations/popoverDialogs/AddConstantDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "expression",
        "value": "\"dataType\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "({ value: dataType }) => {\n\t\t\t\t\t\tsetConstantDataType(dataType);\n\t\t\t\t\t\tsetDefaultConstantValue(dataType);\n\t\t\t\t\t\tsetConstantNameError(\"\");\n\t\t\t\t\t}"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.connectors.labels.dataType"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "constantDataType"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "header-datatype-selection"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/formUtils/ConnectorFormUtils.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "props.label"
      },
      {
        "name": "name",
        "type": "expression",
        "value": "props.name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChangeTrigger(props, e)"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "props.value"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "props.readonly"
      },
      {
        "name": "required",
        "type": "expression",
        "value": "props.required && !props.readonly"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "props.disabled"
      },
      {
        "name": "title",
        "type": "expression",
        "value": "props.title"
      },
      {
        "name": "id",
        "type": "expression",
        "value": "props.id"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/authentication/ClientCertAuthenticationDetails.tsx",
    "props": [
      {
        "name": "dataQa",
        "type": "string",
        "value": "sslKeyStoreFormatTypeField"
      },
      {
        "name": "id",
        "type": "string",
        "value": "sslKeyStoreFormatType"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.connectors.labels.sslKeyStoreFormat"
      },
      {
        "name": "name",
        "type": "expression",
        "value": "\"sslKeyStoreFormat\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "({ value: sslKeyStoreFormat }) => {\n\t\t\t\t\t\t\t\tsetClientCertValues({\n\t\t\t\t\t\t\t\t\t...clientCertValues,\n\t\t\t\t\t\t\t\t\tsslKeyStoreFormat: sslKeyStoreFormat as SslKeyStoreFormatType\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "clientCertValues.sslKeyStoreFormat"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "readOnly"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/intg/src/components/dialogs/SelectEnvironmentDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "environment"
      },
      {
        "name": "name",
        "type": "string",
        "value": "environment"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "environment"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/components/atoms/AtomSelect.tsx",
    "props": [
      {
        "name": "...",
        "type": "spread",
        "value": "props"
      },
      {
        "name": "id",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "dataQa",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "hasErrors",
        "type": "variable",
        "value": "hasErrors"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "errorText || helperText"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/components/dialogs/SelectEnvironmentDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "environment"
      },
      {
        "name": "name",
        "type": "string",
        "value": "environment"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "environment"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/rrbac/components/UserAccessDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "resourceRoleSelect"
      },
      {
        "name": "name",
        "type": "string",
        "value": "resourceRoleSelect"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "resourceRoleSelect"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "isDisabled"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "role"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => onResourceRoleChange(resourceAssignment, event.value)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/Connect.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "view"
      },
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "t({ id: \"id_view_by\", message: \"View by\" })"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "view"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChangeView"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "\"connect-view-by\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/dialogs/LibraryDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "protocol"
      },
      {
        "name": "name",
        "type": "string",
        "value": "protocol"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "protocol"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "t({ id: \"id_protocol\", message: \"Protocol\" })"
      },
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "protocolIndex.toString()"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleProtocolChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/dialogs/LibraryDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "hosturi"
      },
      {
        "name": "name",
        "type": "string",
        "value": "hosturi"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "hosturi"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "t({ id: \"id_hosturi\", message: \"Host URI\" })"
      },
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "hostUri"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleHostUriChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/dialogs/DistributedTracingDeployDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "selectedTracingProfileId"
      },
      {
        "name": "data-qa",
        "type": "string",
        "value": "selectedTracingProfileId"
      },
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "t({ id: \"id_tracing_destination\", message: \"Tracing Destination\" })"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedTracingProfileId"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!selectedTracingProfileId && isSubmitted"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "selectedTracingProfileId || !isSubmitted ? \"\" : t({ id: \"id_dt_select_tracing_dest\", message: \"Required. Select a tracing destination.\" })"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => setSelectedTracingProfileId(event.value)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldServiceClass.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "serviceClass"
      },
      {
        "name": "name",
        "type": "string",
        "value": "serviceClass"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "serviceClass"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "serviceClass.value"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleServiceClassChange"
      },
      {
        "name": "hasErrors",
        "type": "variable",
        "value": "hasServiceClassErrors"
      },
      {
        "name": "helperText",
        "type": "variable",
        "value": "serviceClassErrorText"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "isSAP ? t({ id: \"id_service_class\", message: \"Service Class\" }) : t({ id: \"id_connections\", message: \"Connections\" })"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "activeServiceClasses.length === 0"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "readOnly"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldServiceClass.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "serviceClass"
      },
      {
        "name": "name",
        "type": "string",
        "value": "serviceClass"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "serviceClass"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "serviceClass.value"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleServiceClassChange"
      },
      {
        "name": "hasErrors",
        "type": "variable",
        "value": "hasServiceClassErrors"
      },
      {
        "name": "helperText",
        "type": "variable",
        "value": "serviceClassErrorText"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "isSAP ? t({ id: \"id_service_class\", message: \"Service Class\" }) : t({ id: \"id_connections\", message: \"Connections\" })"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "activeServiceClasses.length === 0"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "readOnly"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldBrokerFamily.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "brokerFamilyVersion"
      },
      {
        "name": "name",
        "type": "string",
        "value": "brokerFamilyVersion"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "brokerFamilyVersion"
      },
      {
        "name": "hasErrors",
        "type": "variable",
        "value": "hasErrors"
      },
      {
        "name": "helperText",
        "type": "variable",
        "value": "errorText"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "readOnly"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "disabled"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldBrokerVersion.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "brokerVersion"
      },
      {
        "name": "name",
        "type": "string",
        "value": "brokerVersion"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "brokerVersion"
      },
      {
        "name": "hasErrors",
        "type": "variable",
        "value": "hasErrors"
      },
      {
        "name": "helperText",
        "type": "variable",
        "value": "errorText"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "readOnly"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "disabled"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldCloud.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "cloud"
      },
      {
        "name": "name",
        "type": "string",
        "value": "cloud"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "cloud"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChange"
      },
      {
        "name": "hasErrors",
        "type": "variable",
        "value": "hasErrors"
      },
      {
        "name": "helperText",
        "type": "variable",
        "value": "errorText"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "cloudDisabled"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/userAccess/rrbac/components/UserAccessDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "resourceRoleSelect"
      },
      {
        "name": "name",
        "type": "string",
        "value": "resourceRoleSelect"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "resourceRoleSelect"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "isDisabled"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "role"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => onResourceRoleChange(resourceAssignment, event.value as ResourceRole)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/userGroups/UserGroups.tsx",
    "props": [
      {
        "name": "width",
        "type": "string",
        "value": "20rem"
      },
      {
        "name": "id",
        "type": "string",
        "value": "userGroupDropdownId"
      },
      {
        "name": "name",
        "type": "string",
        "value": "userGroupDropdown"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "userGroupDropdownQa"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleSelectedUserGroupRole"
      },
      {
        "name": "title",
        "type": "string",
        "value": "User Group Select"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "selectedUserGroupRole"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/auditLogs/AudiLogs.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "en.auditLogs.timeRange"
      },
      {
        "name": "name",
        "type": "string",
        "value": "timeRange"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => handleFilterChange(e)"
      },
      {
        "name": "title",
        "type": "string",
        "value": "Time Range"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "filters.timeRange.value"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/auditLogs/AudiLogs.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "en.auditLogs.status"
      },
      {
        "name": "name",
        "type": "string",
        "value": "status"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => handleFilterChange(e)"
      },
      {
        "name": "title",
        "type": "string",
        "value": "Status"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "filters.status.value"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/auditLogs/AudiLogs.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "en.auditLogs.category"
      },
      {
        "name": "name",
        "type": "string",
        "value": "category"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => handleFilterChange(e)"
      },
      {
        "name": "title",
        "type": "string",
        "value": "Category"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "filters.category.value"
      },
      {
        "name": "id",
        "type": "string",
        "value": "categoryFilter"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/auditLogs/AudiLogs.tsx",
    "props": [
      {
        "name": "disabled",
        "type": "expression",
        "value": "!filters.category.value"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "en.auditLogs.event"
      },
      {
        "name": "name",
        "type": "string",
        "value": "event"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => handleFilterChange(e)"
      },
      {
        "name": "title",
        "type": "string",
        "value": "Event"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "filters.event.value"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "!filters.category.value ? en.auditLogs.selectCategory : \"\""
      },
      {
        "name": "id",
        "type": "string",
        "value": "eventFilter"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/privateRegions/components/MoveDatacenterEnvironmentDialog.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "environment"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "environments.moveDialogLabels.destinationEnvironment"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || \"\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChange(e.value)"
      },
      {
        "name": "required",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error?.message"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/formComponents.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "!!readOnly"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || \"\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChange(e.value)"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!_.isEmpty(error)"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error?.message"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "dataQa ?? name"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/formComponents.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "!!readOnly"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChange(e.value)"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!_.isEmpty(error)"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error?.message"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "dataQa ?? name"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/distributedTracing/components/formComponents.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "!!readOnly"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value || \"\""
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChange(e.value)"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!_.isEmpty(error)"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "error?.message"
      },
      {
        "name": "dataQa",
        "type": "expression",
        "value": "dataQa ?? name"
      },
      {
        "name": "getOptionDisplayValue",
        "type": "function",
        "value": "(connectionType) => getOptionDisplayValue(connectionType as TlsConnectionType)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/infra/src/pages/clusters/ClustersFilter.tsx",
    "props": [
      {
        "name": "width",
        "type": "string",
        "value": "270px"
      },
      {
        "name": "data-qa",
        "type": "string",
        "value": "searchBySelect"
      },
      {
        "name": "name",
        "type": "string",
        "value": "searchBySelect"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "searchByOption"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleSearchByOptions"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/infra/src/pages/clusters/ClustersFilter.tsx",
    "props": [
      {
        "name": "width",
        "type": "string",
        "value": "250px"
      },
      {
        "name": "name",
        "type": "string",
        "value": "eolStatus"
      },
      {
        "name": "label",
        "type": "string",
        "value": "End of Life Status"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "eolStatusSelect"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "endOfLifeStatus"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => setEndOfLifeStatus(event.value)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/organizations/organizationsList/OrganizationsFilter.tsx",
    "props": [
      {
        "name": "width",
        "type": "string",
        "value": "270px"
      },
      {
        "name": "data-qa",
        "type": "string",
        "value": "searchBySelect"
      },
      {
        "name": "name",
        "type": "string",
        "value": "searchBySelect"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "searchByOption"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleSearchByOptions"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/Upgrades.tsx",
    "props": [
      {
        "name": "key",
        "type": "expression",
        "value": "t.profile"
      },
      {
        "name": "name",
        "type": "expression",
        "value": "`artifactResources_${t.profile}`"
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "`Version in Datadog Sub-Org (${t.profile}):`"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "t.version || \"\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/Upgrades.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "artifactResource"
      },
      {
        "name": "readOnly",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "label",
        "type": "string",
        "value": "Latest Version:"
      },
      {
        "name": "value",
        "type": "string",
        "value": "artifactVersion"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/serviceOperations/ServiceOperations.tsx",
    "props": [
      {
        "name": "value",
        "type": "variable",
        "value": "search"
      },
      {
        "name": "label",
        "type": "string",
        "value": "Filter By"
      },
      {
        "name": "name",
        "type": "string",
        "value": "filter by"
      },
      {
        "name": "width",
        "type": "string",
        "value": "250px"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => setSearch(e.value as FilterKey)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/serviceOperations/ServiceOperations.tsx",
    "props": [
      {
        "name": "value",
        "type": "expression",
        "value": "pageSize.toString()"
      },
      {
        "name": "label",
        "type": "string",
        "value": "Page Size"
      },
      {
        "name": "name",
        "type": "string",
        "value": "page size"
      },
      {
        "name": "width",
        "type": "string",
        "value": "125px"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => {\n\t\t\t\t\t\t\tsetPageNumber(1);\n\t\t\t\t\t\t\tsetPageSize(parseInt(event.value));\n\t\t\t\t\t\t}"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/plans/components/plansForm/QueryBuilder.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "attribute"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "attribute"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => setAttribute(event.value)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/plans/components/plansForm/QueryBuilder.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "comparison"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "operator"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => setOperator(event.value)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/plans/components/plansForm/PlansForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "!!error"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => onChange(event.value)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/runs/components/runsForm/RunsForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => onChange(event.value)"
      },
      {
        "name": "maxHeight",
        "type": "expression",
        "value": "\"40vh\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/runs/components/runsForm/RunsForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => onChange(event.value)"
      },
      {
        "name": "disabled",
        "type": "variable",
        "value": "isLoading"
      },
      {
        "name": "maxHeight",
        "type": "expression",
        "value": "\"30vh\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/runs/components/runsForm/RunsForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => onChange(event.value)"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/serviceTypes/CreateServiceType.tsx",
    "props": [
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(e) => onChange(e.value)"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "value ?? \"preview\""
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/DrawdownSelection.tsx",
    "props": [
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "createBizOrganization.products.rateSet"
      },
      {
        "name": "id",
        "type": "string",
        "value": "prodRateSet"
      },
      {
        "name": "name",
        "type": "string",
        "value": "prodRateSet"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleProdRateSetChange"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "rateSetValues ? prodRateSetValue : \"\""
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "prodRateSetDropdownQa"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "readOnly"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/ProductSection.tsx",
    "props": [
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "createBizOrganization.products.productConsumptionType"
      },
      {
        "name": "id",
        "type": "string",
        "value": "productConsumptionType"
      },
      {
        "name": "name",
        "type": "string",
        "value": "productConsumptionType"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleProdConsumptionChange"
      },
      {
        "name": "value",
        "type": "variable",
        "value": "productType"
      },
      {
        "name": "width",
        "type": "string",
        "value": "450px"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "productConsumptionDropdownQa"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "productDrawdown.readonly || productSubscriptions.readonly"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/BizOpsOrgDetailsForm.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "organizationType"
      },
      {
        "name": "id",
        "type": "string",
        "value": "organizationType"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "inputHandler"
      },
      {
        "name": "width",
        "type": "string",
        "value": "80%"
      },
      {
        "name": "disabled",
        "type": "expression",
        "value": "!!validationErrors"
      },
      {
        "name": "title",
        "type": "expression",
        "value": "createBizOrganization.orgDetails.accountType"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "accountTypeDropdown"
      },
      {
        "name": "hasErrors",
        "type": "expression",
        "value": "(orgDetails[\"organizationType\"].isEdited || !isSaveAllowed) &&\n\t\t\t\t\t\t\torgDetails[\"organizationType\"].errors.validationErrors.concat(\n\t\t\t\t\t\t\t\torgDetails[\"organizationType\"].errors.inputErrors\n\t\t\t\t\t\t\t).length > 0"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "validationErrors\n\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t: orgDetails[\"organizationType\"].errors.validationErrors.concat(\n\t\t\t\t\t\t\t\t\t\torgDetails[\"organizationType\"].errors.inputErrors\n\t\t\t\t\t\t\t\t  )[0]"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/monitoringDashboard/insightsOrganizations/InsightsOrganizations.tsx",
    "props": [
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "label",
        "type": "string",
        "value": "Page Size"
      },
      {
        "name": "name",
        "type": "string",
        "value": "pageSize"
      },
      {
        "name": "width",
        "type": "string",
        "value": "200px"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "pageSize.toString()"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => {\n\t\t\t\t\t\t\tsetPageNumber(1);\n\t\t\t\t\t\t\tsetPageSize(parseInt(event.value));\n\t\t\t\t\t\t}"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/monitoringDashboard/monitoringJobs/MonitoringJobs.tsx",
    "props": [
      {
        "name": "inlineLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "label",
        "type": "string",
        "value": "Page Size"
      },
      {
        "name": "name",
        "type": "string",
        "value": "pageSize"
      },
      {
        "name": "width",
        "type": "string",
        "value": "200px"
      },
      {
        "name": "value",
        "type": "expression",
        "value": "pageSize.toString()"
      },
      {
        "name": "onChange",
        "type": "function",
        "value": "(event) => {\n\t\t\t\t\t\t\tsetPageNumber(1);\n\t\t\t\t\t\t\tsetPageSize(parseInt(event.value));\n\t\t\t\t\t\t}"
      }
    ]
  },
  {
    "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/connector/ConnectorUpgradeDialog.tsx",
    "props": [
      {
        "name": "name",
        "type": "string",
        "value": "availableVersions"
      },
      {
        "name": "id",
        "type": "string",
        "value": "availableVersions"
      },
      {
        "name": "width",
        "type": "string",
        "value": "100%"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "inputHandler"
      },
      {
        "name": "title",
        "type": "string",
        "value": "Available Versions"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "availableVersions"
      }
    ]
  }
]