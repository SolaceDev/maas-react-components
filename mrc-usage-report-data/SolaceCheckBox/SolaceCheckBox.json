{
  "componentName": "SolaceCheckBox",
  "totalUsages": 99,
  "usagesByMfe": {
    "ep": 45,
    "intg": 1,
    "mc": 9,
    "saas": 27,
    "maas-ops-react": 17
  },
  "commonProps": [
    {
      "name": "name",
      "count": 98
    },
    {
      "name": "checked",
      "count": 94
    },
    {
      "name": "onChange",
      "count": 86
    },
    {
      "name": "dataQa",
      "count": 81
    },
    {
      "name": "label",
      "count": 72
    },
    {
      "name": "id",
      "count": 30
    },
    {
      "name": "readOnly",
      "count": 22
    },
    {
      "name": "disabled",
      "count": 11
    },
    {
      "name": "hasErrors",
      "count": 11
    },
    {
      "name": "helperText",
      "count": 11
    }
  ],
  "files": [
    "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SchemaRegistryAuthList.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/KafkaAuthList.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/entityList/FailDownloadAsyncApi.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/entityList/DownloadAsyncApiDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/EntityDetailModal/AddEventToApplication.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/designer/details/DeleteEntityVersionDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useCheckbox.tsx",
    "../../../maas-ui/micro-frontends/ep/src/components/SearchPanel/filters/ManageFiltersMenu.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/runtime/CustomDiscoveryScanDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/architecture/ModeledEventMeshes/components/PageContent.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/ConfirmTagAssociationDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/TagsQuickActions.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/AuditResultFilter.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/import/CreateNewVersionDialog.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/domains/DomainsList.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/enumerations/EnumerationForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/sidePanel/EntityAndVersionEditor.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/download/DownloadDialogHelper.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/EventApiForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/EventApiProductForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/schemas/SchemaForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/consumers/SuggestedEvents.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/DomainForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/DomainDetails.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/EventForm.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/schemaDrawer/QuickCreateSchema.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/QuickCreateEvent.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/ApplicationRuntimeTab.tsx",
    "../../../maas-ui/micro-frontends/ep/src/pages/designer/aiWizard/AIWizard.tsx",
    "../../../maas-ui/micro-frontends/intg/src/components/connectors/formUtils/ConnectorFormUtils.tsx",
    "../../../maas-ui/micro-frontends/mc/src/components/atoms/AtomCheckBox.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/RotatePasswordsCard.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/list/Services.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/compare/CompareServices.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldMateLinkEncryption.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldCloneCertificateAuth.tsx",
    "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldPort.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/environments/components/DeleteEnvironmentsDialog.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/environments/components/ASEnvironmentDialog.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/environments/components/RuntimeConfigurationTemplatesDialog.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/GroupManagement/components/GroupManagementChecks.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/accountDetailsOverview/AccountExpiryBanner.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/tokenManagement/components/CategorySection.tsx",
    "../../../maas-ui/micro-frontends/saas/src/pages/tokenManagement/components/PermissionSet.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/customers/components/CustomerDetailsOrgLimits.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/components/OrganizationMonitoringSettings.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/components/ServicesMonitoringConfigurations.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/components/ServicesMonitoringSettings.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/runs/components/SystemControls.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/runs/Runs.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/search/SearchForm.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/RequestSection.tsx",
    "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/reviewDialog/ReviewDialog.tsx"
  ],
  "customization": {
    "styledComponentCount": 0,
    "customStylesCount": 0,
    "overriddenPropertiesCounts": {}
  },
  "instances": [
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/SchemaRegistryAuthList.tsx",
      "props": [
        {
          "name": "checked",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventBroker[kafka][schemaRegistry][tls]"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "disabled"
        },
        {
          "name": "id",
          "type": "string",
          "value": "schemaRegistry[tls]"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "eventBrokerFormFieldLabels.addTLS"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (!e.value) clearErrors(`kafka.schemaRegistry.0.${selectedAuthType}.trustStorePassword`);\n\t\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/topology/messagingService/KafkaAuthList.tsx",
      "props": [
        {
          "name": "checked",
          "type": "variable",
          "value": "isTLSChecked"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "schemaRegistry[tls]"
        },
        {
          "name": "id",
          "type": "string",
          "value": "schemaRegistry[tls]"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "eventBrokerFormFieldLabels.addTLS"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\n\t\t\t\t\t\t\t\t\tif (!e.value) clearErrors(`kafka.authentication.auth.${selectedAuthType}.trustStorePassword`);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "readOnly || loading || kafkaDelimiterIsNotSet"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/entityList/FailDownloadAsyncApi.tsx",
      "props": [
        {
          "name": "key",
          "type": "expression",
          "value": "option.name"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "option.name"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "namingStrategy[option.name]"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleCheckboxChange"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "option.name"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "option.label"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/entityList/DownloadAsyncApiDialog.tsx",
      "props": [
        {
          "name": "key",
          "type": "expression",
          "value": "option.value"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "option.name"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "checkedItems[option.value]"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleCheckboxChange"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "option.name"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "optionDisabled(option, selectedMessagingService)"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "option.name"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/EntityDetailModal/AddEventToApplication.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "subscribeToEvent"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\tif (eventFlowError) {\n\t\t\t\t\t\t\t\t\t\tsetEventFlowError(null);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tsetSubscribeToEvent(e.value);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "subscribeToEvent"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "isSubscribeReadOnly"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "addEventToApplicationSubscribeToEvent"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Subscribe to Event"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/EntityDetailModal/AddEventToApplication.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "publishEvent"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\tif (eventFlowError) {\n\t\t\t\t\t\t\t\t\t\tsetEventFlowError(null);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tsetPublishEvent(e.value);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "publishEvent"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "isPublishReadOnly"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "addEventToApplicationPublishEvent"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Publish Event"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!eventFlowError"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "eventFlowError"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/designer/details/DeleteEntityVersionDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"keepParent\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"keepEntityCheckbox\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => handleKeepParentChange(e.value)"
        },
        {
          "name": "subTextProps",
          "type": "object",
          "value": "{ label: `Creates a new version of the ${entityType}`, light: true }"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "keepParent"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "`I want to keep the ${entityType}`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/customHooks/useCheckbox.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "checkboxName ?? \"customhookCheckbox\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa ?? \"\""
        },
        {
          "name": "label",
          "type": "variable",
          "value": "label"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleChange"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/SearchPanel/filters/ManageFiltersMenu.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "FilterType.applicationDomain"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "FilterTypeLabel.applicationDomain"
        },
        {
          "name": "checked",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa + \"-\" + FilterType.applicationDomain"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/SearchPanel/filters/ManageFiltersMenu.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "FilterType.state"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "FilterTypeLabel.state"
        },
        {
          "name": "checked",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa + \"-\" + FilterType.state"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/SearchPanel/filters/ManageFiltersMenu.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "FilterType.shared"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "FilterTypeLabel.shared"
        },
        {
          "name": "checked",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa + \"-\" + FilterType.shared"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/SearchPanel/filters/ManageFiltersMenu.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "FilterType.brokerType"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "FilterTypeLabel.brokerType"
        },
        {
          "name": "checked",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa + \"-\" + FilterType.brokerType"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/SearchPanel/filters/ManageFiltersMenu.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "FilterType.eventMesh"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "FilterTypeLabel.eventMesh"
        },
        {
          "name": "checked",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa + \"-\" + FilterType.eventMesh"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/SearchPanel/filters/ManageFiltersMenu.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "FilterType.applicationType"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "FilterTypeLabel.applicationType"
        },
        {
          "name": "checked",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa + \"-\" + FilterType.applicationType"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/SearchPanel/filters/ManageFiltersMenu.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "filterType"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "FilterTypeLabel[filterType]"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "currentFilters.includes(filterType)"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event: SolaceCheckboxChangeEvent) => handleAdditionalFilterChange(filterType, event.value)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa + \"-\" + filterType"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/components/SearchPanel/filters/ManageFiltersMenu.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "filterType"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "renderCheckboxLabel(customAttributes[0].name)"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "!!selectedFilters.find((filter) => filter.type === filterType)"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "dataQa + \"-\" + filterType"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => handleFilterChange(filterType, customAttributes[0].name, event.value, filterTypeToCustomAttributes)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/runtime/CustomDiscoveryScanDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "broker"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Broker"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleBrokerOnChange"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "!!brokerEnabled && !toDisableBrokerScan()"
        },
        {
          "name": "subTextProps",
          "type": "object",
          "value": "{\n\t\t\t\t\t\tlabel: \"Discover consumer groups and topics.\",\n\t\t\t\t\t\tlight: true\n\t\t\t\t\t}"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "toDisableBrokerScan()"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/runtime/CustomDiscoveryScanDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "confluentSchemaRegistry"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Confluent Schema Registry"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSchemaRegistryOnChange"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "!!schemaRegistryEnabled && !toDisableSchemaRegistryScan()"
        },
        {
          "name": "subTextProps",
          "type": "object",
          "value": "{\n\t\t\t\t\t\tlabel: \"Discover schemas from Confluent.\",\n\t\t\t\t\t\tlight: true\n\t\t\t\t\t}"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "toDisableSchemaRegistryScan()"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/architecture/ModeledEventMeshes/components/PageContent.tsx",
      "props": [
        {
          "name": "label",
          "type": "string",
          "value": "Show only the modeled event meshes I can access"
        },
        {
          "name": "name",
          "type": "string",
          "value": "Filter By Access"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "filterByAccess"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "toggleFilterByAccessOnChange"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/ConfirmTagAssociationDialog.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"dontShowConfirmBoxCheckbox\""
        },
        {
          "name": "label",
          "type": "expression",
          "value": "`Don't show this message again.`"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "!showDialogAgain"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"dontShowConfirmBox-checkbox\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => setShowDialogAgain(!event.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/TagsQuickActions.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"requiredConfirmBoxCheckbox\""
        },
        {
          "name": "label",
          "type": "expression",
          "value": "\"Require confirmation\""
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "showConfirmDialogBox"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"requiredConfirmBox-checkbox\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => handleRequireConfirmCheckbox(event.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/AuditResultFilter.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"hideAuditResults\""
        },
        {
          "name": "label",
          "type": "expression",
          "value": "`Display all hidden objects (${hiddenAuditResultCount ?? 0}) in the audit result.`"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "showHiddenAudits !== \"false\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"hideAuditResults-checkbox\""
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(event) => handleHideTagCheckbox(event.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/topology/mems/audit/import/CreateNewVersionDialog.tsx",
      "props": []
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domains/DomainsList.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "`checkDomain-${item.id}`"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`checkDomain-${item.id}`"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e: SolaceCheckboxChangeEvent) => onCheck(item, e.value)"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "checked"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domains/DomainsList.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"selectAllDomains\""
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"selectAllDomainsCheckbox\""
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "onAllDomainsCheck"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "isChecked"
        },
        {
          "name": "indeterminate",
          "type": "expression",
          "value": "isChecked && selectedDomainIds.length !== items.length"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/enumerations/EnumerationForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "value || false"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "enumeration[shared]"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Allow Enumeration to be shared across application domains"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/graph/sidePanel/EntityAndVersionEditor.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\tsetIsDirty(true);\n\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "value || false"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "`Allow ${entityTypeToLabelLowercase(entityType)} to be shared across application domains`"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${entityType}[shared]`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/download/DownloadDialogHelper.tsx",
      "props": [
        {
          "name": "key",
          "type": "expression",
          "value": "option.name"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "option.name"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "namingStrategy[option.name]"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleNamingStrategyChange"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "option.name"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "option.label"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApis/EventApiForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "value || false"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.eventApi.labels.sharedCheckbox"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"eventApi[shared]\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/eventApiProducts/EventApiProductForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "value || false"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.eventApiProduct.labels.sharedCheckbox"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"eventApiProduct[shared]\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/schemas/SchemaForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\tonSharedChange?.(e.value);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "value || false"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Allow schema to be shared across application domains"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"schema[shared]\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/consumers/SuggestedEvents.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "onlyShowEventsWithoutSubscription"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\tsetOnlyShowEventsWithoutSubscription(e.value);\n\t\t\t\t\t}"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "onlyShowEventsWithoutSubscription"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Show events without a consumer subscription"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/DomainForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "uniqueTopicAddressEnforcementEnabled"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<span>\n\t\t\t\t\t\t\t\t\t\tAll topic addresses within this application domain <span className=\"fontMedium\">must be unique</span>\n\t\t\t\t\t\t\t\t\t</span>"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/DomainForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\tsetTopicDomainEnforcement(e.value);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "!value && !hasValidTopicDomain"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "topicDomainEnforcementEnabled"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<span>\n\t\t\t\t\t\t\t\t\t\tAll topic addresses within this application domain <span className=\"fontMedium\">must use a topic domain</span>\n\t\t\t\t\t\t\t\t\t</span>"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/DomainForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!error"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "error ? error.message : null"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "nonDraftDescriptionsEditable"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<span>Allow object descriptions to be editable in all lifecyle states</span>"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/DomainDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"applicationDomain[uniqueTopicAddressEnforcementEnabled]\""
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "domainValues?.uniqueTopicAddressEnforcementEnabled"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"uniqueTopicAddressEnforcementEnabled\""
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<span>\n\t\t\t\t\t\t\t\t\t\t\tAll topic addresses within this application domain <span className=\"fontMedium\">must be unique</span>\n\t\t\t\t\t\t\t\t\t\t</span>"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/DomainDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"applicationDomain[topicDomainEnforcementEnabled]\""
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "domainValues?.topicDomainEnforcementEnabled"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "topicDomainEnforcementEnabled"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<span>\n\t\t\t\t\t\t\t\t\t\t\tAll topic addresses within this application domain <span className=\"fontMedium\">must use a topic domain</span>\n\t\t\t\t\t\t\t\t\t\t</span>"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/domainEdit/DomainDetails.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"applicationDomain[nonDraftDescriptionsEditable]\""
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "domainValues?.nonDraftDescriptionsEditable"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "nonDraftDescriptionsEditable"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<span>Allow object descriptions to be editable in all lifecyle states</span>"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/EventForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\tonSharedChange?.(e.value);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "value || false"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Allow event to be shared across application domains"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"event[shared]\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/events/schemaDrawer/QuickCreateSchema.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => onChange(e.value)"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "value || false"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "sharedSchema"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Allow schema to be shared across application domains"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"schema[shared]\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/QuickCreateEvent.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\thandleSharedChanged(e.value);\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "value || false"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Allow event to be shared across application domains"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "\"event[shared]\""
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/QuickCreateEvent.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\tif (eventFlowError) {\n\t\t\t\t\t\t\t\t\t\t\tsetEventFlowError(null);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "value || false"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "subscribeToEvent"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Subscribe to Event"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/QuickCreateEvent.tsx",
      "props": [
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\t\t\tif (eventFlowError) {\n\t\t\t\t\t\t\t\t\t\t\t\tsetEventFlowError(null);\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tonChange(e.value);\n\t\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "value || false"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "publishEvent"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Publish Event"
        },
        {
          "name": "hasErrors",
          "type": "expression",
          "value": "!!eventFlowError"
        },
        {
          "name": "helperText",
          "type": "variable",
          "value": "eventFlowError"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/applicationDetails/ApplicationRuntimeTab.tsx",
      "props": [
        {
          "name": "key",
          "type": "expression",
          "value": "filter.value"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "filter.name"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "filtersMap[application?.id]?.[filter.value]"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "filter.name"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "() => handleFilterChipClick(filter.value, !filtersMap[application?.id]?.[filter.value])"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`environment-filters-${filter.value}`"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/ep/src/pages/designer/aiWizard/AIWizard.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "\"doNotShowAgain\""
        },
        {
          "name": "label",
          "type": "expression",
          "value": "\"Do not show this warning again\""
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleCloseInfoMessage"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/intg/src/components/connectors/formUtils/ConnectorFormUtils.tsx",
      "props": [
        {
          "name": "name",
          "type": "expression",
          "value": "props.name"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "props.label"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => props.onChange(e.value)"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "props.readonly"
        },
        {
          "name": "required",
          "type": "expression",
          "value": "props.required && !props.readonly"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "props.disabled"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "props.value"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/components/atoms/AtomCheckBox.tsx",
      "props": [
        {
          "name": "...",
          "type": "spread",
          "value": "props"
        },
        {
          "name": "id",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "name"
        },
        {
          "name": "hasErrors",
          "type": "variable",
          "value": "hasErrors"
        },
        {
          "name": "helperText",
          "type": "expression",
          "value": "errorText || helperText"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleChange"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/RotatePasswordsCard.tsx",
      "props": [
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_mc_manager\", message: \"Rotate Mission Control Manager permissions\" })"
        },
        {
          "name": "name",
          "type": "string",
          "value": "mc_manager"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "usernames.includes(\"manager\")"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleManagerChange"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "checkbox_mc_manager"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/RotatePasswordsCard.tsx",
      "props": [
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_mc_editor\", message: \"Rotate Mission Control Editor permissions\" })"
        },
        {
          "name": "name",
          "type": "string",
          "value": "mc_editor"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "usernames.includes(\"admin\")"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleEditorChange"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "checkbox_mc_editor"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/RotatePasswordsCard.tsx",
      "props": [
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_mc_viewer\", message: \"Rotate Mission Control Viewer permissions\" })"
        },
        {
          "name": "name",
          "type": "string",
          "value": "mc_viewer"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "usernames.includes(\"viewer\")"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleViewerChange"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "checkbox_mc_viewer"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/list/Services.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "showMyServices"
        },
        {
          "name": "name",
          "type": "string",
          "value": "showMyServices"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "services-show-mine"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_only_my_services\", message: \"Only show my services\" })"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "userOnly"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleSetUserOnly"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/compare/CompareServices.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "showDiffs"
        },
        {
          "name": "name",
          "type": "string",
          "value": "showDiffs"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_show_differences\", message: \"Show only differences\" })"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "showDiffs"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleShowDiffs"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldMateLinkEncryption.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "mateLinkEncryption"
        },
        {
          "name": "name",
          "type": "string",
          "value": "mateLinkEncryption"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "mateLinkEncryption"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_mate_link_label\", message: \"Enable mate-link encryption\" })"
        },
        {
          "name": "boldLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "subTextProps",
          "type": "object",
          "value": "{\n\t\t\t\t\t\tlabel: t({ id: \"id_mate_link_text\", message: \"This will encrypt the communication between the primary and backup brokers in a HA setup.\" }),\n\t\t\t\t\t\tlight: true\n\t\t\t\t\t}"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "isCloning"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleChange"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldCloneCertificateAuth.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "cloneCertificateAuthorities"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "cloneCertificateAuthorities"
        },
        {
          "name": "name",
          "type": "string",
          "value": "cloneCertificateAuthorities"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "t({ id: \"id_clone_cert_auth\", message: \"Duplicate all Client and Domain Certificate Authorities\" })"
        },
        {
          "name": "boldLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "subTextProps",
          "type": "object",
          "value": "{\n\t\t\t\t\tlabel: <Trans id=\"id_clone_cert_auth_info\">This will copy all certificates existing on the source event broker service to the new event broker service.</Trans>,\n\t\t\t\t\tlight: true\n\t\t\t\t}"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "value"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleChange"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldPort.tsx",
      "props": [
        {
          "name": "id",
          "type": "variable",
          "value": "nameCheck"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "nameCheck"
        },
        {
          "name": "dataQa",
          "type": "variable",
          "value": "nameCheck"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<SolaceLabel htmlForId={nameCheck} noWrap id={`${nameCheck}-label`}>\n\t\t\t\t\t\t\t{isNodePortEnabled ? `Enable ${meta.label}` : t({ id: \"id_port_label\", message: `Enable ${meta.label}, use port:` })}\n\t\t\t\t\t\t</SolaceLabel>"
        },
        {
          "name": "boldLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "!disabled"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "checkboxDisabled || !isPortDisablingEnabled"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleProtocolToggle"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/environments/components/DeleteEnvironmentsDialog.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "confirmDeleteCheckbox"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.environments.labels.confirmDeleteEnvironment"
        },
        {
          "name": "name",
          "type": "string",
          "value": "confirmDeleteCheckbox"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleConfirmDelete"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "confirmDelete"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "confirmDeleteCheckbox"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "isDeleting"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/environments/components/ASEnvironmentDialog.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "serviceCreationCheckbox"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.environments.labels.confirmASEnvironment"
        },
        {
          "name": "name",
          "type": "string",
          "value": "serviceCreationCheckbox"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "handleCheckboxChange"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "isServiceCreationAllowed"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "serviceCreationCheckbox"
        },
        {
          "name": "disabled",
          "type": "expression",
          "value": "isError || dialogState.updating"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/environments/components/RuntimeConfigurationTemplatesDialog.tsx",
      "props": [
        {
          "name": "key",
          "type": "variable",
          "value": "templateType"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "templateType"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "`${templateType}Checkbox`"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<Box display={\"flex\"} alignItems={\"center\"} height={4}>\n\t\t\t\t\t\t\t<SolaceTypography>{environments.configurationTemplates[templateType].label}</SolaceTypography>\n\t\t\t\t\t\t</Box>"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "updateTemplateTypeEnforcement"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "templateStatus.isEnforced"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"scOutage\"].email : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "scOutageEmail"
        },
        {
          "name": "name",
          "type": "string",
          "value": "scOutageEmail"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "scOutageEmail"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"scOutage\", \"email\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"scOutage\"].console : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "scOutageConsole"
        },
        {
          "name": "name",
          "type": "string",
          "value": "scOutageConsole"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "scOutageConsole"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"scOutage\", \"console\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"scMaintenance\"].email : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "scMaintenanceEmail"
        },
        {
          "name": "name",
          "type": "string",
          "value": "scMaintenanceEmail"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "scMaintenanceEmail"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"scMaintenance\", \"email\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"scMaintenance\"].console : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "scMaintenanceConsole"
        },
        {
          "name": "name",
          "type": "string",
          "value": "scMaintenanceConsole"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "scMaintenanceConsole"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"scMaintenance\", \"console\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"serviceOutage\"].email : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "serviceOutageEmail"
        },
        {
          "name": "name",
          "type": "string",
          "value": "serviceOutageEmail"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "serviceOutageEmail"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"serviceOutage\", \"email\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"serviceOutage\"].console : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "serviceOutageConsole"
        },
        {
          "name": "name",
          "type": "string",
          "value": "serviceOutageConsole"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "serviceOutageConsole"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"serviceOutage\", \"console\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"serviceMaintenance\"].email : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "serviceMaintenanceEmail"
        },
        {
          "name": "name",
          "type": "string",
          "value": "serviceMaintenanceEmail"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "serviceMaintenanceEmail"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"serviceMaintenance\", \"email\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"serviceMaintenance\"].console : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "serviceMaintenanceConsole"
        },
        {
          "name": "name",
          "type": "string",
          "value": "serviceMaintenanceConsole"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "serviceMaintenanceConsole"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"serviceMaintenance\", \"console\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"scEpEventAccessApprover\"].email : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "scEpEventAccessApproverEmail"
        },
        {
          "name": "name",
          "type": "string",
          "value": "scEpEventAccessApproverEmail"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "scEpEventAccessApproverEmail"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"scEpEventAccessApprover\", \"email\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"scEpEventAccessApprover\"].console : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "scEpEventAccessApproverConsole"
        },
        {
          "name": "name",
          "type": "string",
          "value": "scEpEventAccessApproverConsole"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "scEpEventAccessApproverConsole"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"scEpEventAccessApprover\", \"console\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"scEpEventAccessRequestor\"].email : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "scEpEventAccessRequestorEmail"
        },
        {
          "name": "name",
          "type": "string",
          "value": "scEpEventAccessRequestorEmail"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "scEpEventAccessRequestorEmail"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"scEpEventAccessRequestor\", \"email\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings[\"scEpEventAccessRequestor\"].console : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "scEpEventAccessRequestorConsole"
        },
        {
          "name": "name",
          "type": "string",
          "value": "scEpEventAccessRequestorConsole"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "scEpEventAccessRequestorConsole"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"scEpEventAccessRequestor\", \"console\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings?.[\"scInfo\"].email : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "scInfoEmail"
        },
        {
          "name": "name",
          "type": "string",
          "value": "scInfoEmail"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "scInfoEmail"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"scInfo\", \"email\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings?.[\"scInfo\"].console : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "scInfoConsole"
        },
        {
          "name": "name",
          "type": "string",
          "value": "scInfoConsole"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "scInfoConsole"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"scInfo\", \"console\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/notificationSettings/NotificationSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "savedSettings ? savedSettings?.[\"marketing\"]?.email : false"
        },
        {
          "name": "id",
          "type": "string",
          "value": "marketingEmail"
        },
        {
          "name": "name",
          "type": "string",
          "value": "marketingEmail"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "marketingEmail"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(value) => updateNotifyPreferences(\"marketing\", \"email\", value.value)"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/GroupManagement/components/GroupManagementChecks.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "jitProvisionCheckboxId"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<SolaceTypography>\n\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>{userGroupManagement.jitProvisionMainText}</span>\n\t\t\t\t\t\t{userGroupManagement.jitProvisionSubText}\n\t\t\t\t\t</SolaceTypography>"
        },
        {
          "name": "name",
          "type": "string",
          "value": "jitProvisionCheckboxId"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => setIsJitProvisioningChecked(e.value)"
        },
        {
          "name": "subTextProps",
          "type": "object",
          "value": "{\n\t\t\t\t\tlabel: (\n\t\t\t\t\t\t<Box mt={1} mb={1} sx={{ width: \"100% !important\" }}>\n\t\t\t\t\t\t\t<SolaceMessageBox message={userGroupManagement.jitInfoMessage} showCloseButton variant=\"info\" />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)\n\t\t\t\t}"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "isJitProvisioningChecked"
        },
        {
          "name": "title",
          "type": "string",
          "value": "Enable Just-in-Time provisioning"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "jitProvisionCheckboxId"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/GroupManagement/components/GroupManagementChecks.tsx",
      "props": [
        {
          "name": "dataQa",
          "type": "string",
          "value": "customizeDefaultUserGroupCheckboxId"
        },
        {
          "name": "id",
          "type": "string",
          "value": "customizeDefaultUserGroupCheckboxId"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<SolaceTypography mb={1}>\n\t\t\t\t\t\t<span style={{ fontWeight: \"bold\" }}>{userGroupManagement.customizeGroupMainText}</span>\n\t\t\t\t\t\t{userGroupManagement.customizeGroupSubText}\n\t\t\t\t\t</SolaceTypography>"
        },
        {
          "name": "name",
          "type": "string",
          "value": "customizeDefaultUserGroupCheckboxId"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "isCustomizeUserGroupChecked"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => customizeDefaultUserGroupCheck(e.value)"
        },
        {
          "name": "subTextProps",
          "type": "object",
          "value": "{\n\t\t\t\t\tlabel: (\n\t\t\t\t\t\t<SolaceSelectContainer>\n\t\t\t\t\t\t\t{isCustomizeUserGroupChecked ? (\n\t\t\t\t\t\t\t\t<SolaceSelectAutocomplete\n\t\t\t\t\t\t\t\t\tlabel={userGroupManagement.defaultUserGroupLabel}\n\t\t\t\t\t\t\t\t\thasErrors={true}\n\t\t\t\t\t\t\t\t\tid=\"customizeUserGroup\"\n\t\t\t\t\t\t\t\t\tname=\"customizeUserGroup\"\n\t\t\t\t\t\t\t\t\tdataQa=\"customizeUserGroup\"\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\thelperText={!selectedUserGroup ? userGroupManagement.selectDefaultGroup : \"\"}\n\t\t\t\t\t\t\t\t\tplaceholder={selectedUserGroup?.name}\n\t\t\t\t\t\t\t\t\toptions={userGroupFilter ? matchingUserGroups : getUserGroups(userGroupsDataResponse?.data)}\n\t\t\t\t\t\t\t\t\titemComponent={(item: SolaceSelectAutocompleteItemProps & { roles?: string[] }) => {\n\t\t\t\t\t\t\t\t\t\treturn SolaceSelectAutocompleteItem({\n\t\t\t\t\t\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\t\t\t\t\t\tsubText: item.roles?.join(\", \"),\n\t\t\t\t\t\t\t\t\t\t\tvalue: item.name\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\titemMappingCallback={(option) => option}\n\t\t\t\t\t\t\t\t\toptionsLabelCallback={getSolaceSelectAutocompleteOptionLabel}\n\t\t\t\t\t\t\t\t\tonChange={handleUserGroupSelectChange}\n\t\t\t\t\t\t\t\t\tfetchOptionsCallback={handleFetchProtocolOptionsCallback}\n\t\t\t\t\t\t\t\t\tisOptionEqualToValueCallback={isSolaceSelectAutocompleteOptionEqual}\n\t\t\t\t\t\t\t\t\twidth=\"30rem\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</SolaceSelectContainer>\n\t\t\t\t\t)\n\t\t\t\t}"
        },
        {
          "name": "title",
          "type": "string",
          "value": "Customize Default UserGroup"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/accountDetailsOverview/AccountExpiryBanner.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "eventMeshCheckbox"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventMeshCheckbox"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.overview.banner.eventMesh"
        },
        {
          "name": "name",
          "type": "string",
          "value": "eventMeshCheckbox"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => setIsEventMeshFeatureChecked(e.value)"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "en.overview.banner.eventMesh"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/accountDetailsOverview/AccountExpiryBanner.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "eventPortalCheckbox"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "eventPortalCheckbox"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "en.overview.banner.eventPortal"
        },
        {
          "name": "name",
          "type": "string",
          "value": "eventPortalCheckbox"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => setIsEventPortalFeatureChecked(e.value)"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "en.overview.banner.eventPortal"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/tokenManagement/components/CategorySection.tsx",
      "props": [
        {
          "name": "onChange",
          "type": "expression",
          "value": "onBulkPermissionCheckboxChange(readPermissions)"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "`${categoryName}-read`"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "readChecked"
        },
        {
          "name": "indeterminate",
          "type": "expression",
          "value": "!readChecked && readIndeterminate"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "!!readOnly"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/tokenManagement/components/CategorySection.tsx",
      "props": [
        {
          "name": "onChange",
          "type": "expression",
          "value": "onBulkPermissionCheckboxChange(writePermissions)"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "`${categoryName}-write`"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "writeChecked"
        },
        {
          "name": "indeterminate",
          "type": "expression",
          "value": "!writeChecked && writeIndeterminate"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "!!readOnly"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/tokenManagement/components/PermissionSet.tsx",
      "props": [
        {
          "name": "onChange",
          "type": "expression",
          "value": "onPermissionCheckboxChange(permission.id)"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "permission.id"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "!!isPermissionSelected[permission.id]"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "!!readOnly"
        },
        {
          "name": "dataQa",
          "type": "expression",
          "value": "permission.id"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/tokenManagement/components/PermissionSet.tsx",
      "props": [
        {
          "name": "onChange",
          "type": "expression",
          "value": "onBulkPermissionCheckboxChange(readPermissions)"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "`${categoryName}-read`"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "readChecked"
        },
        {
          "name": "indeterminate",
          "type": "expression",
          "value": "!readChecked && readIndeterminate"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "!!readOnly"
        }
      ]
    },
    {
      "filePath": "../../../maas-ui/micro-frontends/saas/src/pages/tokenManagement/components/PermissionSet.tsx",
      "props": [
        {
          "name": "onChange",
          "type": "expression",
          "value": "onBulkPermissionCheckboxChange(writePermissions)"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "`${categoryName}-write`"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "writeChecked"
        },
        {
          "name": "indeterminate",
          "type": "expression",
          "value": "!writeChecked && writeIndeterminate"
        },
        {
          "name": "readOnly",
          "type": "expression",
          "value": "!!readOnly"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/customers/components/CustomerDetailsOrgLimits.tsx",
      "props": [
        {
          "name": "checked",
          "type": "variable",
          "value": "hideUnusedLimitsRows"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "() => setHideUnusedLimitsRows((state) => !state)"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "customers.orgLimitsCard.hideUnusedLimit"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "customers.orgLimitsCard.hideUnusedLimit"
        },
        {
          "name": "data-qa",
          "type": "string",
          "value": "hideUnusedLimitsCheckboxQa"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/components/OrganizationMonitoringSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "field.value"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "() => field.onChange(!field.value)"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "field.name"
        },
        {
          "name": "title",
          "type": "string",
          "value": "Datadog Monitoring Enabled Checkbox"
        },
        {
          "name": "boldLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Datadog Monitoring Enabled"
        },
        {
          "name": "subTextProps",
          "type": "object",
          "value": "{\n\t\t\t\t\t\t\t\t\tlabel: \"Default for Datadog Monitoring Agent (Enabled/Disabled) when creating new services\"\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "monitoringEnabledCheckbox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/components/OrganizationMonitoringSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "field.value"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "() => field.onChange(!field.value)"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "field.name"
        },
        {
          "name": "title",
          "type": "string",
          "value": "Datadog Monitoring Proxy Enabled Checkbox"
        },
        {
          "name": "boldLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Datadog Monitoring Proxy Enabled"
        },
        {
          "name": "subTextProps",
          "type": "object",
          "value": "{\n\t\t\t\t\t\t\t\t\tlabel: \"Default for Datadog Monitoring Proxy server (Enabled/Disabled) for services\"\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "monitoringProxyEnabledCheckbox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/components/ServicesMonitoringConfigurations.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "field.value"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "(e) => {\n\t\t\t\t\t\t\t\t\tsetValue(\"PullDatadogAgentImage\", e.value);\n\t\t\t\t\t\t\t\t\tfield.onChange(e.value);\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "field.name"
        },
        {
          "name": "title",
          "type": "string",
          "value": "Pull Datadog Agent Image"
        },
        {
          "name": "boldLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Pull Datadog Agent Image"
        },
        {
          "name": "subTextProps",
          "type": "object",
          "value": "{\n\t\t\t\t\t\t\t\t\tlabel: \"Forces docker to pull latest datadog-agent image\"\n\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "PullDatadogAgentImageCheckbox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/components/ServicesMonitoringSettings.tsx",
      "props": [
        {
          "name": "checked",
          "type": "variable",
          "value": "checked"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "() => {\n\t\t\t\t\trow[propertyName] = !row[propertyName];\n\t\t\t\t}"
        },
        {
          "name": "name",
          "type": "variable",
          "value": "propertyName"
        },
        {
          "name": "readOnly",
          "type": "variable",
          "value": "readOnly"
        },
        {
          "name": "indeterminate",
          "type": "variable",
          "value": "indeterminate"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/insights/OnboardingConfiguration.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "field.value"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\t\t\tfield.onChange(!field.value);\n\t\t\t\t\t\t\t\t\t\t// update button should only show if there is a change in rmms status\n\t\t\t\t\t\t\t\t\t\tsetShowRMMSUpdateButton(\n\t\t\t\t\t\t\t\t\t\t\tddOrgData?.apiKey !== undefined && getValues(\"rmmsManaged\") !== monitoringOrgData?.isRMMS\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}"
        },
        {
          "name": "name",
          "type": "expression",
          "value": "field.name"
        },
        {
          "name": "title",
          "type": "string",
          "value": "Managed by RMMS Checkbox"
        },
        {
          "name": "largeLabel",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Managed by RMMS"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "rmmsManaged"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/runs/components/SystemControls.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "Automated Upgrades"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Automated Upgrades"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "autoChecked"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/runs/components/SystemControls.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "Customer Upgrades"
        },
        {
          "name": "label",
          "type": "string",
          "value": "Customer Upgrades"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "customerChecked"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/automaticUpgrades/runs/Runs.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "hideCompletedRuns"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "hideCompletedRuns"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "hide-completed-runs"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "() => handleToggleHideCompletedRuns()"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/search/SearchForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "all"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "searchStr.searchArea.types.all"
        },
        {
          "name": "checked",
          "type": "expression",
          "value": "infra && orgs && services && users"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "searchIndicesChangeHandler"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "search-all-checkbox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/search/SearchForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "infrastructure"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "searchStr.searchArea.types.infra"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "infra"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "searchIndicesChangeHandler"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "search-infra-checkbox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/search/SearchForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "organization"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "searchStr.searchArea.types.orgs"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "orgs"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "searchIndicesChangeHandler"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "search-orgs-checkbox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/search/SearchForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "service"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "searchStr.searchArea.types.services"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "services"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "searchIndicesChangeHandler"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "search-services-checkbox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/search/SearchForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "user"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "searchStr.searchArea.types.users"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "users"
        },
        {
          "name": "onChange",
          "type": "variable",
          "value": "searchIndicesChangeHandler"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "search-users-checkbox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/search/SearchForm.tsx",
      "props": [
        {
          "name": "name",
          "type": "string",
          "value": "useGlobalSearch"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "searchStr.searchArea.useGlobalSearch"
        },
        {
          "name": "checked",
          "type": "variable",
          "value": "globalSearchEnabled"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "() => {\n\t\t\t\t\t\t\t\tonGlobalSearchChange(!globalSearchEnabled);\n\t\t\t\t\t\t\t\tsetGlobalSearchEnabled(!globalSearchEnabled);\n\t\t\t\t\t\t\t}"
        },
        {
          "name": "dataQa",
          "type": "string",
          "value": "enable-global-search-checkbox"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/RequestSection.tsx",
      "props": [
        {
          "name": "id",
          "type": "string",
          "value": "requestCheckbox"
        },
        {
          "name": "label",
          "type": "expression",
          "value": "createBizOrganization.requests.checkBoxLabel"
        },
        {
          "name": "name",
          "type": "string",
          "value": "requestCheckbox"
        },
        {
          "name": "data-qa",
          "type": "string",
          "value": "requestCheckboxQa"
        },
        {
          "name": "onChange",
          "type": "function",
          "value": "({ value }) => setIsAdvancedInsightsChecked(value)"
        },
        {
          "name": "subTextProps",
          "type": "object",
          "value": "{\n\t\t\t\t\t\tlabel: `${createBizOrganization.requests.productCode}`,\n\t\t\t\t\t\tlight: true\n\t\t\t\t\t}"
        },
        {
          "name": "title",
          "type": "expression",
          "value": "createBizOrganization.requests.checkBoxTitle"
        },
        {
          "name": "disabled",
          "type": "variable",
          "value": "isFieldReadOnly"
        }
      ]
    },
    {
      "filePath": "../../../maas-ops-ui/micro-frontends/maas-ops-react/src/pages/createBizOrganization/components/reviewDialog/ReviewDialog.tsx",
      "props": [
        {
          "name": "checked",
          "type": "expression",
          "value": "isAdvancedInsightSelected ? true : false"
        },
        {
          "name": "readOnly",
          "type": "boolean",
          "value": "true"
        },
        {
          "name": "label",
          "type": "jsx",
          "value": "<Box marginTop={\"2px\"}>{createBizOrganization.requests.checkBoxLabel}</Box>"
        },
        {
          "name": "name",
          "type": "string",
          "value": "advInsights"
        },
        {
          "name": "title",
          "type": "string",
          "value": "Advanced Insights Checkbox"
        }
      ]
    }
  ]
}