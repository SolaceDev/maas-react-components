(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[18],{"./src/stories/data-display/chip/SolaceChip.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ChipWithLeadingIcon:()=>ChipWithLeadingIcon,ChipWithPopover:()=>ChipWithPopover,ChipWithTooltip:()=>ChipWithTooltip,DarkStandardChip:()=>DarkStandardChip,DefaultChip:()=>DefaultChip,DisabledDarkStandardChip:()=>DisabledDarkStandardChip,DisabledStandardChip:()=>DisabledStandardChip,TruncatedChip:()=>TruncatedChip,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../dist/index.js"),_storybook_test__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs");_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceChip.displayName="SolaceChip",_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTooltip.displayName="SolaceTooltip";const withSnapshotContainer=Story=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{id:"snapshot",style:{position:"absolute",top:0,left:0,width:"100vw",height:"100vh"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{margin:"16px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))),__WEBPACK_DEFAULT_EXPORT__={title:"Data Display/Chip/Standard",component:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceChip,parameters:{},argTypes:{label:{control:{type:"text"},description:"The content to be displayed in the chip. Can be a string or JSX element for more complex content like tooltips or icons. When using JSX elements, ensure they are accessible and provide appropriate interaction feedback.",table:{type:{summary:"string | React.ReactNode"},defaultValue:{summary:"undefined"}}},variant:{options:[_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.CHIP_VARIANT.FILLED,_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.CHIP_VARIANT.OUTLINED],control:{type:"radio"},description:"The visual style variant of the chip. 'filled' provides a solid background with high contrast, while 'outlined' provides a border-only style that's less visually prominent. Use 'filled' for primary categorization and 'outlined' for secondary or supplementary information.",table:{type:{summary:'"filled" | "outlined"'},defaultValue:{summary:'"filled"'}}},disabled:{control:{type:"boolean"},description:"If true, the chip will be disabled and non-interactive. Use this when the chip represents information that is not currently applicable or actionable based on the current application state.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},clickable:{control:{type:"boolean"},description:"If true, the chip will be clickable and show hover effects. Use this when the chip should trigger an action or navigation when clicked. When enabled, the chip will have appropriate cursor styling and interaction feedback.",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},mode:{options:[_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.MODES.LIGHT_MODE,_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.MODES.DARK_MODE],control:{type:"radio"},description:"The color mode for the chip. Controls the overall color scheme to match the application's theme. Use 'light' for standard interfaces and 'dark' for dark-themed applications or when the chip appears on dark backgrounds.",table:{type:{summary:'"light" | "dark"'},defaultValue:{summary:'"light"'}}},icon:{control:!1,description:"Optional icon to display at the beginning of the chip. Should be a React element, typically an icon component. The icon will be automatically sized and positioned appropriately within the chip layout.",table:{type:{summary:"React.ReactElement"},defaultValue:{summary:"undefined"}}},maxWidth:{control:{type:"number"},description:"Maximum width of the chip in pixels. When the content exceeds this width, it will be truncated with an ellipsis. Use this to maintain consistent layout when chip content varies in length.",table:{type:{summary:"number"},defaultValue:{summary:"undefined"}}},onClick:{control:!1,description:"Callback function that fires when the chip is clicked. Only functional when the 'clickable' prop is true. The function receives the click event as its parameter."},dataQa:{control:{type:"text"},description:"Data attribute for QA testing. Use this to identify chips during automated testing.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}},dataTags:{control:{type:"text"},description:"Data attribute for additional tagging. Use this for analytics, tracking, or additional metadata.",table:{type:{summary:"string"},defaultValue:{summary:"undefined"}}}}},CustomPopoverText=()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{style:{fontWeight:200}},"Shared From"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",{style:{fontWeight:"bold"}},"Domain ABCDEFGHIJKL")),Template=args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceChip,args),DefaultChip=Template.bind({});DefaultChip.args={label:"Default Chip"};const ChipWithPopover=(args=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTooltip,{variant:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.TooltipVariant.rich,title:react__WEBPACK_IMPORTED_MODULE_0__.createElement(CustomPopoverText,null),placement:"right-end"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceChip,args)))).bind({});ChipWithPopover.args={label:"Chip With Popover"},ChipWithPopover.decorators=[withSnapshotContainer],ChipWithPopover.play=async _ref=>{let{canvasElement}=_ref;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),targetElement=await canvas.getByText("Chip With Popover");await _storybook_test__WEBPACK_IMPORTED_MODULE_2__.mV.hover(targetElement)};const ChipWithTooltip=Template.bind({});ChipWithTooltip.args={label:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTooltip,{title:"This is a tooltip when you hover over an choice chip"},"Hover Over Me")},ChipWithTooltip.decorators=[withSnapshotContainer],ChipWithTooltip.play=async _ref2=>{let{canvasElement}=_ref2;const canvas=(0,_storybook_test__WEBPACK_IMPORTED_MODULE_2__.uh)(canvasElement),targetElement=await canvas.getByText("Hover Over Me");await _storybook_test__WEBPACK_IMPORTED_MODULE_2__.mV.hover(targetElement)};const TruncatedChip=Template.bind({});TruncatedChip.args={label:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.SolaceTooltip,{title:"Choice Chip With Long Content"},"Choice Chip With Long Content"),maxWidth:100};const ChipWithLeadingIcon=Template.bind({});ChipWithLeadingIcon.args={label:"Chip with icon",icon:react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.InfoIcon,{size:14,fill:"green"})};const DisabledStandardChip=Template.bind({});DisabledStandardChip.args={label:"Disabled Standard Chip",disabled:!0};const DarkStandardChip=Template.bind({});DarkStandardChip.args={mode:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.MODES.DARK_MODE,label:"Dark Standard Chip"};const DisabledDarkStandardChip=Template.bind({});DisabledDarkStandardChip.args={mode:_SolaceDev_maas_react_components__WEBPACK_IMPORTED_MODULE_1__.MODES.DARK_MODE,disabled:!0,label:"Disabled Dark Standard Chip"},DefaultChip.parameters={...DefaultChip.parameters,docs:{...DefaultChip.parameters?.docs,source:{originalSource:"args => <SolaceChip {...args} />",...DefaultChip.parameters?.docs?.source}}},ChipWithPopover.parameters={...ChipWithPopover.parameters,docs:{...ChipWithPopover.parameters?.docs,source:{originalSource:'args => {\n  return <SolaceTooltip variant={TooltipVariant.rich} title={<CustomPopoverText />} placement="right-end">\n            <span>\n                <SolaceChip {...args} />\n            </span>\n        </SolaceTooltip>;\n}',...ChipWithPopover.parameters?.docs?.source}}},ChipWithTooltip.parameters={...ChipWithTooltip.parameters,docs:{...ChipWithTooltip.parameters?.docs,source:{originalSource:"args => <SolaceChip {...args} />",...ChipWithTooltip.parameters?.docs?.source}}},TruncatedChip.parameters={...TruncatedChip.parameters,docs:{...TruncatedChip.parameters?.docs,source:{originalSource:"args => <SolaceChip {...args} />",...TruncatedChip.parameters?.docs?.source}}},ChipWithLeadingIcon.parameters={...ChipWithLeadingIcon.parameters,docs:{...ChipWithLeadingIcon.parameters?.docs,source:{originalSource:"args => <SolaceChip {...args} />",...ChipWithLeadingIcon.parameters?.docs?.source}}},DisabledStandardChip.parameters={...DisabledStandardChip.parameters,docs:{...DisabledStandardChip.parameters?.docs,source:{originalSource:"args => <SolaceChip {...args} />",...DisabledStandardChip.parameters?.docs?.source}}},DarkStandardChip.parameters={...DarkStandardChip.parameters,docs:{...DarkStandardChip.parameters?.docs,source:{originalSource:"args => <SolaceChip {...args} />",...DarkStandardChip.parameters?.docs?.source}}},DisabledDarkStandardChip.parameters={...DisabledDarkStandardChip.parameters,docs:{...DisabledDarkStandardChip.parameters?.docs,source:{originalSource:"args => <SolaceChip {...args} />",...DisabledDarkStandardChip.parameters?.docs?.source}}};const __namedExportsOrder=["DefaultChip","ChipWithPopover","ChipWithTooltip","TruncatedChip","ChipWithLeadingIcon","DisabledStandardChip","DarkStandardChip","DisabledDarkStandardChip"]},"./node_modules/@storybook/test/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/test/dist sync recursive",module.exports=webpackEmptyContext}}]);