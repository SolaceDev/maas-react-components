[
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/components/atoms/AtomCheckBox.tsx",
    "props": [
      {
        "name": "...",
        "type": "spread",
        "value": "props"
      },
      {
        "name": "id",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "dataQa",
        "type": "variable",
        "value": "name"
      },
      {
        "name": "hasErrors",
        "type": "variable",
        "value": "hasErrors"
      },
      {
        "name": "helperText",
        "type": "expression",
        "value": "errorText || helperText"
      },
      {
        "name": "checked",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/RotatePasswordsCard.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "t({ id: \"id_mc_manager\", message: \"Rotate Mission Control Manager permissions\" })"
      },
      {
        "name": "name",
        "type": "string",
        "value": "mc_manager"
      },
      {
        "name": "checked",
        "type": "expression",
        "value": "usernames.includes(\"manager\")"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleManagerChange"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "checkbox_mc_manager"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/RotatePasswordsCard.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "t({ id: \"id_mc_editor\", message: \"Rotate Mission Control Editor permissions\" })"
      },
      {
        "name": "name",
        "type": "string",
        "value": "mc_editor"
      },
      {
        "name": "checked",
        "type": "expression",
        "value": "usernames.includes(\"admin\")"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleEditorChange"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "checkbox_mc_editor"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/details/components/manage/cards/RotatePasswordsCard.tsx",
    "props": [
      {
        "name": "label",
        "type": "expression",
        "value": "t({ id: \"id_mc_viewer\", message: \"Rotate Mission Control Viewer permissions\" })"
      },
      {
        "name": "name",
        "type": "string",
        "value": "mc_viewer"
      },
      {
        "name": "checked",
        "type": "expression",
        "value": "usernames.includes(\"viewer\")"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleViewerChange"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "checkbox_mc_viewer"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/list/Services.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "showMyServices"
      },
      {
        "name": "name",
        "type": "string",
        "value": "showMyServices"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "services-show-mine"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "t({ id: \"id_only_my_services\", message: \"Only show my services\" })"
      },
      {
        "name": "checked",
        "type": "variable",
        "value": "userOnly"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleSetUserOnly"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/compare/CompareServices.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "showDiffs"
      },
      {
        "name": "name",
        "type": "string",
        "value": "showDiffs"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "t({ id: \"id_show_differences\", message: \"Show only differences\" })"
      },
      {
        "name": "checked",
        "type": "variable",
        "value": "showDiffs"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleShowDiffs"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldMateLinkEncryption.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "mateLinkEncryption"
      },
      {
        "name": "name",
        "type": "string",
        "value": "mateLinkEncryption"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "mateLinkEncryption"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "t({ id: \"id_mate_link_label\", message: \"Enable mate-link encryption\" })"
      },
      {
        "name": "boldLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "subTextProps",
        "type": "object",
        "value": "{\n\t\t\t\t\t\tlabel: t({ id: \"id_mate_link_text\", message: \"This will encrypt the communication between the primary and backup brokers in a HA setup.\" }),\n\t\t\t\t\t\tlight: true\n\t\t\t\t\t}"
      },
      {
        "name": "checked",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "readOnly",
        "type": "variable",
        "value": "isCloning"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldCloneCertificateAuth.tsx",
    "props": [
      {
        "name": "id",
        "type": "string",
        "value": "cloneCertificateAuthorities"
      },
      {
        "name": "dataQa",
        "type": "string",
        "value": "cloneCertificateAuthorities"
      },
      {
        "name": "name",
        "type": "string",
        "value": "cloneCertificateAuthorities"
      },
      {
        "name": "label",
        "type": "expression",
        "value": "t({ id: \"id_clone_cert_auth\", message: \"Duplicate all Client and Domain Certificate Authorities\" })"
      },
      {
        "name": "boldLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "subTextProps",
        "type": "object",
        "value": "{\n\t\t\t\t\tlabel: <Trans id=\"id_clone_cert_auth_info\">This will copy all certificates existing on the source event broker service to the new event broker service.</Trans>,\n\t\t\t\t\tlight: true\n\t\t\t\t}"
      },
      {
        "name": "checked",
        "type": "variable",
        "value": "value"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleChange"
      }
    ]
  },
  {
    "filePath": "../../../maas-ui/micro-frontends/mc/src/pages/services/create/components/FieldPort.tsx",
    "props": [
      {
        "name": "id",
        "type": "variable",
        "value": "nameCheck"
      },
      {
        "name": "name",
        "type": "variable",
        "value": "nameCheck"
      },
      {
        "name": "dataQa",
        "type": "variable",
        "value": "nameCheck"
      },
      {
        "name": "label",
        "type": "jsx",
        "value": "<SolaceLabel htmlForId={nameCheck} noWrap id={`${nameCheck}-label`}>\n\t\t\t\t\t\t\t{isNodePortEnabled ? `Enable ${meta.label}` : t({ id: \"id_port_label\", message: `Enable ${meta.label}, use port:` })}\n\t\t\t\t\t\t</SolaceLabel>"
      },
      {
        "name": "boldLabel",
        "type": "boolean",
        "value": "true"
      },
      {
        "name": "checked",
        "type": "expression",
        "value": "!disabled"
      },
      {
        "name": "readOnly",
        "type": "expression",
        "value": "checkboxDisabled || !isPortDisablingEnabled"
      },
      {
        "name": "onChange",
        "type": "variable",
        "value": "handleProtocolToggle"
      }
    ]
  }
]